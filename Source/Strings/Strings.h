////////////////////////////////////////////////////////////////////////////////////////////
// THIS C++ FILE IS GENERATED DO NOT EDIT. RUN GenerateDataFiles.py TO GENERATE THIS FILE //
////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include "Engine/Localization/LocalizedString.h"

namespace Strings
{
    
	class Cipher_Ascii : public LocalizedString
	{
	public:
		static Cipher_Ascii* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Ascii();
		virtual ~Cipher_Ascii() = default;
	};

	class Cipher_AsciiTable : public LocalizedString
	{
	public:
		static Cipher_AsciiTable* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_AsciiTable();
		virtual ~Cipher_AsciiTable() = default;
	};

	class Cipher_BasicOperators : public LocalizedString
	{
	public:
		static Cipher_BasicOperators* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_BasicOperators();
		virtual ~Cipher_BasicOperators() = default;
	};

	class Cipher_BinaryOperators : public LocalizedString
	{
	public:
		static Cipher_BinaryOperators* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_BinaryOperators();
		virtual ~Cipher_BinaryOperators() = default;
	};

	class Cipher_BonusItem : public LocalizedString
	{
	public:
		static Cipher_BonusItem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_BonusItem();
		virtual ~Cipher_BonusItem() = default;
	};

	class Cipher_ChooseANewValue : public LocalizedString
	{
	public:
		static Cipher_ChooseANewValue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_ChooseANewValue();
		virtual ~Cipher_ChooseANewValue() = default;
	};

	class Cipher_Cipher : public LocalizedString
	{
	public:
		static Cipher_Cipher* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Cipher();
		virtual ~Cipher_Cipher() = default;
	};

	class Cipher_CipherCaps : public LocalizedString
	{
	public:
		static Cipher_CipherCaps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_CipherCaps();
		virtual ~Cipher_CipherCaps() = default;
	};

	class Cipher_Comparisons : public LocalizedString
	{
	public:
		static Cipher_Comparisons* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Comparisons();
		virtual ~Cipher_Comparisons() = default;
	};

	class Cipher_Easy : public LocalizedString
	{
	public:
		static Cipher_Easy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Easy();
		virtual ~Cipher_Easy() = default;
	};

	class Cipher_EnterAValue : public LocalizedString
	{
	public:
		static Cipher_EnterAValue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_EnterAValue();
		virtual ~Cipher_EnterAValue() = default;
	};

	class Cipher_Hard : public LocalizedString
	{
	public:
		static Cipher_Hard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Hard();
		virtual ~Cipher_Hard() = default;
	};

	class Cipher_Inputs : public LocalizedString
	{
	public:
		static Cipher_Inputs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Inputs();
		virtual ~Cipher_Inputs() = default;
	};

	class Cipher_Operations_ADD : public LocalizedString
	{
	public:
		static Cipher_Operations_ADD* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_ADD();
		virtual ~Cipher_Operations_ADD() = default;
	};

	class Cipher_Operations_AND : public LocalizedString
	{
	public:
		static Cipher_Operations_AND* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_AND();
		virtual ~Cipher_Operations_AND() = default;
	};

	class Cipher_Operations_BruteForce : public LocalizedString
	{
	public:
		static Cipher_Operations_BruteForce* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_BruteForce();
		virtual ~Cipher_Operations_BruteForce() = default;
	};

	class Cipher_Operations_CSHL : public LocalizedString
	{
	public:
		static Cipher_Operations_CSHL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_CSHL();
		virtual ~Cipher_Operations_CSHL() = default;
	};

	class Cipher_Operations_CSHR : public LocalizedString
	{
	public:
		static Cipher_Operations_CSHR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_CSHR();
		virtual ~Cipher_Operations_CSHR() = default;
	};

	class Cipher_Operations_DIV : public LocalizedString
	{
	public:
		static Cipher_Operations_DIV* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_DIV();
		virtual ~Cipher_Operations_DIV() = default;
	};

	class Cipher_Operations_INV : public LocalizedString
	{
	public:
		static Cipher_Operations_INV* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_INV();
		virtual ~Cipher_Operations_INV() = default;
	};

	class Cipher_Operations_Immediate : public LocalizedString
	{
	public:
		static Cipher_Operations_Immediate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_Immediate();
		virtual ~Cipher_Operations_Immediate() = default;
	};

	class Cipher_Operations_MOD : public LocalizedString
	{
	public:
		static Cipher_Operations_MOD* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_MOD();
		virtual ~Cipher_Operations_MOD() = default;
	};

	class Cipher_Operations_MOV : public LocalizedString
	{
	public:
		static Cipher_Operations_MOV* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_MOV();
		virtual ~Cipher_Operations_MOV() = default;
	};

	class Cipher_Operations_MUL : public LocalizedString
	{
	public:
		static Cipher_Operations_MUL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_MUL();
		virtual ~Cipher_Operations_MUL() = default;
	};

	class Cipher_Operations_OR : public LocalizedString
	{
	public:
		static Cipher_Operations_OR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_OR();
		virtual ~Cipher_Operations_OR() = default;
	};

	class Cipher_Operations_SHL : public LocalizedString
	{
	public:
		static Cipher_Operations_SHL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_SHL();
		virtual ~Cipher_Operations_SHL() = default;
	};

	class Cipher_Operations_SHR : public LocalizedString
	{
	public:
		static Cipher_Operations_SHR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_SHR();
		virtual ~Cipher_Operations_SHR() = default;
	};

	class Cipher_Operations_SUB : public LocalizedString
	{
	public:
		static Cipher_Operations_SUB* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_SUB();
		virtual ~Cipher_Operations_SUB() = default;
	};

	class Cipher_Operations_XOR : public LocalizedString
	{
	public:
		static Cipher_Operations_XOR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Operations_XOR();
		virtual ~Cipher_Operations_XOR() = default;
	};

	class Cipher_Outputs : public LocalizedString
	{
	public:
		static Cipher_Outputs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Outputs();
		virtual ~Cipher_Outputs() = default;
	};

	class Cipher_SelectAChapter : public LocalizedString
	{
	public:
		static Cipher_SelectAChapter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_SelectAChapter();
		virtual ~Cipher_SelectAChapter() = default;
	};

	class Cipher_Special : public LocalizedString
	{
	public:
		static Cipher_Special* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Special();
		virtual ~Cipher_Special() = default;
	};

	class Cipher_Test : public LocalizedString
	{
	public:
		static Cipher_Test* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Test();
		virtual ~Cipher_Test() = default;
	};

	class Cipher_Tools : public LocalizedString
	{
	public:
		static Cipher_Tools* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tools();
		virtual ~Cipher_Tools() = default;
	};

	class Cipher_Tutorials_Addition_A_DisplayedAs : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Addition_A_DisplayedAs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Addition_A_DisplayedAs();
		virtual ~Cipher_Tutorials_Addition_A_DisplayedAs() = default;
	};

	class Cipher_Tutorials_Addition_B_ChangeDataType : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Addition_B_ChangeDataType* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Addition_B_ChangeDataType();
		virtual ~Cipher_Tutorials_Addition_B_ChangeDataType() = default;
	};

	class Cipher_Tutorials_Addition_C_ConnectComponents : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Addition_C_ConnectComponents* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Addition_C_ConnectComponents();
		virtual ~Cipher_Tutorials_Addition_C_ConnectComponents() = default;
	};

	class Cipher_Tutorials_Connect_A_ChestsLocked : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Connect_A_ChestsLocked* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Connect_A_ChestsLocked();
		virtual ~Cipher_Tutorials_Connect_A_ChestsLocked() = default;
	};

	class Cipher_Tutorials_Connect_B_ThisOneIsEasy : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Connect_B_ThisOneIsEasy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Connect_B_ThisOneIsEasy();
		virtual ~Cipher_Tutorials_Connect_B_ThisOneIsEasy() = default;
	};

	class Cipher_Tutorials_Connect_C_Unlock : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Connect_C_Unlock* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Connect_C_Unlock();
		virtual ~Cipher_Tutorials_Connect_C_Unlock() = default;
	};

	class Cipher_Tutorials_ExtraTokens_A_ExtraTokens : public LocalizedString
	{
	public:
		static Cipher_Tutorials_ExtraTokens_A_ExtraTokens* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_ExtraTokens_A_ExtraTokens();
		virtual ~Cipher_Tutorials_ExtraTokens_A_ExtraTokens() = default;
	};

	class Cipher_Tutorials_Overflow_A_8BitNumbers : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Overflow_A_8BitNumbers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Overflow_A_8BitNumbers();
		virtual ~Cipher_Tutorials_Overflow_A_8BitNumbers() = default;
	};

	class Cipher_Tutorials_Overflow_B_PropertyOf8Bit : public LocalizedString
	{
	public:
		static Cipher_Tutorials_Overflow_B_PropertyOf8Bit* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_Overflow_B_PropertyOf8Bit();
		virtual ~Cipher_Tutorials_Overflow_B_PropertyOf8Bit() = default;
	};

	class Cipher_Tutorials_ShiftLeft_A_ShiftLeft : public LocalizedString
	{
	public:
		static Cipher_Tutorials_ShiftLeft_A_ShiftLeft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_ShiftLeft_A_ShiftLeft();
		virtual ~Cipher_Tutorials_ShiftLeft_A_ShiftLeft() = default;
	};

	class Cipher_Tutorials_ShiftLeft_B_PropertyOfShl : public LocalizedString
	{
	public:
		static Cipher_Tutorials_ShiftLeft_B_PropertyOfShl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Tutorials_ShiftLeft_B_PropertyOfShl();
		virtual ~Cipher_Tutorials_ShiftLeft_B_PropertyOfShl() = default;
	};

	class Cipher_Unlock : public LocalizedString
	{
	public:
		static Cipher_Unlock* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_Unlock();
		virtual ~Cipher_Unlock() = default;
	};

	class Cipher_ValueEditor : public LocalizedString
	{
	public:
		static Cipher_ValueEditor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Cipher_ValueEditor();
		virtual ~Cipher_ValueEditor() = default;
	};

	class Common_Brackets : public LocalizedString
	{
	public:
		static Common_Brackets* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Brackets();
		virtual ~Common_Brackets() = default;
	};

	class Common_Comment : public LocalizedString
	{
	public:
		static Common_Comment* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Comment();
		virtual ~Common_Comment() = default;
	};

	class Common_CommentAsm : public LocalizedString
	{
	public:
		static Common_CommentAsm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_CommentAsm();
		virtual ~Common_CommentAsm() = default;
	};

	class Common_Concat : public LocalizedString
	{
	public:
		static Common_Concat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Concat();
		virtual ~Common_Concat() = default;
	};

	class Common_ConcatSpaced : public LocalizedString
	{
	public:
		static Common_ConcatSpaced* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_ConcatSpaced();
		virtual ~Common_ConcatSpaced() = default;
	};

	class Common_Constant : public LocalizedString
	{
	public:
		static Common_Constant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Constant();
		virtual ~Common_Constant() = default;
	};

	class Common_ConstantNewline : public LocalizedString
	{
	public:
		static Common_ConstantNewline* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_ConstantNewline();
		virtual ~Common_ConstantNewline() = default;
	};

	class Common_ConstantNewlineNewline : public LocalizedString
	{
	public:
		static Common_ConstantNewlineNewline* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_ConstantNewlineNewline();
		virtual ~Common_ConstantNewlineNewline() = default;
	};

	class Common_ConstantTimes : public LocalizedString
	{
	public:
		static Common_ConstantTimes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_ConstantTimes();
		virtual ~Common_ConstantTimes() = default;
	};

	class Common_Dash : public LocalizedString
	{
	public:
		static Common_Dash* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Dash();
		virtual ~Common_Dash() = default;
	};

	class Common_Empty : public LocalizedString
	{
	public:
		static Common_Empty* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Empty();
		virtual ~Common_Empty() = default;
	};

	class Common_Infinity : public LocalizedString
	{
	public:
		static Common_Infinity* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Infinity();
		virtual ~Common_Infinity() = default;
	};

	class Common_MinusConstant : public LocalizedString
	{
	public:
		static Common_MinusConstant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_MinusConstant();
		virtual ~Common_MinusConstant() = default;
	};

	class Common_MinusPointerOffset : public LocalizedString
	{
	public:
		static Common_MinusPointerOffset* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_MinusPointerOffset();
		virtual ~Common_MinusPointerOffset() = default;
	};

	class Common_NativeLanguage : public LocalizedString
	{
	public:
		static Common_NativeLanguage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_NativeLanguage();
		virtual ~Common_NativeLanguage() = default;
	};

	class Common_Newline : public LocalizedString
	{
	public:
		static Common_Newline* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Newline();
		virtual ~Common_Newline() = default;
	};

	class Common_NewlineNewline : public LocalizedString
	{
	public:
		static Common_NewlineNewline* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_NewlineNewline();
		virtual ~Common_NewlineNewline() = default;
	};

	class Common_Parenthesis : public LocalizedString
	{
	public:
		static Common_Parenthesis* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Parenthesis();
		virtual ~Common_Parenthesis() = default;
	};

	class Common_PlusConstant : public LocalizedString
	{
	public:
		static Common_PlusConstant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_PlusConstant();
		virtual ~Common_PlusConstant() = default;
	};

	class Common_PlusPointerOffset : public LocalizedString
	{
	public:
		static Common_PlusPointerOffset* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_PlusPointerOffset();
		virtual ~Common_PlusPointerOffset() = default;
	};

	class Common_Squally : public LocalizedString
	{
	public:
		static Common_Squally* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Squally();
		virtual ~Common_Squally() = default;
	};

	class Common_TimesConstant : public LocalizedString
	{
	public:
		static Common_TimesConstant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_TimesConstant();
		virtual ~Common_TimesConstant() = default;
	};

	class Common_Triconcat : public LocalizedString
	{
	public:
		static Common_Triconcat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_Triconcat();
		virtual ~Common_Triconcat() = default;
	};

	class Common_TriconcatSpaced : public LocalizedString
	{
	public:
		static Common_TriconcatSpaced* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_TriconcatSpaced();
		virtual ~Common_TriconcatSpaced() = default;
	};

	class Common_XArrowY : public LocalizedString
	{
	public:
		static Common_XArrowY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XArrowY();
		virtual ~Common_XArrowY() = default;
	};

	class Common_XColonY : public LocalizedString
	{
	public:
		static Common_XColonY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XColonY();
		virtual ~Common_XColonY() = default;
	};

	class Common_XColonYSpaced : public LocalizedString
	{
	public:
		static Common_XColonYSpaced* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XColonYSpaced();
		virtual ~Common_XColonYSpaced() = default;
	};

	class Common_XEqualsY : public LocalizedString
	{
	public:
		static Common_XEqualsY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XEqualsY();
		virtual ~Common_XEqualsY() = default;
	};

	class Common_XOverY : public LocalizedString
	{
	public:
		static Common_XOverY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XOverY();
		virtual ~Common_XOverY() = default;
	};

	class Common_XTimesY : public LocalizedString
	{
	public:
		static Common_XTimesY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Common_XTimesY();
		virtual ~Common_XTimesY() = default;
	};

	class Debugging_CameraX : public LocalizedString
	{
	public:
		static Debugging_CameraX* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Debugging_CameraX();
		virtual ~Debugging_CameraX() = default;
	};

	class Debugging_CameraY : public LocalizedString
	{
	public:
		static Debugging_CameraY* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Debugging_CameraY();
		virtual ~Debugging_CameraY() = default;
	};

	class Debugging_CameraZoom : public LocalizedString
	{
	public:
		static Debugging_CameraZoom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Debugging_CameraZoom();
		virtual ~Debugging_CameraZoom() = default;
	};

	class Hexus_Actions_ChooseRow : public LocalizedString
	{
	public:
		static Hexus_Actions_ChooseRow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Actions_ChooseRow();
		virtual ~Hexus_Actions_ChooseRow() = default;
	};

	class Hexus_Actions_ChooseSourceCard : public LocalizedString
	{
	public:
		static Hexus_Actions_ChooseSourceCard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Actions_ChooseSourceCard();
		virtual ~Hexus_Actions_ChooseSourceCard() = default;
	};

	class Hexus_Actions_ChooseTargetCard : public LocalizedString
	{
	public:
		static Hexus_Actions_ChooseTargetCard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Actions_ChooseTargetCard();
		virtual ~Hexus_Actions_ChooseTargetCard() = default;
	};

	class Hexus_AssemblyHelpText : public LocalizedString
	{
	public:
		static Hexus_AssemblyHelpText* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_AssemblyHelpText();
		virtual ~Hexus_AssemblyHelpText() = default;
	};

	class Hexus_Banners_Challenge : public LocalizedString
	{
	public:
		static Hexus_Banners_Challenge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_Challenge();
		virtual ~Hexus_Banners_Challenge() = default;
	};

	class Hexus_Banners_Defeat : public LocalizedString
	{
	public:
		static Hexus_Banners_Defeat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_Defeat();
		virtual ~Hexus_Banners_Defeat() = default;
	};

	class Hexus_Banners_Draw : public LocalizedString
	{
	public:
		static Hexus_Banners_Draw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_Draw();
		virtual ~Hexus_Banners_Draw() = default;
	};

	class Hexus_Banners_FinalRound : public LocalizedString
	{
	public:
		static Hexus_Banners_FinalRound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_FinalRound();
		virtual ~Hexus_Banners_FinalRound() = default;
	};

	class Hexus_Banners_LastStand : public LocalizedString
	{
	public:
		static Hexus_Banners_LastStand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_LastStand();
		virtual ~Hexus_Banners_LastStand() = default;
	};

	class Hexus_Banners_NextRound : public LocalizedString
	{
	public:
		static Hexus_Banners_NextRound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_NextRound();
		virtual ~Hexus_Banners_NextRound() = default;
	};

	class Hexus_Banners_OpponentFirst : public LocalizedString
	{
	public:
		static Hexus_Banners_OpponentFirst* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_OpponentFirst();
		virtual ~Hexus_Banners_OpponentFirst() = default;
	};

	class Hexus_Banners_OpponentPassed : public LocalizedString
	{
	public:
		static Hexus_Banners_OpponentPassed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_OpponentPassed();
		virtual ~Hexus_Banners_OpponentPassed() = default;
	};

	class Hexus_Banners_OpponentRoundWin : public LocalizedString
	{
	public:
		static Hexus_Banners_OpponentRoundWin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_OpponentRoundWin();
		virtual ~Hexus_Banners_OpponentRoundWin() = default;
	};

	class Hexus_Banners_OpponentsTurn : public LocalizedString
	{
	public:
		static Hexus_Banners_OpponentsTurn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_OpponentsTurn();
		virtual ~Hexus_Banners_OpponentsTurn() = default;
	};

	class Hexus_Banners_PlayerFirst : public LocalizedString
	{
	public:
		static Hexus_Banners_PlayerFirst* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_PlayerFirst();
		virtual ~Hexus_Banners_PlayerFirst() = default;
	};

	class Hexus_Banners_PlayerPassed : public LocalizedString
	{
	public:
		static Hexus_Banners_PlayerPassed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_PlayerPassed();
		virtual ~Hexus_Banners_PlayerPassed() = default;
	};

	class Hexus_Banners_PlayerRoundWin : public LocalizedString
	{
	public:
		static Hexus_Banners_PlayerRoundWin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_PlayerRoundWin();
		virtual ~Hexus_Banners_PlayerRoundWin() = default;
	};

	class Hexus_Banners_PlayerTurn : public LocalizedString
	{
	public:
		static Hexus_Banners_PlayerTurn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_PlayerTurn();
		virtual ~Hexus_Banners_PlayerTurn() = default;
	};

	class Hexus_Banners_RemainingCardReplacements : public LocalizedString
	{
	public:
		static Hexus_Banners_RemainingCardReplacements* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_RemainingCardReplacements();
		virtual ~Hexus_Banners_RemainingCardReplacements() = default;
	};

	class Hexus_Banners_RoundStart : public LocalizedString
	{
	public:
		static Hexus_Banners_RoundStart* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_RoundStart();
		virtual ~Hexus_Banners_RoundStart() = default;
	};

	class Hexus_Banners_RoundTied : public LocalizedString
	{
	public:
		static Hexus_Banners_RoundTied* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_RoundTied();
		virtual ~Hexus_Banners_RoundTied() = default;
	};

	class Hexus_Banners_Victory : public LocalizedString
	{
	public:
		static Hexus_Banners_Victory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Banners_Victory();
		virtual ~Hexus_Banners_Victory() = default;
	};

	class Hexus_BinCards : public LocalizedString
	{
	public:
		static Hexus_BinCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_BinCards();
		virtual ~Hexus_BinCards() = default;
	};

	class Hexus_BinHeader : public LocalizedString
	{
	public:
		static Hexus_BinHeader* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_BinHeader();
		virtual ~Hexus_BinHeader() = default;
	};

	class Hexus_BinLabel : public LocalizedString
	{
	public:
		static Hexus_BinLabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_BinLabel();
		virtual ~Hexus_BinLabel() = default;
	};

	class Hexus_BinaryMax : public LocalizedString
	{
	public:
		static Hexus_BinaryMax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_BinaryMax();
		virtual ~Hexus_BinaryMax() = default;
	};

	class Hexus_CardDescriptionsLong_Absorb : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Absorb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Absorb();
		virtual ~Hexus_CardDescriptionsLong_Absorb() = default;
	};

	class Hexus_CardDescriptionsLong_Addition : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Addition* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Addition();
		virtual ~Hexus_CardDescriptionsLong_Addition() = default;
	};

	class Hexus_CardDescriptionsLong_BinDecHex : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_BinDecHex* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_BinDecHex();
		virtual ~Hexus_CardDescriptionsLong_BinDecHex() = default;
	};

	class Hexus_CardDescriptionsLong_BonusMoves : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_BonusMoves* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_BonusMoves();
		virtual ~Hexus_CardDescriptionsLong_BonusMoves() = default;
	};

	class Hexus_CardDescriptionsLong_DrawEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_DrawEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_DrawEffect();
		virtual ~Hexus_CardDescriptionsLong_DrawEffect() = default;
	};

	class Hexus_CardDescriptionsLong_Flip1 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Flip1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Flip1();
		virtual ~Hexus_CardDescriptionsLong_Flip1() = default;
	};

	class Hexus_CardDescriptionsLong_Flip2 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Flip2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Flip2();
		virtual ~Hexus_CardDescriptionsLong_Flip2() = default;
	};

	class Hexus_CardDescriptionsLong_Flip3 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Flip3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Flip3();
		virtual ~Hexus_CardDescriptionsLong_Flip3() = default;
	};

	class Hexus_CardDescriptionsLong_Flip4 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Flip4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Flip4();
		virtual ~Hexus_CardDescriptionsLong_Flip4() = default;
	};

	class Hexus_CardDescriptionsLong_Greed : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Greed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Greed();
		virtual ~Hexus_CardDescriptionsLong_Greed() = default;
	};

	class Hexus_CardDescriptionsLong_Horde : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Horde* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Horde();
		virtual ~Hexus_CardDescriptionsLong_Horde() = default;
	};

	class Hexus_CardDescriptionsLong_Inverse : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Inverse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Inverse();
		virtual ~Hexus_CardDescriptionsLong_Inverse() = default;
	};

	class Hexus_CardDescriptionsLong_Kill : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Kill* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Kill();
		virtual ~Hexus_CardDescriptionsLong_Kill() = default;
	};

	class Hexus_CardDescriptionsLong_LogicalAnd : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_LogicalAnd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_LogicalAnd();
		virtual ~Hexus_CardDescriptionsLong_LogicalAnd() = default;
	};

	class Hexus_CardDescriptionsLong_LogicalOr : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_LogicalOr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_LogicalOr();
		virtual ~Hexus_CardDescriptionsLong_LogicalOr() = default;
	};

	class Hexus_CardDescriptionsLong_LogicalXor : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_LogicalXor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_LogicalXor();
		virtual ~Hexus_CardDescriptionsLong_LogicalXor() = default;
	};

	class Hexus_CardDescriptionsLong_Mov : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Mov();
		virtual ~Hexus_CardDescriptionsLong_Mov() = default;
	};

	class Hexus_CardDescriptionsLong_NoDestroyEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_NoDestroyEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_NoDestroyEffect();
		virtual ~Hexus_CardDescriptionsLong_NoDestroyEffect() = default;
	};

	class Hexus_CardDescriptionsLong_Peek : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Peek* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Peek();
		virtual ~Hexus_CardDescriptionsLong_Peek() = default;
	};

	class Hexus_CardDescriptionsLong_ReturnAfterRound : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ReturnAfterRound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ReturnAfterRound();
		virtual ~Hexus_CardDescriptionsLong_ReturnAfterRound() = default;
	};

	class Hexus_CardDescriptionsLong_ReturnToHand : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ReturnToHand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ReturnToHand();
		virtual ~Hexus_CardDescriptionsLong_ReturnToHand() = default;
	};

	class Hexus_CardDescriptionsLong_ShiftLeft : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ShiftLeft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ShiftLeft();
		virtual ~Hexus_CardDescriptionsLong_ShiftLeft() = default;
	};

	class Hexus_CardDescriptionsLong_ShiftLeftCircular : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ShiftLeftCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ShiftLeftCircular();
		virtual ~Hexus_CardDescriptionsLong_ShiftLeftCircular() = default;
	};

	class Hexus_CardDescriptionsLong_ShiftRight : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ShiftRight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ShiftRight();
		virtual ~Hexus_CardDescriptionsLong_ShiftRight() = default;
	};

	class Hexus_CardDescriptionsLong_ShiftRightCircular : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_ShiftRightCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_ShiftRightCircular();
		virtual ~Hexus_CardDescriptionsLong_ShiftRightCircular() = default;
	};

	class Hexus_CardDescriptionsLong_Steal : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Steal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Steal();
		virtual ~Hexus_CardDescriptionsLong_Steal() = default;
	};

	class Hexus_CardDescriptionsLong_Subtract : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_Subtract* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_Subtract();
		virtual ~Hexus_CardDescriptionsLong_Subtract() = default;
	};

	class Hexus_CardDescriptionsLong_SuddenDeath : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_SuddenDeath* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_SuddenDeath();
		virtual ~Hexus_CardDescriptionsLong_SuddenDeath() = default;
	};

	class Hexus_CardDescriptionsLong_TurnGainsEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptionsLong_TurnGainsEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptionsLong_TurnGainsEffect();
		virtual ~Hexus_CardDescriptionsLong_TurnGainsEffect() = default;
	};

	class Hexus_CardDescriptions_Absorb : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Absorb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Absorb();
		virtual ~Hexus_CardDescriptions_Absorb() = default;
	};

	class Hexus_CardDescriptions_Addition : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Addition* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Addition();
		virtual ~Hexus_CardDescriptions_Addition() = default;
	};

	class Hexus_CardDescriptions_BonusMoves : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_BonusMoves* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_BonusMoves();
		virtual ~Hexus_CardDescriptions_BonusMoves() = default;
	};

	class Hexus_CardDescriptions_DrawEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_DrawEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_DrawEffect();
		virtual ~Hexus_CardDescriptions_DrawEffect() = default;
	};

	class Hexus_CardDescriptions_Flip1 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Flip1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Flip1();
		virtual ~Hexus_CardDescriptions_Flip1() = default;
	};

	class Hexus_CardDescriptions_Flip2 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Flip2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Flip2();
		virtual ~Hexus_CardDescriptions_Flip2() = default;
	};

	class Hexus_CardDescriptions_Flip3 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Flip3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Flip3();
		virtual ~Hexus_CardDescriptions_Flip3() = default;
	};

	class Hexus_CardDescriptions_Flip4 : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Flip4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Flip4();
		virtual ~Hexus_CardDescriptions_Flip4() = default;
	};

	class Hexus_CardDescriptions_Greed : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Greed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Greed();
		virtual ~Hexus_CardDescriptions_Greed() = default;
	};

	class Hexus_CardDescriptions_Horde : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Horde* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Horde();
		virtual ~Hexus_CardDescriptions_Horde() = default;
	};

	class Hexus_CardDescriptions_Inverse : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Inverse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Inverse();
		virtual ~Hexus_CardDescriptions_Inverse() = default;
	};

	class Hexus_CardDescriptions_Kill : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Kill* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Kill();
		virtual ~Hexus_CardDescriptions_Kill() = default;
	};

	class Hexus_CardDescriptions_LogicalAnd : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_LogicalAnd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_LogicalAnd();
		virtual ~Hexus_CardDescriptions_LogicalAnd() = default;
	};

	class Hexus_CardDescriptions_LogicalOr : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_LogicalOr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_LogicalOr();
		virtual ~Hexus_CardDescriptions_LogicalOr() = default;
	};

	class Hexus_CardDescriptions_LogicalXor : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_LogicalXor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_LogicalXor();
		virtual ~Hexus_CardDescriptions_LogicalXor() = default;
	};

	class Hexus_CardDescriptions_Mov : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Mov();
		virtual ~Hexus_CardDescriptions_Mov() = default;
	};

	class Hexus_CardDescriptions_NoDestroyEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_NoDestroyEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_NoDestroyEffect();
		virtual ~Hexus_CardDescriptions_NoDestroyEffect() = default;
	};

	class Hexus_CardDescriptions_Peek : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Peek* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Peek();
		virtual ~Hexus_CardDescriptions_Peek() = default;
	};

	class Hexus_CardDescriptions_ReturnAfterRound : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ReturnAfterRound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ReturnAfterRound();
		virtual ~Hexus_CardDescriptions_ReturnAfterRound() = default;
	};

	class Hexus_CardDescriptions_ReturnToHand : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ReturnToHand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ReturnToHand();
		virtual ~Hexus_CardDescriptions_ReturnToHand() = default;
	};

	class Hexus_CardDescriptions_ShiftLeft : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ShiftLeft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ShiftLeft();
		virtual ~Hexus_CardDescriptions_ShiftLeft() = default;
	};

	class Hexus_CardDescriptions_ShiftLeftCircular : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ShiftLeftCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ShiftLeftCircular();
		virtual ~Hexus_CardDescriptions_ShiftLeftCircular() = default;
	};

	class Hexus_CardDescriptions_ShiftRight : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ShiftRight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ShiftRight();
		virtual ~Hexus_CardDescriptions_ShiftRight() = default;
	};

	class Hexus_CardDescriptions_ShiftRightCircular : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_ShiftRightCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_ShiftRightCircular();
		virtual ~Hexus_CardDescriptions_ShiftRightCircular() = default;
	};

	class Hexus_CardDescriptions_Steal : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Steal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Steal();
		virtual ~Hexus_CardDescriptions_Steal() = default;
	};

	class Hexus_CardDescriptions_Subtract : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_Subtract* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_Subtract();
		virtual ~Hexus_CardDescriptions_Subtract() = default;
	};

	class Hexus_CardDescriptions_SuddenDeath : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_SuddenDeath* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_SuddenDeath();
		virtual ~Hexus_CardDescriptions_SuddenDeath() = default;
	};

	class Hexus_CardDescriptions_TurnGainsEffect : public LocalizedString
	{
	public:
		static Hexus_CardDescriptions_TurnGainsEffect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardDescriptions_TurnGainsEffect();
		virtual ~Hexus_CardDescriptions_TurnGainsEffect() = default;
	};

	class Hexus_CardsInDeck : public LocalizedString
	{
	public:
		static Hexus_CardsInDeck* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardsInDeck();
		virtual ~Hexus_CardsInDeck() = default;
	};

	class Hexus_CardsInStorage : public LocalizedString
	{
	public:
		static Hexus_CardsInStorage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardsInStorage();
		virtual ~Hexus_CardsInStorage() = default;
	};

	class Hexus_CardsToPlayToolTip : public LocalizedString
	{
	public:
		static Hexus_CardsToPlayToolTip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_CardsToPlayToolTip();
		virtual ~Hexus_CardsToPlayToolTip() = default;
	};

	class Hexus_Cards_Abbreviations_ADD : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_ADD* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_ADD();
		virtual ~Hexus_Cards_Abbreviations_ADD() = default;
	};

	class Hexus_Cards_Abbreviations_AND : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_AND* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_AND();
		virtual ~Hexus_Cards_Abbreviations_AND() = default;
	};

	class Hexus_Cards_Abbreviations_BIN : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_BIN* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_BIN();
		virtual ~Hexus_Cards_Abbreviations_BIN() = default;
	};

	class Hexus_Cards_Abbreviations_CSHL : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_CSHL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_CSHL();
		virtual ~Hexus_Cards_Abbreviations_CSHL() = default;
	};

	class Hexus_Cards_Abbreviations_CSHR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_CSHR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_CSHR();
		virtual ~Hexus_Cards_Abbreviations_CSHR() = default;
	};

	class Hexus_Cards_Abbreviations_DEC : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_DEC* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_DEC();
		virtual ~Hexus_Cards_Abbreviations_DEC() = default;
	};

	class Hexus_Cards_Abbreviations_DIV : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_DIV* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_DIV();
		virtual ~Hexus_Cards_Abbreviations_DIV() = default;
	};

	class Hexus_Cards_Abbreviations_ERR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_ERR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_ERR();
		virtual ~Hexus_Cards_Abbreviations_ERR() = default;
	};

	class Hexus_Cards_Abbreviations_FLIP1 : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_FLIP1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_FLIP1();
		virtual ~Hexus_Cards_Abbreviations_FLIP1() = default;
	};

	class Hexus_Cards_Abbreviations_FLIP2 : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_FLIP2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_FLIP2();
		virtual ~Hexus_Cards_Abbreviations_FLIP2() = default;
	};

	class Hexus_Cards_Abbreviations_FLIP3 : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_FLIP3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_FLIP3();
		virtual ~Hexus_Cards_Abbreviations_FLIP3() = default;
	};

	class Hexus_Cards_Abbreviations_FLIP4 : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_FLIP4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_FLIP4();
		virtual ~Hexus_Cards_Abbreviations_FLIP4() = default;
	};

	class Hexus_Cards_Abbreviations_HEX : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_HEX* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_HEX();
		virtual ~Hexus_Cards_Abbreviations_HEX() = default;
	};

	class Hexus_Cards_Abbreviations_MOD : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_MOD* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_MOD();
		virtual ~Hexus_Cards_Abbreviations_MOD() = default;
	};

	class Hexus_Cards_Abbreviations_MOV : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_MOV* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_MOV();
		virtual ~Hexus_Cards_Abbreviations_MOV() = default;
	};

	class Hexus_Cards_Abbreviations_MUL : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_MUL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_MUL();
		virtual ~Hexus_Cards_Abbreviations_MUL() = default;
	};

	class Hexus_Cards_Abbreviations_NOT : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_NOT* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_NOT();
		virtual ~Hexus_Cards_Abbreviations_NOT() = default;
	};

	class Hexus_Cards_Abbreviations_OR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_OR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_OR();
		virtual ~Hexus_Cards_Abbreviations_OR() = default;
	};

	class Hexus_Cards_Abbreviations_ROL : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_ROL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_ROL();
		virtual ~Hexus_Cards_Abbreviations_ROL() = default;
	};

	class Hexus_Cards_Abbreviations_ROR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_ROR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_ROR();
		virtual ~Hexus_Cards_Abbreviations_ROR() = default;
	};

	class Hexus_Cards_Abbreviations_SHL : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_SHL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_SHL();
		virtual ~Hexus_Cards_Abbreviations_SHL() = default;
	};

	class Hexus_Cards_Abbreviations_SHR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_SHR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_SHR();
		virtual ~Hexus_Cards_Abbreviations_SHR() = default;
	};

	class Hexus_Cards_Abbreviations_SUB : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_SUB* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_SUB();
		virtual ~Hexus_Cards_Abbreviations_SUB() = default;
	};

	class Hexus_Cards_Abbreviations_XOR : public LocalizedString
	{
	public:
		static Hexus_Cards_Abbreviations_XOR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Abbreviations_XOR();
		virtual ~Hexus_Cards_Abbreviations_XOR() = default;
	};

	class Hexus_Cards_Absorb : public LocalizedString
	{
	public:
		static Hexus_Cards_Absorb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Absorb();
		virtual ~Hexus_Cards_Absorb() = default;
	};

	class Hexus_Cards_Addition : public LocalizedString
	{
	public:
		static Hexus_Cards_Addition* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Addition();
		virtual ~Hexus_Cards_Addition() = default;
	};

	class Hexus_Cards_BinStorm : public LocalizedString
	{
	public:
		static Hexus_Cards_BinStorm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_BinStorm();
		virtual ~Hexus_Cards_BinStorm() = default;
	};

	class Hexus_Cards_Binary0 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary0();
		virtual ~Hexus_Cards_Binary0() = default;
	};

	class Hexus_Cards_Binary1 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary1();
		virtual ~Hexus_Cards_Binary1() = default;
	};

	class Hexus_Cards_Binary10 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary10();
		virtual ~Hexus_Cards_Binary10() = default;
	};

	class Hexus_Cards_Binary11 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary11();
		virtual ~Hexus_Cards_Binary11() = default;
	};

	class Hexus_Cards_Binary12 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary12();
		virtual ~Hexus_Cards_Binary12() = default;
	};

	class Hexus_Cards_Binary13 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary13();
		virtual ~Hexus_Cards_Binary13() = default;
	};

	class Hexus_Cards_Binary14 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary14();
		virtual ~Hexus_Cards_Binary14() = default;
	};

	class Hexus_Cards_Binary15 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary15();
		virtual ~Hexus_Cards_Binary15() = default;
	};

	class Hexus_Cards_Binary2 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary2();
		virtual ~Hexus_Cards_Binary2() = default;
	};

	class Hexus_Cards_Binary3 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary3();
		virtual ~Hexus_Cards_Binary3() = default;
	};

	class Hexus_Cards_Binary4 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary4();
		virtual ~Hexus_Cards_Binary4() = default;
	};

	class Hexus_Cards_Binary5 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary5();
		virtual ~Hexus_Cards_Binary5() = default;
	};

	class Hexus_Cards_Binary6 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary6();
		virtual ~Hexus_Cards_Binary6() = default;
	};

	class Hexus_Cards_Binary7 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary7();
		virtual ~Hexus_Cards_Binary7() = default;
	};

	class Hexus_Cards_Binary8 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary8();
		virtual ~Hexus_Cards_Binary8() = default;
	};

	class Hexus_Cards_Binary9 : public LocalizedString
	{
	public:
		static Hexus_Cards_Binary9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Binary9();
		virtual ~Hexus_Cards_Binary9() = default;
	};

	class Hexus_Cards_Decimal0 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal0();
		virtual ~Hexus_Cards_Decimal0() = default;
	};

	class Hexus_Cards_Decimal1 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal1();
		virtual ~Hexus_Cards_Decimal1() = default;
	};

	class Hexus_Cards_Decimal10 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal10();
		virtual ~Hexus_Cards_Decimal10() = default;
	};

	class Hexus_Cards_Decimal11 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal11();
		virtual ~Hexus_Cards_Decimal11() = default;
	};

	class Hexus_Cards_Decimal12 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal12();
		virtual ~Hexus_Cards_Decimal12() = default;
	};

	class Hexus_Cards_Decimal13 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal13();
		virtual ~Hexus_Cards_Decimal13() = default;
	};

	class Hexus_Cards_Decimal14 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal14();
		virtual ~Hexus_Cards_Decimal14() = default;
	};

	class Hexus_Cards_Decimal15 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal15();
		virtual ~Hexus_Cards_Decimal15() = default;
	};

	class Hexus_Cards_Decimal2 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal2();
		virtual ~Hexus_Cards_Decimal2() = default;
	};

	class Hexus_Cards_Decimal3 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal3();
		virtual ~Hexus_Cards_Decimal3() = default;
	};

	class Hexus_Cards_Decimal4 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal4();
		virtual ~Hexus_Cards_Decimal4() = default;
	};

	class Hexus_Cards_Decimal5 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal5();
		virtual ~Hexus_Cards_Decimal5() = default;
	};

	class Hexus_Cards_Decimal6 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal6();
		virtual ~Hexus_Cards_Decimal6() = default;
	};

	class Hexus_Cards_Decimal7 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal7();
		virtual ~Hexus_Cards_Decimal7() = default;
	};

	class Hexus_Cards_Decimal8 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal8();
		virtual ~Hexus_Cards_Decimal8() = default;
	};

	class Hexus_Cards_Decimal9 : public LocalizedString
	{
	public:
		static Hexus_Cards_Decimal9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Decimal9();
		virtual ~Hexus_Cards_Decimal9() = default;
	};

	class Hexus_Cards_Effects_Overflow : public LocalizedString
	{
	public:
		static Hexus_Cards_Effects_Overflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Effects_Overflow();
		virtual ~Hexus_Cards_Effects_Overflow() = default;
	};

	class Hexus_Cards_Effects_Underflow : public LocalizedString
	{
	public:
		static Hexus_Cards_Effects_Underflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Effects_Underflow();
		virtual ~Hexus_Cards_Effects_Underflow() = default;
	};

	class Hexus_Cards_Flip1 : public LocalizedString
	{
	public:
		static Hexus_Cards_Flip1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Flip1();
		virtual ~Hexus_Cards_Flip1() = default;
	};

	class Hexus_Cards_Flip2 : public LocalizedString
	{
	public:
		static Hexus_Cards_Flip2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Flip2();
		virtual ~Hexus_Cards_Flip2() = default;
	};

	class Hexus_Cards_Flip3 : public LocalizedString
	{
	public:
		static Hexus_Cards_Flip3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Flip3();
		virtual ~Hexus_Cards_Flip3() = default;
	};

	class Hexus_Cards_Flip4 : public LocalizedString
	{
	public:
		static Hexus_Cards_Flip4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Flip4();
		virtual ~Hexus_Cards_Flip4() = default;
	};

	class Hexus_Cards_Greed : public LocalizedString
	{
	public:
		static Hexus_Cards_Greed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Greed();
		virtual ~Hexus_Cards_Greed() = default;
	};

	class Hexus_Cards_Hex0 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex0();
		virtual ~Hexus_Cards_Hex0() = default;
	};

	class Hexus_Cards_Hex1 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex1();
		virtual ~Hexus_Cards_Hex1() = default;
	};

	class Hexus_Cards_Hex10 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex10();
		virtual ~Hexus_Cards_Hex10() = default;
	};

	class Hexus_Cards_Hex11 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex11();
		virtual ~Hexus_Cards_Hex11() = default;
	};

	class Hexus_Cards_Hex12 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex12();
		virtual ~Hexus_Cards_Hex12() = default;
	};

	class Hexus_Cards_Hex13 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex13();
		virtual ~Hexus_Cards_Hex13() = default;
	};

	class Hexus_Cards_Hex14 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex14();
		virtual ~Hexus_Cards_Hex14() = default;
	};

	class Hexus_Cards_Hex15 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex15();
		virtual ~Hexus_Cards_Hex15() = default;
	};

	class Hexus_Cards_Hex2 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex2();
		virtual ~Hexus_Cards_Hex2() = default;
	};

	class Hexus_Cards_Hex3 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex3();
		virtual ~Hexus_Cards_Hex3() = default;
	};

	class Hexus_Cards_Hex4 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex4();
		virtual ~Hexus_Cards_Hex4() = default;
	};

	class Hexus_Cards_Hex5 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex5();
		virtual ~Hexus_Cards_Hex5() = default;
	};

	class Hexus_Cards_Hex6 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex6();
		virtual ~Hexus_Cards_Hex6() = default;
	};

	class Hexus_Cards_Hex7 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex7();
		virtual ~Hexus_Cards_Hex7() = default;
	};

	class Hexus_Cards_Hex8 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex8();
		virtual ~Hexus_Cards_Hex8() = default;
	};

	class Hexus_Cards_Hex9 : public LocalizedString
	{
	public:
		static Hexus_Cards_Hex9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Hex9();
		virtual ~Hexus_Cards_Hex9() = default;
	};

	class Hexus_Cards_Inverse : public LocalizedString
	{
	public:
		static Hexus_Cards_Inverse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Inverse();
		virtual ~Hexus_Cards_Inverse() = default;
	};

	class Hexus_Cards_Kill : public LocalizedString
	{
	public:
		static Hexus_Cards_Kill* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Kill();
		virtual ~Hexus_Cards_Kill() = default;
	};

	class Hexus_Cards_LogicalAnd : public LocalizedString
	{
	public:
		static Hexus_Cards_LogicalAnd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_LogicalAnd();
		virtual ~Hexus_Cards_LogicalAnd() = default;
	};

	class Hexus_Cards_LogicalOr : public LocalizedString
	{
	public:
		static Hexus_Cards_LogicalOr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_LogicalOr();
		virtual ~Hexus_Cards_LogicalOr() = default;
	};

	class Hexus_Cards_LogicalXor : public LocalizedString
	{
	public:
		static Hexus_Cards_LogicalXor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_LogicalXor();
		virtual ~Hexus_Cards_LogicalXor() = default;
	};

	class Hexus_Cards_Mov : public LocalizedString
	{
	public:
		static Hexus_Cards_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Mov();
		virtual ~Hexus_Cards_Mov() = default;
	};

	class Hexus_Cards_Peek : public LocalizedString
	{
	public:
		static Hexus_Cards_Peek* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Peek();
		virtual ~Hexus_Cards_Peek() = default;
	};

	class Hexus_Cards_ReturnToHand : public LocalizedString
	{
	public:
		static Hexus_Cards_ReturnToHand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_ReturnToHand();
		virtual ~Hexus_Cards_ReturnToHand() = default;
	};

	class Hexus_Cards_ShiftLeft : public LocalizedString
	{
	public:
		static Hexus_Cards_ShiftLeft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_ShiftLeft();
		virtual ~Hexus_Cards_ShiftLeft() = default;
	};

	class Hexus_Cards_ShiftLeftCircular : public LocalizedString
	{
	public:
		static Hexus_Cards_ShiftLeftCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_ShiftLeftCircular();
		virtual ~Hexus_Cards_ShiftLeftCircular() = default;
	};

	class Hexus_Cards_ShiftRight : public LocalizedString
	{
	public:
		static Hexus_Cards_ShiftRight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_ShiftRight();
		virtual ~Hexus_Cards_ShiftRight() = default;
	};

	class Hexus_Cards_ShiftRightCircular : public LocalizedString
	{
	public:
		static Hexus_Cards_ShiftRightCircular* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_ShiftRightCircular();
		virtual ~Hexus_Cards_ShiftRightCircular() = default;
	};

	class Hexus_Cards_Steal : public LocalizedString
	{
	public:
		static Hexus_Cards_Steal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Steal();
		virtual ~Hexus_Cards_Steal() = default;
	};

	class Hexus_Cards_Subtract : public LocalizedString
	{
	public:
		static Hexus_Cards_Subtract* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Cards_Subtract();
		virtual ~Hexus_Cards_Subtract() = default;
	};

	class Hexus_ClaimVictory : public LocalizedString
	{
	public:
		static Hexus_ClaimVictory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_ClaimVictory();
		virtual ~Hexus_ClaimVictory() = default;
	};

	class Hexus_DecCards : public LocalizedString
	{
	public:
		static Hexus_DecCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_DecCards();
		virtual ~Hexus_DecCards() = default;
	};

	class Hexus_DecHeader : public LocalizedString
	{
	public:
		static Hexus_DecHeader* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_DecHeader();
		virtual ~Hexus_DecHeader() = default;
	};

	class Hexus_DecLabel : public LocalizedString
	{
	public:
		static Hexus_DecLabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_DecLabel();
		virtual ~Hexus_DecLabel() = default;
	};

	class Hexus_Done : public LocalizedString
	{
	public:
		static Hexus_Done* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Done();
		virtual ~Hexus_Done() = default;
	};

	class Hexus_DrawToolTip : public LocalizedString
	{
	public:
		static Hexus_DrawToolTip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_DrawToolTip();
		virtual ~Hexus_DrawToolTip() = default;
	};

	class Hexus_HexCards : public LocalizedString
	{
	public:
		static Hexus_HexCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_HexCards();
		virtual ~Hexus_HexCards() = default;
	};

	class Hexus_HexHeader : public LocalizedString
	{
	public:
		static Hexus_HexHeader* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_HexHeader();
		virtual ~Hexus_HexHeader() = default;
	};

	class Hexus_HexLabel : public LocalizedString
	{
	public:
		static Hexus_HexLabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_HexLabel();
		virtual ~Hexus_HexLabel() = default;
	};

	class Hexus_Hexus : public LocalizedString
	{
	public:
		static Hexus_Hexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Hexus();
		virtual ~Hexus_Hexus() = default;
	};

	class Hexus_HexusPuzzles : public LocalizedString
	{
	public:
		static Hexus_HexusPuzzles* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_HexusPuzzles();
		virtual ~Hexus_HexusPuzzles() = default;
	};

	class Hexus_LastStand : public LocalizedString
	{
	public:
		static Hexus_LastStand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_LastStand();
		virtual ~Hexus_LastStand() = default;
	};

	class Hexus_ManageCards : public LocalizedString
	{
	public:
		static Hexus_ManageCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_ManageCards();
		virtual ~Hexus_ManageCards() = default;
	};

	class Hexus_Pass : public LocalizedString
	{
	public:
		static Hexus_Pass* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Pass();
		virtual ~Hexus_Pass() = default;
	};

	class Hexus_PurchaseConfirmation : public LocalizedString
	{
	public:
		static Hexus_PurchaseConfirmation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_PurchaseConfirmation();
		virtual ~Hexus_PurchaseConfirmation() = default;
	};

	class Hexus_SelectAChapter : public LocalizedString
	{
	public:
		static Hexus_SelectAChapter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_SelectAChapter();
		virtual ~Hexus_SelectAChapter() = default;
	};

	class Hexus_SelectOpponent : public LocalizedString
	{
	public:
		static Hexus_SelectOpponent* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_SelectOpponent();
		virtual ~Hexus_SelectOpponent() = default;
	};

	class Hexus_Shop : public LocalizedString
	{
	public:
		static Hexus_Shop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Shop();
		virtual ~Hexus_Shop() = default;
	};

	class Hexus_SpecialCards : public LocalizedString
	{
	public:
		static Hexus_SpecialCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_SpecialCards();
		virtual ~Hexus_SpecialCards() = default;
	};

	class Hexus_StoreLabelBinary : public LocalizedString
	{
	public:
		static Hexus_StoreLabelBinary* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_StoreLabelBinary();
		virtual ~Hexus_StoreLabelBinary() = default;
	};

	class Hexus_StoreLabelDecimal : public LocalizedString
	{
	public:
		static Hexus_StoreLabelDecimal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_StoreLabelDecimal();
		virtual ~Hexus_StoreLabelDecimal() = default;
	};

	class Hexus_StoreLabelHex : public LocalizedString
	{
	public:
		static Hexus_StoreLabelHex* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_StoreLabelHex();
		virtual ~Hexus_StoreLabelHex() = default;
	};

	class Hexus_StoreLabelSpecial : public LocalizedString
	{
	public:
		static Hexus_StoreLabelSpecial* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_StoreLabelSpecial();
		virtual ~Hexus_StoreLabelSpecial() = default;
	};

	class Hexus_Tutorials_A_BinCards : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_BinCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_BinCards();
		virtual ~Hexus_Tutorials_A_BinCards() = default;
	};

	class Hexus_Tutorials_A_DecCards : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_DecCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_DecCards();
		virtual ~Hexus_Tutorials_A_DecCards() = default;
	};

	class Hexus_Tutorials_A_HandCards : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_HandCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_HandCards();
		virtual ~Hexus_Tutorials_A_HandCards() = default;
	};

	class Hexus_Tutorials_A_HexCards : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_HexCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_HexCards();
		virtual ~Hexus_Tutorials_A_HexCards() = default;
	};

	class Hexus_Tutorials_A_LossDisplay : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_LossDisplay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_LossDisplay();
		virtual ~Hexus_Tutorials_A_LossDisplay() = default;
	};

	class Hexus_Tutorials_A_RowTotals : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_RowTotals* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_RowTotals();
		virtual ~Hexus_Tutorials_A_RowTotals() = default;
	};

	class Hexus_Tutorials_A_ScoreTotals : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_ScoreTotals* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_ScoreTotals();
		virtual ~Hexus_Tutorials_A_ScoreTotals() = default;
	};

	class Hexus_Tutorials_A_Victory : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_Victory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_Victory();
		virtual ~Hexus_Tutorials_A_Victory() = default;
	};

	class Hexus_Tutorials_A_WinningRound : public LocalizedString
	{
	public:
		static Hexus_Tutorials_A_WinningRound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_A_WinningRound();
		virtual ~Hexus_Tutorials_A_WinningRound() = default;
	};

	class Hexus_Tutorials_B_SaveCards : public LocalizedString
	{
	public:
		static Hexus_Tutorials_B_SaveCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_B_SaveCards();
		virtual ~Hexus_Tutorials_B_SaveCards() = default;
	};

	class Hexus_Tutorials_B_ScoreLead : public LocalizedString
	{
	public:
		static Hexus_Tutorials_B_ScoreLead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_B_ScoreLead();
		virtual ~Hexus_Tutorials_B_ScoreLead() = default;
	};

	class Hexus_Tutorials_B_UseLastStand : public LocalizedString
	{
	public:
		static Hexus_Tutorials_B_UseLastStand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_B_UseLastStand();
		virtual ~Hexus_Tutorials_B_UseLastStand() = default;
	};

	class Hexus_Tutorials_C_NotEnoughToWin : public LocalizedString
	{
	public:
		static Hexus_Tutorials_C_NotEnoughToWin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_C_NotEnoughToWin();
		virtual ~Hexus_Tutorials_C_NotEnoughToWin() = default;
	};

	class Hexus_Tutorials_C_OpponentLead : public LocalizedString
	{
	public:
		static Hexus_Tutorials_C_OpponentLead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_C_OpponentLead();
		virtual ~Hexus_Tutorials_C_OpponentLead() = default;
	};

	class Hexus_Tutorials_C_UseSurrender : public LocalizedString
	{
	public:
		static Hexus_Tutorials_C_UseSurrender* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_C_UseSurrender();
		virtual ~Hexus_Tutorials_C_UseSurrender() = default;
	};

	class Hexus_Tutorials_D_UseMov : public LocalizedString
	{
	public:
		static Hexus_Tutorials_D_UseMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_D_UseMov();
		virtual ~Hexus_Tutorials_D_UseMov() = default;
	};

	class Hexus_Tutorials_PuzzleB_A_4Bits : public LocalizedString
	{
	public:
		static Hexus_Tutorials_PuzzleB_A_4Bits* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_PuzzleB_A_4Bits();
		virtual ~Hexus_Tutorials_PuzzleB_A_4Bits() = default;
	};

	class Hexus_Tutorials_PuzzleB_B_Overflow : public LocalizedString
	{
	public:
		static Hexus_Tutorials_PuzzleB_B_Overflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_PuzzleB_B_Overflow();
		virtual ~Hexus_Tutorials_PuzzleB_B_Overflow() = default;
	};

	class Hexus_Tutorials_PuzzleB_C_HelpMenu : public LocalizedString
	{
	public:
		static Hexus_Tutorials_PuzzleB_C_HelpMenu* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_PuzzleB_C_HelpMenu();
		virtual ~Hexus_Tutorials_PuzzleB_C_HelpMenu() = default;
	};

	class Hexus_Tutorials_PuzzleC_A_Overflow : public LocalizedString
	{
	public:
		static Hexus_Tutorials_PuzzleC_A_Overflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_PuzzleC_A_Overflow();
		virtual ~Hexus_Tutorials_PuzzleC_A_Overflow() = default;
	};

	class Hexus_Tutorials_PuzzleD_A_Order : public LocalizedString
	{
	public:
		static Hexus_Tutorials_PuzzleD_A_Order* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_PuzzleD_A_Order();
		virtual ~Hexus_Tutorials_PuzzleD_A_Order() = default;
	};

	class Hexus_Tutorials_Sarude_ClaimWin : public LocalizedString
	{
	public:
		static Hexus_Tutorials_Sarude_ClaimWin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_Sarude_ClaimWin();
		virtual ~Hexus_Tutorials_Sarude_ClaimWin() = default;
	};

	class Hexus_Tutorials_Sarude_RealMatch : public LocalizedString
	{
	public:
		static Hexus_Tutorials_Sarude_RealMatch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Hexus_Tutorials_Sarude_RealMatch();
		virtual ~Hexus_Tutorials_Sarude_RealMatch() = default;
	};

	class Input_Shift : public LocalizedString
	{
	public:
		static Input_Shift* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Input_Shift();
		virtual ~Input_Shift() = default;
	};

	class Input_Spacebar : public LocalizedString
	{
	public:
		static Input_Spacebar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Input_Spacebar();
		virtual ~Input_Spacebar() = default;
	};

	class Input_Tab : public LocalizedString
	{
	public:
		static Input_Tab* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Input_Tab();
		virtual ~Input_Tab() = default;
	};

	class Items_Consumables_Health_AddHealthFlask : public LocalizedString
	{
	public:
		static Items_Consumables_Health_AddHealthFlask* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_AddHealthFlask();
		virtual ~Items_Consumables_Health_AddHealthFlask() = default;
	};

	class Items_Consumables_Health_AddHealthFlaskDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Health_AddHealthFlaskDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_AddHealthFlaskDescription();
		virtual ~Items_Consumables_Health_AddHealthFlaskDescription() = default;
	};

	class Items_Consumables_Health_GreaterHealthPotion : public LocalizedString
	{
	public:
		static Items_Consumables_Health_GreaterHealthPotion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_GreaterHealthPotion();
		virtual ~Items_Consumables_Health_GreaterHealthPotion() = default;
	};

	class Items_Consumables_Health_GreaterHealthPotionDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Health_GreaterHealthPotionDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_GreaterHealthPotionDescription();
		virtual ~Items_Consumables_Health_GreaterHealthPotionDescription() = default;
	};

	class Items_Consumables_Health_HealthPotion : public LocalizedString
	{
	public:
		static Items_Consumables_Health_HealthPotion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_HealthPotion();
		virtual ~Items_Consumables_Health_HealthPotion() = default;
	};

	class Items_Consumables_Health_HealthPotionDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Health_HealthPotionDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_HealthPotionDescription();
		virtual ~Items_Consumables_Health_HealthPotionDescription() = default;
	};

	class Items_Consumables_Health_IncrementHealthFlask : public LocalizedString
	{
	public:
		static Items_Consumables_Health_IncrementHealthFlask* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_IncrementHealthFlask();
		virtual ~Items_Consumables_Health_IncrementHealthFlask() = default;
	};

	class Items_Consumables_Health_IncrementHealthFlaskDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Health_IncrementHealthFlaskDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Health_IncrementHealthFlaskDescription();
		virtual ~Items_Consumables_Health_IncrementHealthFlaskDescription() = default;
	};

	class Items_Consumables_Mana_AddManaFlask : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_AddManaFlask* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_AddManaFlask();
		virtual ~Items_Consumables_Mana_AddManaFlask() = default;
	};

	class Items_Consumables_Mana_AddManaFlaskDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_AddManaFlaskDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_AddManaFlaskDescription();
		virtual ~Items_Consumables_Mana_AddManaFlaskDescription() = default;
	};

	class Items_Consumables_Mana_GreaterManaPotion : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_GreaterManaPotion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_GreaterManaPotion();
		virtual ~Items_Consumables_Mana_GreaterManaPotion() = default;
	};

	class Items_Consumables_Mana_GreaterManaPotionDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_GreaterManaPotionDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_GreaterManaPotionDescription();
		virtual ~Items_Consumables_Mana_GreaterManaPotionDescription() = default;
	};

	class Items_Consumables_Mana_IncrementManaFlask : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_IncrementManaFlask* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_IncrementManaFlask();
		virtual ~Items_Consumables_Mana_IncrementManaFlask() = default;
	};

	class Items_Consumables_Mana_IncrementManaFlaskDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_IncrementManaFlaskDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_IncrementManaFlaskDescription();
		virtual ~Items_Consumables_Mana_IncrementManaFlaskDescription() = default;
	};

	class Items_Consumables_Mana_ManaPotion : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_ManaPotion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_ManaPotion();
		virtual ~Items_Consumables_Mana_ManaPotion() = default;
	};

	class Items_Consumables_Mana_ManaPotionDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Mana_ManaPotionDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Mana_ManaPotionDescription();
		virtual ~Items_Consumables_Mana_ManaPotionDescription() = default;
	};

	class Items_Consumables_Speed_SpeedPotion : public LocalizedString
	{
	public:
		static Items_Consumables_Speed_SpeedPotion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Speed_SpeedPotion();
		virtual ~Items_Consumables_Speed_SpeedPotion() = default;
	};

	class Items_Consumables_Speed_SpeedPotionDescription : public LocalizedString
	{
	public:
		static Items_Consumables_Speed_SpeedPotionDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Consumables_Speed_SpeedPotionDescription();
		virtual ~Items_Consumables_Speed_SpeedPotionDescription() = default;
	};

	class Items_Crafting_Ore_Bone : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Bone* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Bone();
		virtual ~Items_Crafting_Ore_Bone() = default;
	};

	class Items_Crafting_Ore_Coal : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Coal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Coal();
		virtual ~Items_Crafting_Ore_Coal() = default;
	};

	class Items_Crafting_Ore_Copper : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Copper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Copper();
		virtual ~Items_Crafting_Ore_Copper() = default;
	};

	class Items_Crafting_Ore_Crystal : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Crystal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Crystal();
		virtual ~Items_Crafting_Ore_Crystal() = default;
	};

	class Items_Crafting_Ore_Diamond : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Diamond* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Diamond();
		virtual ~Items_Crafting_Ore_Diamond() = default;
	};

	class Items_Crafting_Ore_Emerald : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Emerald* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Emerald();
		virtual ~Items_Crafting_Ore_Emerald() = default;
	};

	class Items_Crafting_Ore_Gold : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Gold* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Gold();
		virtual ~Items_Crafting_Ore_Gold() = default;
	};

	class Items_Crafting_Ore_Iron : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Iron* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Iron();
		virtual ~Items_Crafting_Ore_Iron() = default;
	};

	class Items_Crafting_Ore_Mithril : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Mithril* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Mithril();
		virtual ~Items_Crafting_Ore_Mithril() = default;
	};

	class Items_Crafting_Ore_Obsidian : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Obsidian* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Obsidian();
		virtual ~Items_Crafting_Ore_Obsidian() = default;
	};

	class Items_Crafting_Ore_Quartz : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Quartz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Quartz();
		virtual ~Items_Crafting_Ore_Quartz() = default;
	};

	class Items_Crafting_Ore_Ruby : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Ruby* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Ruby();
		virtual ~Items_Crafting_Ore_Ruby() = default;
	};

	class Items_Crafting_Ore_Sapphire : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Sapphire* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Sapphire();
		virtual ~Items_Crafting_Ore_Sapphire() = default;
	};

	class Items_Crafting_Ore_Sulfur : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_Sulfur* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_Sulfur();
		virtual ~Items_Crafting_Ore_Sulfur() = default;
	};

	class Items_Crafting_Ore_VoidCrystal : public LocalizedString
	{
	public:
		static Items_Crafting_Ore_VoidCrystal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Ore_VoidCrystal();
		virtual ~Items_Crafting_Ore_VoidCrystal() = default;
	};

	class Items_Crafting_Plants_Clover : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_Clover* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_Clover();
		virtual ~Items_Crafting_Plants_Clover() = default;
	};

	class Items_Crafting_Plants_DarkSeed : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_DarkSeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_DarkSeed();
		virtual ~Items_Crafting_Plants_DarkSeed() = default;
	};

	class Items_Crafting_Plants_DemonRoot : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_DemonRoot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_DemonRoot();
		virtual ~Items_Crafting_Plants_DemonRoot() = default;
	};

	class Items_Crafting_Plants_FrostBerries : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_FrostBerries* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_FrostBerries();
		virtual ~Items_Crafting_Plants_FrostBerries() = default;
	};

	class Items_Crafting_Plants_GoldWeed : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_GoldWeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_GoldWeed();
		virtual ~Items_Crafting_Plants_GoldWeed() = default;
	};

	class Items_Crafting_Plants_Mandrake : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_Mandrake* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_Mandrake();
		virtual ~Items_Crafting_Plants_Mandrake() = default;
	};

	class Items_Crafting_Plants_PoisonMushroom : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_PoisonMushroom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_PoisonMushroom();
		virtual ~Items_Crafting_Plants_PoisonMushroom() = default;
	};

	class Items_Crafting_Plants_SandRoot : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_SandRoot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_SandRoot();
		virtual ~Items_Crafting_Plants_SandRoot() = default;
	};

	class Items_Crafting_Plants_VoidFlower : public LocalizedString
	{
	public:
		static Items_Crafting_Plants_VoidFlower* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Plants_VoidFlower();
		virtual ~Items_Crafting_Plants_VoidFlower() = default;
	};

	class Items_Crafting_Reagents_BlackBlood : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_BlackBlood* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_BlackBlood();
		virtual ~Items_Crafting_Reagents_BlackBlood() = default;
	};

	class Items_Crafting_Reagents_DemonSkull : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_DemonSkull* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_DemonSkull();
		virtual ~Items_Crafting_Reagents_DemonSkull() = default;
	};

	class Items_Crafting_Reagents_Egg : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_Egg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_Egg();
		virtual ~Items_Crafting_Reagents_Egg() = default;
	};

	class Items_Crafting_Reagents_Eggplant : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_Eggplant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_Eggplant();
		virtual ~Items_Crafting_Reagents_Eggplant() = default;
	};

	class Items_Crafting_Reagents_Feather : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_Feather* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_Feather();
		virtual ~Items_Crafting_Reagents_Feather() = default;
	};

	class Items_Crafting_Reagents_Honey : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_Honey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_Honey();
		virtual ~Items_Crafting_Reagents_Honey() = default;
	};

	class Items_Crafting_Reagents_PhoenixFeather : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_PhoenixFeather* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_PhoenixFeather();
		virtual ~Items_Crafting_Reagents_PhoenixFeather() = default;
	};

	class Items_Crafting_Reagents_Snowball : public LocalizedString
	{
	public:
		static Items_Crafting_Reagents_Snowball* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Reagents_Snowball();
		virtual ~Items_Crafting_Reagents_Snowball() = default;
	};

	class Items_Crafting_Recipes_TransmuteCopperToIron : public LocalizedString
	{
	public:
		static Items_Crafting_Recipes_TransmuteCopperToIron* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Recipes_TransmuteCopperToIron();
		virtual ~Items_Crafting_Recipes_TransmuteCopperToIron() = default;
	};

	class Items_Crafting_Recipes_TransmuteCopperToQuartz : public LocalizedString
	{
	public:
		static Items_Crafting_Recipes_TransmuteCopperToQuartz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Recipes_TransmuteCopperToQuartz();
		virtual ~Items_Crafting_Recipes_TransmuteCopperToQuartz() = default;
	};

	class Items_Crafting_Recipes_TransmuteQuartzToEmerald : public LocalizedString
	{
	public:
		static Items_Crafting_Recipes_TransmuteQuartzToEmerald* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Recipes_TransmuteQuartzToEmerald();
		virtual ~Items_Crafting_Recipes_TransmuteQuartzToEmerald() = default;
	};

	class Items_Crafting_Recipes_TransmuteWoodToCoal : public LocalizedString
	{
	public:
		static Items_Crafting_Recipes_TransmuteWoodToCoal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Recipes_TransmuteWoodToCoal();
		virtual ~Items_Crafting_Recipes_TransmuteWoodToCoal() = default;
	};

	class Items_Crafting_Wood_DarkWood : public LocalizedString
	{
	public:
		static Items_Crafting_Wood_DarkWood* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Wood_DarkWood();
		virtual ~Items_Crafting_Wood_DarkWood() = default;
	};

	class Items_Crafting_Wood_LightWood : public LocalizedString
	{
	public:
		static Items_Crafting_Wood_LightWood* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Wood_LightWood();
		virtual ~Items_Crafting_Wood_LightWood() = default;
	};

	class Items_Crafting_Wood_Wood : public LocalizedString
	{
	public:
		static Items_Crafting_Wood_Wood* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Crafting_Wood_Wood();
		virtual ~Items_Crafting_Wood_Wood() = default;
	};

	class Items_Currency_Gold : public LocalizedString
	{
	public:
		static Items_Currency_Gold* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Currency_Gold();
		virtual ~Items_Currency_Gold() = default;
	};

	class Items_Currency_IOU : public LocalizedString
	{
	public:
		static Items_Currency_IOU* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Currency_IOU();
		virtual ~Items_Currency_IOU() = default;
	};

	class Items_Currency_IOUs : public LocalizedString
	{
	public:
		static Items_Currency_IOUs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Currency_IOUs();
		virtual ~Items_Currency_IOUs() = default;
	};

	class Items_Equipment_Gear_Earrings_AquaMarineEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_AquaMarineEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_AquaMarineEarrings();
		virtual ~Items_Equipment_Gear_Earrings_AquaMarineEarrings() = default;
	};

	class Items_Equipment_Gear_Earrings_CrystalEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_CrystalEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_CrystalEarrings();
		virtual ~Items_Equipment_Gear_Earrings_CrystalEarrings() = default;
	};

	class Items_Equipment_Gear_Earrings_EmeraldEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_EmeraldEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_EmeraldEarrings();
		virtual ~Items_Equipment_Gear_Earrings_EmeraldEarrings() = default;
	};

	class Items_Equipment_Gear_Earrings_HeartEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_HeartEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_HeartEarrings();
		virtual ~Items_Equipment_Gear_Earrings_HeartEarrings() = default;
	};

	class Items_Equipment_Gear_Earrings_RoseEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_RoseEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_RoseEarrings();
		virtual ~Items_Equipment_Gear_Earrings_RoseEarrings() = default;
	};

	class Items_Equipment_Gear_Earrings_SapphireEarrings : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Earrings_SapphireEarrings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Earrings_SapphireEarrings();
		virtual ~Items_Equipment_Gear_Earrings_SapphireEarrings() = default;
	};

	class Items_Equipment_Gear_Hats_AcolytesCap : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_AcolytesCap* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_AcolytesCap();
		virtual ~Items_Equipment_Gear_Hats_AcolytesCap() = default;
	};

	class Items_Equipment_Gear_Hats_ArchersHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_ArchersHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_ArchersHat();
		virtual ~Items_Equipment_Gear_Hats_ArchersHat() = default;
	};

	class Items_Equipment_Gear_Hats_BarbedHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_BarbedHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_BarbedHelm();
		virtual ~Items_Equipment_Gear_Hats_BarbedHelm() = default;
	};

	class Items_Equipment_Gear_Hats_BrocksHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_BrocksHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_BrocksHelm();
		virtual ~Items_Equipment_Gear_Hats_BrocksHelm() = default;
	};

	class Items_Equipment_Gear_Hats_BucketHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_BucketHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_BucketHelm();
		virtual ~Items_Equipment_Gear_Hats_BucketHelm() = default;
	};

	class Items_Equipment_Gear_Hats_ConchHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_ConchHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_ConchHelm();
		virtual ~Items_Equipment_Gear_Hats_ConchHelm() = default;
	};

	class Items_Equipment_Gear_Hats_CopperHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_CopperHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_CopperHelm();
		virtual ~Items_Equipment_Gear_Hats_CopperHelm() = default;
	};

	class Items_Equipment_Gear_Hats_CowboyHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_CowboyHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_CowboyHat();
		virtual ~Items_Equipment_Gear_Hats_CowboyHat() = default;
	};

	class Items_Equipment_Gear_Hats_DemonShell : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_DemonShell* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_DemonShell();
		virtual ~Items_Equipment_Gear_Hats_DemonShell() = default;
	};

	class Items_Equipment_Gear_Hats_DepressingWig : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_DepressingWig* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_DepressingWig();
		virtual ~Items_Equipment_Gear_Hats_DepressingWig() = default;
	};

	class Items_Equipment_Gear_Hats_DraksHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_DraksHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_DraksHelm();
		virtual ~Items_Equipment_Gear_Hats_DraksHelm() = default;
	};

	class Items_Equipment_Gear_Hats_GardenersHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_GardenersHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_GardenersHat();
		virtual ~Items_Equipment_Gear_Hats_GardenersHat() = default;
	};

	class Items_Equipment_Gear_Hats_GoldenDungHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_GoldenDungHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_GoldenDungHelm();
		virtual ~Items_Equipment_Gear_Hats_GoldenDungHelm() = default;
	};

	class Items_Equipment_Gear_Hats_GrandpasLuckyHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_GrandpasLuckyHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_GrandpasLuckyHat();
		virtual ~Items_Equipment_Gear_Hats_GrandpasLuckyHat() = default;
	};

	class Items_Equipment_Gear_Hats_GuardsHelmet : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_GuardsHelmet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_GuardsHelmet();
		virtual ~Items_Equipment_Gear_Hats_GuardsHelmet() = default;
	};

	class Items_Equipment_Gear_Hats_GunnersHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_GunnersHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_GunnersHat();
		virtual ~Items_Equipment_Gear_Hats_GunnersHat() = default;
	};

	class Items_Equipment_Gear_Hats_JesterHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_JesterHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_JesterHat();
		virtual ~Items_Equipment_Gear_Hats_JesterHat() = default;
	};

	class Items_Equipment_Gear_Hats_JoustingHelmet : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_JoustingHelmet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_JoustingHelmet();
		virtual ~Items_Equipment_Gear_Hats_JoustingHelmet() = default;
	};

	class Items_Equipment_Gear_Hats_LeatherCap : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_LeatherCap* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_LeatherCap();
		virtual ~Items_Equipment_Gear_Hats_LeatherCap() = default;
	};

	class Items_Equipment_Gear_Hats_MagesHatBlue : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_MagesHatBlue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_MagesHatBlue();
		virtual ~Items_Equipment_Gear_Hats_MagesHatBlue() = default;
	};

	class Items_Equipment_Gear_Hats_MagesHatRed : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_MagesHatRed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_MagesHatRed();
		virtual ~Items_Equipment_Gear_Hats_MagesHatRed() = default;
	};

	class Items_Equipment_Gear_Hats_Monocle : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_Monocle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_Monocle();
		virtual ~Items_Equipment_Gear_Hats_Monocle() = default;
	};

	class Items_Equipment_Gear_Hats_NecrobatHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_NecrobatHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_NecrobatHelm();
		virtual ~Items_Equipment_Gear_Hats_NecrobatHelm() = default;
	};

	class Items_Equipment_Gear_Hats_OldShoe : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_OldShoe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_OldShoe();
		virtual ~Items_Equipment_Gear_Hats_OldShoe() = default;
	};

	class Items_Equipment_Gear_Hats_OrnateHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_OrnateHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_OrnateHat();
		virtual ~Items_Equipment_Gear_Hats_OrnateHat() = default;
	};

	class Items_Equipment_Gear_Hats_PirateHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_PirateHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_PirateHat();
		virtual ~Items_Equipment_Gear_Hats_PirateHat() = default;
	};

	class Items_Equipment_Gear_Hats_PriestHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_PriestHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_PriestHat();
		virtual ~Items_Equipment_Gear_Hats_PriestHat() = default;
	};

	class Items_Equipment_Gear_Hats_ReindeerHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_ReindeerHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_ReindeerHat();
		virtual ~Items_Equipment_Gear_Hats_ReindeerHat() = default;
	};

	class Items_Equipment_Gear_Hats_RoyalCrown : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_RoyalCrown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_RoyalCrown();
		virtual ~Items_Equipment_Gear_Hats_RoyalCrown() = default;
	};

	class Items_Equipment_Gear_Hats_SamuraiHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_SamuraiHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_SamuraiHat();
		virtual ~Items_Equipment_Gear_Hats_SamuraiHat() = default;
	};

	class Items_Equipment_Gear_Hats_SantaHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_SantaHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_SantaHat();
		virtual ~Items_Equipment_Gear_Hats_SantaHat() = default;
	};

	class Items_Equipment_Gear_Hats_ShamanTiara : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_ShamanTiara* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_ShamanTiara();
		virtual ~Items_Equipment_Gear_Hats_ShamanTiara() = default;
	};

	class Items_Equipment_Gear_Hats_SnailShell : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_SnailShell* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_SnailShell();
		virtual ~Items_Equipment_Gear_Hats_SnailShell() = default;
	};

	class Items_Equipment_Gear_Hats_SnailShellSpiked : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_SnailShellSpiked* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_SnailShellSpiked();
		virtual ~Items_Equipment_Gear_Hats_SnailShellSpiked() = default;
	};

	class Items_Equipment_Gear_Hats_SteelHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_SteelHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_SteelHelm();
		virtual ~Items_Equipment_Gear_Hats_SteelHelm() = default;
	};

	class Items_Equipment_Gear_Hats_TheGoldenEagle : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_TheGoldenEagle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_TheGoldenEagle();
		virtual ~Items_Equipment_Gear_Hats_TheGoldenEagle() = default;
	};

	class Items_Equipment_Gear_Hats_TheldarsHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_TheldarsHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_TheldarsHelm();
		virtual ~Items_Equipment_Gear_Hats_TheldarsHelm() = default;
	};

	class Items_Equipment_Gear_Hats_Tiara : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_Tiara* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_Tiara();
		virtual ~Items_Equipment_Gear_Hats_Tiara() = default;
	};

	class Items_Equipment_Gear_Hats_TigersBane : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_TigersBane* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_TigersBane();
		virtual ~Items_Equipment_Gear_Hats_TigersBane() = default;
	};

	class Items_Equipment_Gear_Hats_TopHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_TopHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_TopHat();
		virtual ~Items_Equipment_Gear_Hats_TopHat() = default;
	};

	class Items_Equipment_Gear_Hats_ToySoldierHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_ToySoldierHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_ToySoldierHat();
		virtual ~Items_Equipment_Gear_Hats_ToySoldierHat() = default;
	};

	class Items_Equipment_Gear_Hats_Turban : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_Turban* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_Turban();
		virtual ~Items_Equipment_Gear_Hats_Turban() = default;
	};

	class Items_Equipment_Gear_Hats_VikingHelmet : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_VikingHelmet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_VikingHelmet();
		virtual ~Items_Equipment_Gear_Hats_VikingHelmet() = default;
	};

	class Items_Equipment_Gear_Hats_WarlocksHeaddress : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WarlocksHeaddress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WarlocksHeaddress();
		virtual ~Items_Equipment_Gear_Hats_WarlocksHeaddress() = default;
	};

	class Items_Equipment_Gear_Hats_WitchesHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WitchesHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WitchesHat();
		virtual ~Items_Equipment_Gear_Hats_WitchesHat() = default;
	};

	class Items_Equipment_Gear_Hats_WizardsHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WizardsHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WizardsHat();
		virtual ~Items_Equipment_Gear_Hats_WizardsHat() = default;
	};

	class Items_Equipment_Gear_Hats_WizardsHatArcane : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WizardsHatArcane* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WizardsHatArcane();
		virtual ~Items_Equipment_Gear_Hats_WizardsHatArcane() = default;
	};

	class Items_Equipment_Gear_Hats_WizardsHatEarth : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WizardsHatEarth* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WizardsHatEarth();
		virtual ~Items_Equipment_Gear_Hats_WizardsHatEarth() = default;
	};

	class Items_Equipment_Gear_Hats_WizardsHatShadow : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WizardsHatShadow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WizardsHatShadow();
		virtual ~Items_Equipment_Gear_Hats_WizardsHatShadow() = default;
	};

	class Items_Equipment_Gear_Hats_WizardsHatWater : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WizardsHatWater* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WizardsHatWater();
		virtual ~Items_Equipment_Gear_Hats_WizardsHatWater() = default;
	};

	class Items_Equipment_Gear_Hats_WolfHat : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WolfHat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WolfHat();
		virtual ~Items_Equipment_Gear_Hats_WolfHat() = default;
	};

	class Items_Equipment_Gear_Hats_WolfHatWhite : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WolfHatWhite* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WolfHatWhite();
		virtual ~Items_Equipment_Gear_Hats_WolfHatWhite() = default;
	};

	class Items_Equipment_Gear_Hats_WoodenPikeHelm : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Hats_WoodenPikeHelm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Hats_WoodenPikeHelm();
		virtual ~Items_Equipment_Gear_Hats_WoodenPikeHelm() = default;
	};

	class Items_Equipment_Gear_Necklaces_AmethystNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_AmethystNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_AmethystNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_AmethystNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_AquaMarineNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_AquaMarineNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_AquaMarineNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_AquaMarineNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_EmeraldPendant : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_EmeraldPendant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_EmeraldPendant();
		virtual ~Items_Equipment_Gear_Necklaces_EmeraldPendant() = default;
	};

	class Items_Equipment_Gear_Necklaces_GarnetNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_GarnetNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_GarnetNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_GarnetNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_GlowingPendant : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_GlowingPendant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_GlowingPendant();
		virtual ~Items_Equipment_Gear_Necklaces_GlowingPendant() = default;
	};

	class Items_Equipment_Gear_Necklaces_HolyNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_HolyNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_HolyNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_HolyNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_MarineNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_MarineNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_MarineNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_MarineNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_SapphireNecklace : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_SapphireNecklace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_SapphireNecklace();
		virtual ~Items_Equipment_Gear_Necklaces_SapphireNecklace() = default;
	};

	class Items_Equipment_Gear_Necklaces_TopazPendant : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Necklaces_TopazPendant* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Necklaces_TopazPendant();
		virtual ~Items_Equipment_Gear_Necklaces_TopazPendant() = default;
	};

	class Items_Equipment_Gear_Rings_DarkHeartBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_DarkHeartBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_DarkHeartBand();
		virtual ~Items_Equipment_Gear_Rings_DarkHeartBand() = default;
	};

	class Items_Equipment_Gear_Rings_EmeraldBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_EmeraldBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_EmeraldBand();
		virtual ~Items_Equipment_Gear_Rings_EmeraldBand() = default;
	};

	class Items_Equipment_Gear_Rings_GarnetBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_GarnetBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_GarnetBand();
		virtual ~Items_Equipment_Gear_Rings_GarnetBand() = default;
	};

	class Items_Equipment_Gear_Rings_HeartBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_HeartBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_HeartBand();
		virtual ~Items_Equipment_Gear_Rings_HeartBand() = default;
	};

	class Items_Equipment_Gear_Rings_MarineBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_MarineBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_MarineBand();
		virtual ~Items_Equipment_Gear_Rings_MarineBand() = default;
	};

	class Items_Equipment_Gear_Rings_SapphireBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_SapphireBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_SapphireBand();
		virtual ~Items_Equipment_Gear_Rings_SapphireBand() = default;
	};

	class Items_Equipment_Gear_Rings_ShellBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_ShellBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_ShellBand();
		virtual ~Items_Equipment_Gear_Rings_ShellBand() = default;
	};

	class Items_Equipment_Gear_Rings_SkullBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_SkullBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_SkullBand();
		virtual ~Items_Equipment_Gear_Rings_SkullBand() = default;
	};

	class Items_Equipment_Gear_Rings_SoulBand : public LocalizedString
	{
	public:
		static Items_Equipment_Gear_Rings_SoulBand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Gear_Rings_SoulBand();
		virtual ~Items_Equipment_Gear_Rings_SoulBand() = default;
	};

	class Items_Equipment_Offhands_Shields_WoodenShield : public LocalizedString
	{
	public:
		static Items_Equipment_Offhands_Shields_WoodenShield* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Offhands_Shields_WoodenShield();
		virtual ~Items_Equipment_Offhands_Shields_WoodenShield() = default;
	};

	class Items_Equipment_Weapons_Axes_BoneAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_BoneAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_BoneAxe();
		virtual ~Items_Equipment_Weapons_Axes_BoneAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_CopperAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_CopperAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_CopperAxe();
		virtual ~Items_Equipment_Weapons_Axes_CopperAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_CrystalAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_CrystalAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_CrystalAxe();
		virtual ~Items_Equipment_Weapons_Axes_CrystalAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_DemonicAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_DemonicAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_DemonicAxe();
		virtual ~Items_Equipment_Weapons_Axes_DemonicAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_FrostAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_FrostAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_FrostAxe();
		virtual ~Items_Equipment_Weapons_Axes_FrostAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_GoldenAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_GoldenAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_GoldenAxe();
		virtual ~Items_Equipment_Weapons_Axes_GoldenAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_MithrilAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_MithrilAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_MithrilAxe();
		virtual ~Items_Equipment_Weapons_Axes_MithrilAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_Scythe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_Scythe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_Scythe();
		virtual ~Items_Equipment_Weapons_Axes_Scythe() = default;
	};

	class Items_Equipment_Weapons_Axes_SteelAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_SteelAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_SteelAxe();
		virtual ~Items_Equipment_Weapons_Axes_SteelAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_VoidAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_VoidAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_VoidAxe();
		virtual ~Items_Equipment_Weapons_Axes_VoidAxe() = default;
	};

	class Items_Equipment_Weapons_Axes_WoodenAxe : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Axes_WoodenAxe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Axes_WoodenAxe();
		virtual ~Items_Equipment_Weapons_Axes_WoodenAxe() = default;
	};

	class Items_Equipment_Weapons_Bows_BoneBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_BoneBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_BoneBow();
		virtual ~Items_Equipment_Weapons_Bows_BoneBow() = default;
	};

	class Items_Equipment_Weapons_Bows_CrystalBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_CrystalBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_CrystalBow();
		virtual ~Items_Equipment_Weapons_Bows_CrystalBow() = default;
	};

	class Items_Equipment_Weapons_Bows_DemonicBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_DemonicBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_DemonicBow();
		virtual ~Items_Equipment_Weapons_Bows_DemonicBow() = default;
	};

	class Items_Equipment_Weapons_Bows_GoldenBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_GoldenBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_GoldenBow();
		virtual ~Items_Equipment_Weapons_Bows_GoldenBow() = default;
	};

	class Items_Equipment_Weapons_Bows_HuntersBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_HuntersBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_HuntersBow();
		virtual ~Items_Equipment_Weapons_Bows_HuntersBow() = default;
	};

	class Items_Equipment_Weapons_Bows_IvyBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_IvyBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_IvyBow();
		virtual ~Items_Equipment_Weapons_Bows_IvyBow() = default;
	};

	class Items_Equipment_Weapons_Bows_SteelBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_SteelBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_SteelBow();
		virtual ~Items_Equipment_Weapons_Bows_SteelBow() = default;
	};

	class Items_Equipment_Weapons_Bows_VoidBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_VoidBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_VoidBow();
		virtual ~Items_Equipment_Weapons_Bows_VoidBow() = default;
	};

	class Items_Equipment_Weapons_Bows_WoodenBow : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Bows_WoodenBow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Bows_WoodenBow();
		virtual ~Items_Equipment_Weapons_Bows_WoodenBow() = default;
	};

	class Items_Equipment_Weapons_Maces_Bludgeon : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_Bludgeon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_Bludgeon();
		virtual ~Items_Equipment_Weapons_Maces_Bludgeon() = default;
	};

	class Items_Equipment_Weapons_Maces_BoneHammer : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_BoneHammer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_BoneHammer();
		virtual ~Items_Equipment_Weapons_Maces_BoneHammer() = default;
	};

	class Items_Equipment_Weapons_Maces_CopperMallet : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_CopperMallet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_CopperMallet();
		virtual ~Items_Equipment_Weapons_Maces_CopperMallet() = default;
	};

	class Items_Equipment_Weapons_Maces_CrystalMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_CrystalMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_CrystalMace();
		virtual ~Items_Equipment_Weapons_Maces_CrystalMace() = default;
	};

	class Items_Equipment_Weapons_Maces_DemonicMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_DemonicMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_DemonicMace();
		virtual ~Items_Equipment_Weapons_Maces_DemonicMace() = default;
	};

	class Items_Equipment_Weapons_Maces_GoldenMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_GoldenMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_GoldenMace();
		virtual ~Items_Equipment_Weapons_Maces_GoldenMace() = default;
	};

	class Items_Equipment_Weapons_Maces_MithrilMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_MithrilMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_MithrilMace();
		virtual ~Items_Equipment_Weapons_Maces_MithrilMace() = default;
	};

	class Items_Equipment_Weapons_Maces_SteelMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_SteelMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_SteelMace();
		virtual ~Items_Equipment_Weapons_Maces_SteelMace() = default;
	};

	class Items_Equipment_Weapons_Maces_Timmy : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_Timmy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_Timmy();
		virtual ~Items_Equipment_Weapons_Maces_Timmy() = default;
	};

	class Items_Equipment_Weapons_Maces_VoidMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_VoidMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_VoidMace();
		virtual ~Items_Equipment_Weapons_Maces_VoidMace() = default;
	};

	class Items_Equipment_Weapons_Maces_WitchingMace : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_WitchingMace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_WitchingMace();
		virtual ~Items_Equipment_Weapons_Maces_WitchingMace() = default;
	};

	class Items_Equipment_Weapons_Maces_WoodenClub : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Maces_WoodenClub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Maces_WoodenClub();
		virtual ~Items_Equipment_Weapons_Maces_WoodenClub() = default;
	};

	class Items_Equipment_Weapons_Swords_AshenBlade : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_AshenBlade* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_AshenBlade();
		virtual ~Items_Equipment_Weapons_Swords_AshenBlade() = default;
	};

	class Items_Equipment_Weapons_Swords_BoneSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_BoneSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_BoneSword();
		virtual ~Items_Equipment_Weapons_Swords_BoneSword() = default;
	};

	class Items_Equipment_Weapons_Swords_CandySword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_CandySword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_CandySword();
		virtual ~Items_Equipment_Weapons_Swords_CandySword() = default;
	};

	class Items_Equipment_Weapons_Swords_CopperSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_CopperSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_CopperSword();
		virtual ~Items_Equipment_Weapons_Swords_CopperSword() = default;
	};

	class Items_Equipment_Weapons_Swords_CrystalSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_CrystalSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_CrystalSword();
		virtual ~Items_Equipment_Weapons_Swords_CrystalSword() = default;
	};

	class Items_Equipment_Weapons_Swords_DemonicSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_DemonicSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_DemonicSword();
		virtual ~Items_Equipment_Weapons_Swords_DemonicSword() = default;
	};

	class Items_Equipment_Weapons_Swords_Dreadmourn : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_Dreadmourn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_Dreadmourn();
		virtual ~Items_Equipment_Weapons_Swords_Dreadmourn() = default;
	};

	class Items_Equipment_Weapons_Swords_FireSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_FireSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_FireSword();
		virtual ~Items_Equipment_Weapons_Swords_FireSword() = default;
	};

	class Items_Equipment_Weapons_Swords_Frostbane : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_Frostbane* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_Frostbane();
		virtual ~Items_Equipment_Weapons_Swords_Frostbane() = default;
	};

	class Items_Equipment_Weapons_Swords_GoldenSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_GoldenSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_GoldenSword();
		virtual ~Items_Equipment_Weapons_Swords_GoldenSword() = default;
	};

	class Items_Equipment_Weapons_Swords_MithrilSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_MithrilSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_MithrilSword();
		virtual ~Items_Equipment_Weapons_Swords_MithrilSword() = default;
	};

	class Items_Equipment_Weapons_Swords_SteelSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_SteelSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_SteelSword();
		virtual ~Items_Equipment_Weapons_Swords_SteelSword() = default;
	};

	class Items_Equipment_Weapons_Swords_TheButcher : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_TheButcher* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_TheButcher();
		virtual ~Items_Equipment_Weapons_Swords_TheButcher() = default;
	};

	class Items_Equipment_Weapons_Swords_VoidSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_VoidSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_VoidSword();
		virtual ~Items_Equipment_Weapons_Swords_VoidSword() = default;
	};

	class Items_Equipment_Weapons_Swords_WoodenSword : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Swords_WoodenSword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Swords_WoodenSword();
		virtual ~Items_Equipment_Weapons_Swords_WoodenSword() = default;
	};

	class Items_Equipment_Weapons_Wands_BoneWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_BoneWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_BoneWand();
		virtual ~Items_Equipment_Weapons_Wands_BoneWand() = default;
	};

	class Items_Equipment_Weapons_Wands_ChieftainsWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_ChieftainsWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_ChieftainsWand();
		virtual ~Items_Equipment_Weapons_Wands_ChieftainsWand() = default;
	};

	class Items_Equipment_Weapons_Wands_CrystalWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_CrystalWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_CrystalWand();
		virtual ~Items_Equipment_Weapons_Wands_CrystalWand() = default;
	};

	class Items_Equipment_Weapons_Wands_DemonicWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_DemonicWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_DemonicWand();
		virtual ~Items_Equipment_Weapons_Wands_DemonicWand() = default;
	};

	class Items_Equipment_Weapons_Wands_EmeraldWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_EmeraldWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_EmeraldWand();
		virtual ~Items_Equipment_Weapons_Wands_EmeraldWand() = default;
	};

	class Items_Equipment_Weapons_Wands_GoldenWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_GoldenWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_GoldenWand();
		virtual ~Items_Equipment_Weapons_Wands_GoldenWand() = default;
	};

	class Items_Equipment_Weapons_Wands_QuartzWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_QuartzWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_QuartzWand();
		virtual ~Items_Equipment_Weapons_Wands_QuartzWand() = default;
	};

	class Items_Equipment_Weapons_Wands_SapphireWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_SapphireWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_SapphireWand();
		virtual ~Items_Equipment_Weapons_Wands_SapphireWand() = default;
	};

	class Items_Equipment_Weapons_Wands_SerpentWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_SerpentWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_SerpentWand();
		virtual ~Items_Equipment_Weapons_Wands_SerpentWand() = default;
	};

	class Items_Equipment_Weapons_Wands_TaserRod : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_TaserRod* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_TaserRod();
		virtual ~Items_Equipment_Weapons_Wands_TaserRod() = default;
	};

	class Items_Equipment_Weapons_Wands_VoidWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_VoidWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_VoidWand();
		virtual ~Items_Equipment_Weapons_Wands_VoidWand() = default;
	};

	class Items_Equipment_Weapons_Wands_WitchesWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_WitchesWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_WitchesWand();
		virtual ~Items_Equipment_Weapons_Wands_WitchesWand() = default;
	};

	class Items_Equipment_Weapons_Wands_WoodenWand : public LocalizedString
	{
	public:
		static Items_Equipment_Weapons_Wands_WoodenWand* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Equipment_Weapons_Wands_WoodenWand();
		virtual ~Items_Equipment_Weapons_Wands_WoodenWand() = default;
	};

	class Items_Error_MissingNo : public LocalizedString
	{
	public:
		static Items_Error_MissingNo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Error_MissingNo();
		virtual ~Items_Error_MissingNo() = default;
	};

	class Items_Misc_Keys_BlueGem : public LocalizedString
	{
	public:
		static Items_Misc_Keys_BlueGem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_BlueGem();
		virtual ~Items_Misc_Keys_BlueGem() = default;
	};

	class Items_Misc_Keys_CryptKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_CryptKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_CryptKey();
		virtual ~Items_Misc_Keys_CryptKey() = default;
	};

	class Items_Misc_Keys_DemonKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_DemonKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_DemonKey();
		virtual ~Items_Misc_Keys_DemonKey() = default;
	};

	class Items_Misc_Keys_FountainRoomKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_FountainRoomKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_FountainRoomKey();
		virtual ~Items_Misc_Keys_FountainRoomKey() = default;
	};

	class Items_Misc_Keys_FrostKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_FrostKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_FrostKey();
		virtual ~Items_Misc_Keys_FrostKey() = default;
	};

	class Items_Misc_Keys_FrozenKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_FrozenKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_FrozenKey();
		virtual ~Items_Misc_Keys_FrozenKey() = default;
	};

	class Items_Misc_Keys_HellGateCrystal : public LocalizedString
	{
	public:
		static Items_Misc_Keys_HellGateCrystal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_HellGateCrystal();
		virtual ~Items_Misc_Keys_HellGateCrystal() = default;
	};

	class Items_Misc_Keys_HellKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_HellKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_HellKey();
		virtual ~Items_Misc_Keys_HellKey() = default;
	};

	class Items_Misc_Keys_IceKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_IceKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_IceKey();
		virtual ~Items_Misc_Keys_IceKey() = default;
	};

	class Items_Misc_Keys_LetterForThePrincess : public LocalizedString
	{
	public:
		static Items_Misc_Keys_LetterForThePrincess* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_LetterForThePrincess();
		virtual ~Items_Misc_Keys_LetterForThePrincess() = default;
	};

	class Items_Misc_Keys_MageTowerKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_MageTowerKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_MageTowerKey();
		virtual ~Items_Misc_Keys_MageTowerKey() = default;
	};

	class Items_Misc_Keys_MagesGuildPrisonKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_MagesGuildPrisonKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_MagesGuildPrisonKey();
		virtual ~Items_Misc_Keys_MagesGuildPrisonKey() = default;
	};

	class Items_Misc_Keys_MedusasMirror : public LocalizedString
	{
	public:
		static Items_Misc_Keys_MedusasMirror* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_MedusasMirror();
		virtual ~Items_Misc_Keys_MedusasMirror() = default;
	};

	class Items_Misc_Keys_MinesKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_MinesKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_MinesKey();
		virtual ~Items_Misc_Keys_MinesKey() = default;
	};

	class Items_Misc_Keys_PurpleGem : public LocalizedString
	{
	public:
		static Items_Misc_Keys_PurpleGem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_PurpleGem();
		virtual ~Items_Misc_Keys_PurpleGem() = default;
	};

	class Items_Misc_Keys_RamWheel : public LocalizedString
	{
	public:
		static Items_Misc_Keys_RamWheel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_RamWheel();
		virtual ~Items_Misc_Keys_RamWheel() = default;
	};

	class Items_Misc_Keys_RedGem : public LocalizedString
	{
	public:
		static Items_Misc_Keys_RedGem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_RedGem();
		virtual ~Items_Misc_Keys_RedGem() = default;
	};

	class Items_Misc_Keys_RustyKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_RustyKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_RustyKey();
		virtual ~Items_Misc_Keys_RustyKey() = default;
	};

	class Items_Misc_Keys_TownKey : public LocalizedString
	{
	public:
		static Items_Misc_Keys_TownKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_TownKey();
		virtual ~Items_Misc_Keys_TownKey() = default;
	};

	class Items_Misc_Keys_TrainTicket : public LocalizedString
	{
	public:
		static Items_Misc_Keys_TrainTicket* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Keys_TrainTicket();
		virtual ~Items_Misc_Keys_TrainTicket() = default;
	};

	class Items_Misc_Maps_DungeonMap : public LocalizedString
	{
	public:
		static Items_Misc_Maps_DungeonMap* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Items_Misc_Maps_DungeonMap();
		virtual ~Items_Misc_Maps_DungeonMap() = default;
	};

	class Menus_Accept : public LocalizedString
	{
	public:
		static Menus_Accept* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Accept();
		virtual ~Menus_Accept() = default;
	};

	class Menus_Apply : public LocalizedString
	{
	public:
		static Menus_Apply* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Apply();
		virtual ~Menus_Apply() = default;
	};

	class Menus_ApplyChanges : public LocalizedString
	{
	public:
		static Menus_ApplyChanges* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ApplyChanges();
		virtual ~Menus_ApplyChanges() = default;
	};

	class Menus_Back : public LocalizedString
	{
	public:
		static Menus_Back* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Back();
		virtual ~Menus_Back() = default;
	};

	class Menus_Cancel : public LocalizedString
	{
	public:
		static Menus_Cancel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Cancel();
		virtual ~Menus_Cancel() = default;
	};

	class Menus_Cards_Cards : public LocalizedString
	{
	public:
		static Menus_Cards_Cards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Cards_Cards();
		virtual ~Menus_Cards_Cards() = default;
	};

	class Menus_Collectables_Animals_Bat : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bat();
		virtual ~Menus_Collectables_Animals_Bat() = default;
	};

	class Menus_Collectables_Animals_Bear : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bear* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bear();
		virtual ~Menus_Collectables_Animals_Bear() = default;
	};

	class Menus_Collectables_Animals_Beaver : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Beaver* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Beaver();
		virtual ~Menus_Collectables_Animals_Beaver() = default;
	};

	class Menus_Collectables_Animals_Bee : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bee* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bee();
		virtual ~Menus_Collectables_Animals_Bee() = default;
	};

	class Menus_Collectables_Animals_Bird : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bird* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bird();
		virtual ~Menus_Collectables_Animals_Bird() = default;
	};

	class Menus_Collectables_Animals_Blowfish : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Blowfish* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Blowfish();
		virtual ~Menus_Collectables_Animals_Blowfish() = default;
	};

	class Menus_Collectables_Animals_Bull : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bull* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bull();
		virtual ~Menus_Collectables_Animals_Bull() = default;
	};

	class Menus_Collectables_Animals_Bunny : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Bunny* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Bunny();
		virtual ~Menus_Collectables_Animals_Bunny() = default;
	};

	class Menus_Collectables_Animals_Cat : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Cat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Cat();
		virtual ~Menus_Collectables_Animals_Cat() = default;
	};

	class Menus_Collectables_Animals_Chicken : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Chicken* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Chicken();
		virtual ~Menus_Collectables_Animals_Chicken() = default;
	};

	class Menus_Collectables_Animals_Cow : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Cow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Cow();
		virtual ~Menus_Collectables_Animals_Cow() = default;
	};

	class Menus_Collectables_Animals_Crocodile : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Crocodile* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Crocodile();
		virtual ~Menus_Collectables_Animals_Crocodile() = default;
	};

	class Menus_Collectables_Animals_Dinosaur : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Dinosaur* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Dinosaur();
		virtual ~Menus_Collectables_Animals_Dinosaur() = default;
	};

	class Menus_Collectables_Animals_Dog : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Dog* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Dog();
		virtual ~Menus_Collectables_Animals_Dog() = default;
	};

	class Menus_Collectables_Animals_Duck : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Duck* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Duck();
		virtual ~Menus_Collectables_Animals_Duck() = default;
	};

	class Menus_Collectables_Animals_Fox : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Fox* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Fox();
		virtual ~Menus_Collectables_Animals_Fox() = default;
	};

	class Menus_Collectables_Animals_Giraffe : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Giraffe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Giraffe();
		virtual ~Menus_Collectables_Animals_Giraffe() = default;
	};

	class Menus_Collectables_Animals_Goat : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Goat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Goat();
		virtual ~Menus_Collectables_Animals_Goat() = default;
	};

	class Menus_Collectables_Animals_Hedgehog : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Hedgehog* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Hedgehog();
		virtual ~Menus_Collectables_Animals_Hedgehog() = default;
	};

	class Menus_Collectables_Animals_Hippo : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Hippo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Hippo();
		virtual ~Menus_Collectables_Animals_Hippo() = default;
	};

	class Menus_Collectables_Animals_Horse : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Horse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Horse();
		virtual ~Menus_Collectables_Animals_Horse() = default;
	};

	class Menus_Collectables_Animals_KillerWhale : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_KillerWhale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_KillerWhale();
		virtual ~Menus_Collectables_Animals_KillerWhale() = default;
	};

	class Menus_Collectables_Animals_Koala : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Koala* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Koala();
		virtual ~Menus_Collectables_Animals_Koala() = default;
	};

	class Menus_Collectables_Animals_Ladybug : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Ladybug* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Ladybug();
		virtual ~Menus_Collectables_Animals_Ladybug() = default;
	};

	class Menus_Collectables_Animals_Lion : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Lion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Lion();
		virtual ~Menus_Collectables_Animals_Lion() = default;
	};

	class Menus_Collectables_Animals_Lizard : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Lizard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Lizard();
		virtual ~Menus_Collectables_Animals_Lizard() = default;
	};

	class Menus_Collectables_Animals_Monkey : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Monkey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Monkey();
		virtual ~Menus_Collectables_Animals_Monkey() = default;
	};

	class Menus_Collectables_Animals_MountainLion : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_MountainLion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_MountainLion();
		virtual ~Menus_Collectables_Animals_MountainLion() = default;
	};

	class Menus_Collectables_Animals_Mouse : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Mouse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Mouse();
		virtual ~Menus_Collectables_Animals_Mouse() = default;
	};

	class Menus_Collectables_Animals_Panda : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Panda* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Panda();
		virtual ~Menus_Collectables_Animals_Panda() = default;
	};

	class Menus_Collectables_Animals_Parrot : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Parrot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Parrot();
		virtual ~Menus_Collectables_Animals_Parrot() = default;
	};

	class Menus_Collectables_Animals_Penguin : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Penguin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Penguin();
		virtual ~Menus_Collectables_Animals_Penguin() = default;
	};

	class Menus_Collectables_Animals_Pig : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Pig* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Pig();
		virtual ~Menus_Collectables_Animals_Pig() = default;
	};

	class Menus_Collectables_Animals_Raccoon : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Raccoon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Raccoon();
		virtual ~Menus_Collectables_Animals_Raccoon() = default;
	};

	class Menus_Collectables_Animals_Reindeer : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Reindeer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Reindeer();
		virtual ~Menus_Collectables_Animals_Reindeer() = default;
	};

	class Menus_Collectables_Animals_Rhino : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Rhino* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Rhino();
		virtual ~Menus_Collectables_Animals_Rhino() = default;
	};

	class Menus_Collectables_Animals_Sheep : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Sheep* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Sheep();
		virtual ~Menus_Collectables_Animals_Sheep() = default;
	};

	class Menus_Collectables_Animals_Skunk : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Skunk* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Skunk();
		virtual ~Menus_Collectables_Animals_Skunk() = default;
	};

	class Menus_Collectables_Animals_Snail : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Snail* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Snail();
		virtual ~Menus_Collectables_Animals_Snail() = default;
	};

	class Menus_Collectables_Animals_Snake : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Snake* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Snake();
		virtual ~Menus_Collectables_Animals_Snake() = default;
	};

	class Menus_Collectables_Animals_Squid : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Squid* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Squid();
		virtual ~Menus_Collectables_Animals_Squid() = default;
	};

	class Menus_Collectables_Animals_Squirrel : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Squirrel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Squirrel();
		virtual ~Menus_Collectables_Animals_Squirrel() = default;
	};

	class Menus_Collectables_Animals_Tiger : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Tiger* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Tiger();
		virtual ~Menus_Collectables_Animals_Tiger() = default;
	};

	class Menus_Collectables_Animals_Tucan : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Tucan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Tucan();
		virtual ~Menus_Collectables_Animals_Tucan() = default;
	};

	class Menus_Collectables_Animals_Turtle : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Turtle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Turtle();
		virtual ~Menus_Collectables_Animals_Turtle() = default;
	};

	class Menus_Collectables_Animals_Whale : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Whale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Whale();
		virtual ~Menus_Collectables_Animals_Whale() = default;
	};

	class Menus_Collectables_Animals_Wolf : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Wolf* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Wolf();
		virtual ~Menus_Collectables_Animals_Wolf() = default;
	};

	class Menus_Collectables_Animals_Worm : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Worm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Worm();
		virtual ~Menus_Collectables_Animals_Worm() = default;
	};

	class Menus_Collectables_Animals_Yeti : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Yeti* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Yeti();
		virtual ~Menus_Collectables_Animals_Yeti() = default;
	};

	class Menus_Collectables_Animals_Zebra : public LocalizedString
	{
	public:
		static Menus_Collectables_Animals_Zebra* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Animals_Zebra();
		virtual ~Menus_Collectables_Animals_Zebra() = default;
	};

	class Menus_Collectables_Collectables : public LocalizedString
	{
	public:
		static Menus_Collectables_Collectables* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Collectables_Collectables();
		virtual ~Menus_Collectables_Collectables() = default;
	};

	class Menus_ComingSoon : public LocalizedString
	{
	public:
		static Menus_ComingSoon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ComingSoon();
		virtual ~Menus_ComingSoon() = default;
	};

	class Menus_Confirm : public LocalizedString
	{
	public:
		static Menus_Confirm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Confirm();
		virtual ~Menus_Confirm() = default;
	};

	class Menus_Crafting_All : public LocalizedString
	{
	public:
		static Menus_Crafting_All* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_All();
		virtual ~Menus_Crafting_All() = default;
	};

	class Menus_Crafting_Axes : public LocalizedString
	{
	public:
		static Menus_Crafting_Axes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Axes();
		virtual ~Menus_Crafting_Axes() = default;
	};

	class Menus_Crafting_Bows : public LocalizedString
	{
	public:
		static Menus_Crafting_Bows* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Bows();
		virtual ~Menus_Crafting_Bows() = default;
	};

	class Menus_Crafting_Craftable : public LocalizedString
	{
	public:
		static Menus_Crafting_Craftable* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Craftable();
		virtual ~Menus_Crafting_Craftable() = default;
	};

	class Menus_Crafting_Crafting : public LocalizedString
	{
	public:
		static Menus_Crafting_Crafting* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Crafting();
		virtual ~Menus_Crafting_Crafting() = default;
	};

	class Menus_Crafting_Dismantle : public LocalizedString
	{
	public:
		static Menus_Crafting_Dismantle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Dismantle();
		virtual ~Menus_Crafting_Dismantle() = default;
	};

	class Menus_Crafting_Maces : public LocalizedString
	{
	public:
		static Menus_Crafting_Maces* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Maces();
		virtual ~Menus_Crafting_Maces() = default;
	};

	class Menus_Crafting_Potions : public LocalizedString
	{
	public:
		static Menus_Crafting_Potions* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Potions();
		virtual ~Menus_Crafting_Potions() = default;
	};

	class Menus_Crafting_Spears : public LocalizedString
	{
	public:
		static Menus_Crafting_Spears* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Spears();
		virtual ~Menus_Crafting_Spears() = default;
	};

	class Menus_Crafting_Swords : public LocalizedString
	{
	public:
		static Menus_Crafting_Swords* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Swords();
		virtual ~Menus_Crafting_Swords() = default;
	};

	class Menus_Crafting_Transmutes : public LocalizedString
	{
	public:
		static Menus_Crafting_Transmutes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Transmutes();
		virtual ~Menus_Crafting_Transmutes() = default;
	};

	class Menus_Crafting_Wands : public LocalizedString
	{
	public:
		static Menus_Crafting_Wands* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Crafting_Wands();
		virtual ~Menus_Crafting_Wands() = default;
	};

	class Menus_Credits_Developers : public LocalizedString
	{
	public:
		static Menus_Credits_Developers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Credits_Developers();
		virtual ~Menus_Credits_Developers() = default;
	};

	class Menus_Credits_MattTwitter : public LocalizedString
	{
	public:
		static Menus_Credits_MattTwitter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Credits_MattTwitter();
		virtual ~Menus_Credits_MattTwitter() = default;
	};

	class Menus_Credits_NateTwitter : public LocalizedString
	{
	public:
		static Menus_Credits_NateTwitter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Credits_NateTwitter();
		virtual ~Menus_Credits_NateTwitter() = default;
	};

	class Menus_Credits_ZacTwitter : public LocalizedString
	{
	public:
		static Menus_Credits_ZacTwitter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Credits_ZacTwitter();
		virtual ~Menus_Credits_ZacTwitter() = default;
	};

	class Menus_Demo : public LocalizedString
	{
	public:
		static Menus_Demo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Demo();
		virtual ~Menus_Demo() = default;
	};

	class Menus_Developer_DeveloperMenu : public LocalizedString
	{
	public:
		static Menus_Developer_DeveloperMenu* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Developer_DeveloperMenu();
		virtual ~Menus_Developer_DeveloperMenu() = default;
	};

	class Menus_Exit : public LocalizedString
	{
	public:
		static Menus_Exit* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Exit();
		virtual ~Menus_Exit() = default;
	};

	class Menus_GotIt : public LocalizedString
	{
	public:
		static Menus_GotIt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_GotIt();
		virtual ~Menus_GotIt() = default;
	};

	class Menus_HackingTutorials : public LocalizedString
	{
	public:
		static Menus_HackingTutorials* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_HackingTutorials();
		virtual ~Menus_HackingTutorials() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ArrowRain_ArrowRain : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ArrowRain_ArrowRain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ArrowRain_ArrowRain();
		virtual ~Menus_Hacking_Abilities_Abilities_ArrowRain_ArrowRain() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ArrowRain_CommentCompare : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ArrowRain_CommentCompare* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ArrowRain_CommentCompare();
		virtual ~Menus_Hacking_Abilities_Abilities_ArrowRain_CommentCompare() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ArrowRain_CommentEval : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ArrowRain_CommentEval* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ArrowRain_CommentEval();
		virtual ~Menus_Hacking_Abilities_Abilities_ArrowRain_CommentEval() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ArrowRain_CompareTeam : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ArrowRain_CompareTeam* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ArrowRain_CompareTeam();
		virtual ~Menus_Hacking_Abilities_Abilities_ArrowRain_CompareTeam() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ArrowRain_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ArrowRain_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ArrowRain_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_ArrowRain_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_ApplySpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_ApplySpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_ApplySpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_ApplySpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentAlterSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentAlterSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentAlterSpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentAlterSpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentXmmLoading : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentXmmLoading* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentXmmLoading();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_CommentXmmLoading() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_FireballClippy : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_FireballClippy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_FireballClippy();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_FireballClippy() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm0();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm0() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm1();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_RegisterXmm1() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_StopFireball : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_StopFireball* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_StopFireball();
		virtual ~Menus_Hacking_Abilities_Abilities_Fireball_ApplySpeed_StopFireball() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_CommentElaborate : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_CommentElaborate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_CommentElaborate();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_CommentElaborate() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_CommentHint();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShl : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShl();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShl() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShlBy1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShlBy1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShlBy1();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_CommentShlBy1() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_FogOfWar : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_FogOfWar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_FogOfWar();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_FogOfWar() = default;
	};

	class Menus_Hacking_Abilities_Abilities_FogOfWar_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_FogOfWar_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_FogOfWar_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Abilities_FogOfWar_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_GetProjectileAcceleration : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_GetProjectileAcceleration* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_GetProjectileAcceleration();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_GetProjectileAcceleration() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileAcceleration_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_GetProjectileVelocity : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_GetProjectileVelocity* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_GetProjectileVelocity();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_GetProjectileVelocity() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Abilities_GetProjectileVelocity_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Regeneration_Regeneration : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Regeneration_Regeneration* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Regeneration_Regeneration();
		virtual ~Menus_Hacking_Abilities_Abilities_Regeneration_Regeneration() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Regeneration_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Regeneration_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Regeneration_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_Abilities_Regeneration_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Rejuvination_Hint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Rejuvination_Hint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Rejuvination_Hint();
		virtual ~Menus_Hacking_Abilities_Abilities_Rejuvination_Hint() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Rejuvination_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Rejuvination_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Rejuvination_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Abilities_Rejuvination_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Rejuvination_Rejuvination : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Rejuvination_Rejuvination* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Rejuvination_Rejuvination();
		virtual ~Menus_Hacking_Abilities_Abilities_Rejuvination_Rejuvination() = default;
	};

	class Menus_Hacking_Abilities_Abilities_RockSlide_Hint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_RockSlide_Hint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_RockSlide_Hint();
		virtual ~Menus_Hacking_Abilities_Abilities_RockSlide_Hint() = default;
	};

	class Menus_Hacking_Abilities_Abilities_RockSlide_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_RockSlide_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_RockSlide_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_Abilities_RockSlide_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_Abilities_RockSlide_RockSlide : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_RockSlide_RockSlide* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_RockSlide_RockSlide();
		virtual ~Menus_Hacking_Abilities_Abilities_RockSlide_RockSlide() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ApplySpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ApplySpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ApplySpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ApplySpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_CommentSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_CommentSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_CommentSpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_CommentSpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm0();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm0() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm1();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_RegisterXmm1() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ShadowBoltClippy : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ShadowBoltClippy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ShadowBoltClippy();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_ShadowBoltClippy() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_StopShadowBolt : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_StopShadowBolt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_StopShadowBolt();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBolt_ApplySpeed_StopShadowBolt() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBomb_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBomb_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBomb_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBomb_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_ShadowBomb_ShadowBomb : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_ShadowBomb_ShadowBomb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_ShadowBomb_ShadowBomb();
		virtual ~Menus_Hacking_Abilities_Abilities_ShadowBomb_ShadowBomb() = default;
	};

	class Menus_Hacking_Abilities_Abilities_TimeBomb_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_TimeBomb_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_TimeBomb_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Abilities_TimeBomb_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Abilities_TimeBomb_TimeBombTick : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_TimeBomb_TimeBombTick* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_TimeBomb_TimeBombTick();
		virtual ~Menus_Hacking_Abilities_Abilities_TimeBomb_TimeBombTick() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_ApplySpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_ApplySpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_ApplySpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_ApplySpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentAlterSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentAlterSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentAlterSpeed();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentAlterSpeed() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentXmmLoading : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentXmmLoading* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentXmmLoading();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_CommentXmmLoading() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm0();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm0() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm1();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_RegisterXmm1() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_StopWaterball : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_StopWaterball* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_StopWaterball();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_StopWaterball() = default;
	};

	class Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_WaterballClippy : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_WaterballClippy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_WaterballClippy();
		virtual ~Menus_Hacking_Abilities_Abilities_Waterball_ApplySpeed_WaterballClippy() = default;
	};

	class Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_BlessingOfTheAncients : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_BlessingOfTheAncients* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_BlessingOfTheAncients();
		virtual ~Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_BlessingOfTheAncients() = default;
	};

	class Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx4();
		virtual ~Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx4() = default;
	};

	class Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx8 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx8();
		virtual ~Menus_Hacking_Abilities_Buffs_BlessingOfTheAncients_RegisterEcx8() = default;
	};

	class Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CallOfTheAncients : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CallOfTheAncients* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CallOfTheAncients();
		virtual ~Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CallOfTheAncients() = default;
	};

	class Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentCareful : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentCareful* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentCareful();
		virtual ~Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentCareful() = default;
	};

	class Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDamageIncrease : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDamageIncrease* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDamageIncrease();
		virtual ~Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDamageIncrease() = default;
	};

	class Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDecreaseInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDecreaseInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDecreaseInstead();
		virtual ~Menus_Hacking_Abilities_Buffs_CallOfTheAncients_CommentDecreaseInstead() = default;
	};

	class Menus_Hacking_Abilities_Buffs_CallOfTheAncients_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_CallOfTheAncients_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_CallOfTheAncients_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Buffs_CallOfTheAncients_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Enrage_Enrage : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Enrage_Enrage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Enrage_Enrage();
		virtual ~Menus_Hacking_Abilities_Buffs_Enrage_Enrage() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Enrage_EnrageClippy : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Enrage_EnrageClippy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Enrage_EnrageClippy();
		virtual ~Menus_Hacking_Abilities_Buffs_Enrage_EnrageClippy() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Enrage_ReduceEnrage : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Enrage_ReduceEnrage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Enrage_ReduceEnrage();
		virtual ~Menus_Hacking_Abilities_Buffs_Enrage_ReduceEnrage() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Enrage_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Enrage_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Enrage_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Buffs_Enrage_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Enrage_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Enrage_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Enrage_RegisterXmm3();
		virtual ~Menus_Hacking_Abilities_Buffs_Enrage_RegisterXmm3() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_CommentDamageReduce : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_CommentDamageReduce* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_CommentDamageReduce();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_CommentDamageReduce() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_CommentIncreaseInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_CommentIncreaseInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_CommentIncreaseInstead();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_CommentIncreaseInstead() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_CommentRegister : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_CommentRegister* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_CommentRegister();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_CommentRegister() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_CommentTryChanging : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_CommentTryChanging* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_CommentTryChanging();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_CommentTryChanging() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_Fortitude : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_Fortitude* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_Fortitude();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_Fortitude() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fortitude_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fortitude_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fortitude_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Buffs_Fortitude_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_Fury : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_Fury* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_Fury();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_Fury() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_HintDontWorry : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_HintDontWorry* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_HintDontWorry();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_HintDontWorry() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_HintLea : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_HintLea* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_HintLea();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_HintLea() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_HintLeaDamage : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_HintLeaDamage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_HintLeaDamage();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_HintLeaDamage() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_RegisterEax8 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_RegisterEax8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_RegisterEax8();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_RegisterEax8() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Fury_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Fury_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Fury_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Buffs_Fury_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_CommentDecreaseSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_CommentDecreaseSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_CommentDecreaseSpeed();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_CommentDecreaseSpeed() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_Haste : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_Haste* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_Haste();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_Haste() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_HasteClippy : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_HasteClippy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_HasteClippy();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_HasteClippy() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_ReduceHaste : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_ReduceHaste* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_ReduceHaste();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_ReduceHaste() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Haste_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Haste_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Haste_RegisterXmm3();
		virtual ~Menus_Hacking_Abilities_Buffs_Haste_RegisterXmm3() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_CommentElaborate : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_CommentElaborate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_CommentElaborate();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_CommentElaborate() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_CommentHint();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_CommentShr : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_CommentShr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_CommentShr();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_CommentShr() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_CommentShrBy1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_CommentShrBy1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_CommentShrBy1();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_CommentShrBy1() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_HealthLink : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_HealthLink* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_HealthLink();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_HealthLink() = default;
	};

	class Menus_Hacking_Abilities_Buffs_HealthLink_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_HealthLink_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_HealthLink_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_Buffs_HealthLink_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Inversion_CommentElaborate : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Inversion_CommentElaborate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Inversion_CommentElaborate();
		virtual ~Menus_Hacking_Abilities_Buffs_Inversion_CommentElaborate() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Inversion_CommentNeg : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Inversion_CommentNeg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Inversion_CommentNeg();
		virtual ~Menus_Hacking_Abilities_Buffs_Inversion_CommentNeg() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Inversion_Inversion : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Inversion_Inversion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Inversion_Inversion();
		virtual ~Menus_Hacking_Abilities_Buffs_Inversion_Inversion() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Inversion_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Inversion_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Inversion_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Buffs_Inversion_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Buffs_PactOfTheAncients_PactOfTheAncients : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_PactOfTheAncients_PactOfTheAncients* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_PactOfTheAncients_PactOfTheAncients();
		virtual ~Menus_Hacking_Abilities_Buffs_PactOfTheAncients_PactOfTheAncients() = default;
	};

	class Menus_Hacking_Abilities_Buffs_PactOfTheAncients_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_PactOfTheAncients_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_PactOfTheAncients_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Buffs_PactOfTheAncients_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_CommentElaborate : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_CommentElaborate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_CommentElaborate();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_CommentElaborate() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_CommentHint();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_CommentReflect : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_CommentReflect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_CommentReflect();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_CommentReflect() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_CommentShr : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_CommentShr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_CommentShr();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_CommentShr() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_CommentShrBy1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_CommentShrBy1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_CommentShrBy1();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_CommentShrBy1() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_Reflect : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_Reflect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_Reflect();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_Reflect() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Reflect_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Reflect_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Reflect_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_Buffs_Reflect_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentCompare : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentCompare* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentCompare();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentCompare() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentConditionalMov : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentConditionalMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentConditionalMov();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentConditionalMov() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentFinale : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentFinale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentFinale();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentFinale() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentHint();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentMinDamage : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentMinDamage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentMinDamage();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_CommentMinDamage() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_SharpenedBlade_SharpenedBlade : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_SharpenedBlade_SharpenedBlade* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_SharpenedBlade_SharpenedBlade();
		virtual ~Menus_Hacking_Abilities_Buffs_SharpenedBlade_SharpenedBlade() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivide : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivide* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivide();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivide() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivideByZero : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivideByZero* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivideByZero();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivideByZero() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivisor : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivisor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivisor();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_CommentDivisor() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt1();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt1() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt2();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_CommentMultiplyPt2() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_ReduceStoneSkin : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_ReduceStoneSkin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_ReduceStoneSkin();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_ReduceStoneSkin() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_StoneSkin_StoneSkin : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_StoneSkin_StoneSkin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_StoneSkin_StoneSkin();
		virtual ~Menus_Hacking_Abilities_Buffs_StoneSkin_StoneSkin() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Strength_CommentDamageIncrease : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Strength_CommentDamageIncrease* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Strength_CommentDamageIncrease();
		virtual ~Menus_Hacking_Abilities_Buffs_Strength_CommentDamageIncrease() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Strength_CommentDecreaseInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Strength_CommentDecreaseInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Strength_CommentDecreaseInstead();
		virtual ~Menus_Hacking_Abilities_Buffs_Strength_CommentDecreaseInstead() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Strength_CommentRegister : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Strength_CommentRegister* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Strength_CommentRegister();
		virtual ~Menus_Hacking_Abilities_Buffs_Strength_CommentRegister() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Strength_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Strength_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Strength_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Buffs_Strength_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Strength_Strength : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Strength_Strength* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Strength_Strength();
		virtual ~Menus_Hacking_Abilities_Buffs_Strength_Strength() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Undying_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Undying_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Undying_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Buffs_Undying_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Undying_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Undying_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Undying_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Buffs_Undying_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Buffs_Undying_Undying : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Buffs_Undying_Undying* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Buffs_Undying_Undying();
		virtual ~Menus_Hacking_Abilities_Buffs_Undying_Undying() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Blind_Blind : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Blind_Blind* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Blind_Blind();
		virtual ~Menus_Hacking_Abilities_Debuffs_Blind_Blind() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Blind_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Blind_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Blind_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Debuffs_Blind_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrittleBones_BrittleBones : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrittleBones_BrittleBones* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrittleBones_BrittleBones();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrittleBones_BrittleBones() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrittleBones_CommentIncreaseInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrittleBones_CommentIncreaseInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrittleBones_CommentIncreaseInstead();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrittleBones_CommentIncreaseInstead() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrittleBones_Register : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrittleBones_Register* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrittleBones_Register();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrittleBones_Register() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_BrokenBlade : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_BrokenBlade* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_BrokenBlade();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_BrokenBlade() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentCompare : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentCompare* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentCompare();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentCompare() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentConditionalMov : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentConditionalMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentConditionalMov();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentConditionalMov() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentFinale : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentFinale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentFinale();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentFinale() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentHint();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentMaxDamage : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentMaxDamage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentMaxDamage();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_CommentMaxDamage() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Debuffs_BrokenBlade_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentDamageSetToValue : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentDamageSetToValue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentDamageSetToValue();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentDamageSetToValue() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentIncreaseInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentIncreaseInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentIncreaseInstead();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CommentIncreaseInstead() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CurseOfTheAncients : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CurseOfTheAncients* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CurseOfTheAncients();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_CurseOfTheAncients() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEax();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEax() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEbx();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTheAncients_RegisterEbx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentGainInstead : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentGainInstead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentGainInstead();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentGainInstead() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentSpeed();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CommentSpeed() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CurseOfTongues : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CurseOfTongues* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CurseOfTongues();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_CurseOfTongues() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_ReduceCurse : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_ReduceCurse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_ReduceCurse();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_ReduceCurse() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterXmm3();
		virtual ~Menus_Hacking_Abilities_Debuffs_CurseOfTongues_RegisterXmm3() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Fear_Fear : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Fear_Fear* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Fear_Fear();
		virtual ~Menus_Hacking_Abilities_Debuffs_Fear_Fear() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Fear_Hint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Fear_Hint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Fear_Hint();
		virtual ~Menus_Hacking_Abilities_Debuffs_Fear_Hint() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Fear_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Fear_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Fear_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Debuffs_Fear_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentCompare : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentCompare* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentCompare();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentCompare() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentConditionalMov : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentConditionalMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentConditionalMov();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentConditionalMov() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentFinale : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentFinale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentFinale();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentFinale() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentHint();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_CommentHint() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_ManaDrain : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_ManaDrain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_ManaDrain();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_ManaDrain() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Debuffs_ManaDrain_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentDrain : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentDrain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentDrain();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentDrain() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentGain : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentGain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentGain();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentGain() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentReverse : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentReverse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentReverse();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_CommentReverse() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEsi();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_RegisterEsi() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_SiphonLife_SiphonLife : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_SiphonLife_SiphonLife* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_SiphonLife_SiphonLife();
		virtual ~Menus_Hacking_Abilities_Debuffs_SiphonLife_SiphonLife() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEcx();
		virtual ~Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEcx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEdx();
		virtual ~Menus_Hacking_Abilities_Debuffs_Weakness_RegisterEdx() = default;
	};

	class Menus_Hacking_Abilities_Debuffs_Weakness_Weakness : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Debuffs_Weakness_Weakness* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Debuffs_Weakness_Weakness();
		virtual ~Menus_Hacking_Abilities_Debuffs_Weakness_Weakness() = default;
	};

	class Menus_Hacking_Abilities_DispelIllusion : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_DispelIllusion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_DispelIllusion();
		virtual ~Menus_Hacking_Abilities_DispelIllusion() = default;
	};

	class Menus_Hacking_Abilities_Generic_Bitwise_CommentBitwise : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Bitwise_CommentBitwise* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Bitwise_CommentBitwise();
		virtual ~Menus_Hacking_Abilities_Generic_Bitwise_CommentBitwise() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentC : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentC* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentC();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentC() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmove : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmove* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmove();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmove() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmovg : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmovg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmovg();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmovg() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmovge : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmovge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmovge();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmovge() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmovl : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmovl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmovl();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmovl() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmovle : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmovle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmovle();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmovle() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentCmovne : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentCmovne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentCmovne();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentCmovne() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentE : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentE* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentE();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentE() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentG : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentG* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentG();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentG() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentGe : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentGe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentGe();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentGe() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentL : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentL* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentL();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentL() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentLe : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentLe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentLe();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentLe() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentMov : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentMov();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentMov() = default;
	};

	class Menus_Hacking_Abilities_Generic_Cmov_CommentNe : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Cmov_CommentNe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Cmov_CommentNe();
		virtual ~Menus_Hacking_Abilities_Generic_Cmov_CommentNe() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentBreak : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentBreak* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentBreak();
		virtual ~Menus_Hacking_Abilities_Generic_CommentBreak() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentFloatPt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentFloatPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentFloatPt1();
		virtual ~Menus_Hacking_Abilities_Generic_CommentFloatPt1() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentFloatPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentFloatPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentFloatPt2();
		virtual ~Menus_Hacking_Abilities_Generic_CommentFloatPt2() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentFloatPt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentFloatPt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentFloatPt3();
		virtual ~Menus_Hacking_Abilities_Generic_CommentFloatPt3() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentFloatPt4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentFloatPt4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentFloatPt4();
		virtual ~Menus_Hacking_Abilities_Generic_CommentFloatPt4() = default;
	};

	class Menus_Hacking_Abilities_Generic_CommentSeeLexicon : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_CommentSeeLexicon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_CommentSeeLexicon();
		virtual ~Menus_Hacking_Abilities_Generic_CommentSeeLexicon() = default;
	};

	class Menus_Hacking_Abilities_Generic_Common_CommentDword : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Common_CommentDword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Common_CommentDword();
		virtual ~Menus_Hacking_Abilities_Generic_Common_CommentDword() = default;
	};

	class Menus_Hacking_Abilities_Generic_Common_CommentLexiconPtr : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Common_CommentLexiconPtr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Common_CommentLexiconPtr();
		virtual ~Menus_Hacking_Abilities_Generic_Common_CommentLexiconPtr() = default;
	};

	class Menus_Hacking_Abilities_Generic_Common_CommentLexiconStack : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Common_CommentLexiconStack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Common_CommentLexiconStack();
		virtual ~Menus_Hacking_Abilities_Generic_Common_CommentLexiconStack() = default;
	};

	class Menus_Hacking_Abilities_Generic_Common_CommentPtr : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Common_CommentPtr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Common_CommentPtr();
		virtual ~Menus_Hacking_Abilities_Generic_Common_CommentPtr() = default;
	};

	class Menus_Hacking_Abilities_Generic_Common_CommentQword : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Common_CommentQword* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Common_CommentQword();
		virtual ~Menus_Hacking_Abilities_Generic_Common_CommentQword() = default;
	};

	class Menus_Hacking_Abilities_Generic_Stacks_CommentEquivalentOfMov : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Stacks_CommentEquivalentOfMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Stacks_CommentEquivalentOfMov();
		virtual ~Menus_Hacking_Abilities_Generic_Stacks_CommentEquivalentOfMov() = default;
	};

	class Menus_Hacking_Abilities_Generic_Stacks_CommentPush : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Stacks_CommentPush* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Stacks_CommentPush();
		virtual ~Menus_Hacking_Abilities_Generic_Stacks_CommentPush() = default;
	};

	class Menus_Hacking_Abilities_Generic_Vector_CommentMovss1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Vector_CommentMovss1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Vector_CommentMovss1();
		virtual ~Menus_Hacking_Abilities_Generic_Vector_CommentMovss1() = default;
	};

	class Menus_Hacking_Abilities_Generic_Vector_CommentMovss2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Generic_Vector_CommentMovss2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Generic_Vector_CommentMovss2();
		virtual ~Menus_Hacking_Abilities_Generic_Vector_CommentMovss2() = default;
	};

	class Menus_Hacking_Abilities_Squally_IsAlive : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Squally_IsAlive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Squally_IsAlive();
		virtual ~Menus_Hacking_Abilities_Squally_IsAlive() = default;
	};

	class Menus_Hacking_Abilities_Squally_IsSwimming : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_Squally_IsSwimming* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_Squally_IsSwimming();
		virtual ~Menus_Hacking_Abilities_Squally_IsSwimming() = default;
	};

	class Menus_Hacking_Abilities_TrainingDummy_AddHealth : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_TrainingDummy_AddHealth* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_TrainingDummy_AddHealth();
		virtual ~Menus_Hacking_Abilities_TrainingDummy_AddHealth() = default;
	};

	class Menus_Hacking_Abilities_TrainingDummy_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_TrainingDummy_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_TrainingDummy_RegisterEdi();
		virtual ~Menus_Hacking_Abilities_TrainingDummy_RegisterEdi() = default;
	};

	class Menus_Hacking_Abilities_WeakMinded : public LocalizedString
	{
	public:
		static Menus_Hacking_Abilities_WeakMinded* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Abilities_WeakMinded();
		virtual ~Menus_Hacking_Abilities_WeakMinded() = default;
	};

	class Menus_Hacking_ClippyHelp_Abilities_CurseOfTongues_CurseOfTonguesScriptCopy : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Abilities_CurseOfTongues_CurseOfTonguesScriptCopy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Abilities_CurseOfTongues_CurseOfTonguesScriptCopy();
		virtual ~Menus_Hacking_ClippyHelp_Abilities_CurseOfTongues_CurseOfTonguesScriptCopy() = default;
	};

	class Menus_Hacking_ClippyHelp_Abilities_IsAlive_IsAliveRetVal : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Abilities_IsAlive_IsAliveRetVal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Abilities_IsAlive_IsAliveRetVal();
		virtual ~Menus_Hacking_ClippyHelp_Abilities_IsAlive_IsAliveRetVal() = default;
	};

	class Menus_Hacking_ClippyHelp_Abilities_IsSwimming_IsSwimmingRetVal : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Abilities_IsSwimming_IsSwimmingRetVal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Abilities_IsSwimming_IsSwimmingRetVal();
		virtual ~Menus_Hacking_ClippyHelp_Abilities_IsSwimming_IsSwimmingRetVal() = default;
	};

	class Menus_Hacking_ClippyHelp_Abilities_IsSwimming_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Abilities_IsSwimming_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Abilities_IsSwimming_RegisterEax();
		virtual ~Menus_Hacking_ClippyHelp_Abilities_IsSwimming_RegisterEax() = default;
	};

	class Menus_Hacking_ClippyHelp_Abilities_TrainingHeal_TrainingHealAdd : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Abilities_TrainingHeal_TrainingHealAdd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Abilities_TrainingHeal_TrainingHealAdd();
		virtual ~Menus_Hacking_ClippyHelp_Abilities_TrainingHeal_TrainingHealAdd() = default;
	};

	class Menus_Hacking_ClippyHelp_Items_IncrementHealthFlask_IncrementHealthInc : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Items_IncrementHealthFlask_IncrementHealthInc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Items_IncrementHealthFlask_IncrementHealthInc();
		virtual ~Menus_Hacking_ClippyHelp_Items_IncrementHealthFlask_IncrementHealthInc() = default;
	};

	class Menus_Hacking_ClippyHelp_Items_SpeedRune_SpeedGainMul : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Items_SpeedRune_SpeedGainMul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Items_SpeedRune_SpeedGainMul();
		virtual ~Menus_Hacking_ClippyHelp_Items_SpeedRune_SpeedGainMul() = default;
	};

	class Menus_Hacking_ClippyHelp_Objects_DartGun_DartNop : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Objects_DartGun_DartNop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Objects_DartGun_DartNop();
		virtual ~Menus_Hacking_ClippyHelp_Objects_DartGun_DartNop() = default;
	};

	class Menus_Hacking_ClippyHelp_Objects_MechanicalFlail_MechanicalFlailMov : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Objects_MechanicalFlail_MechanicalFlailMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Objects_MechanicalFlail_MechanicalFlailMov();
		virtual ~Menus_Hacking_ClippyHelp_Objects_MechanicalFlail_MechanicalFlailMov() = default;
	};

	class Menus_Hacking_ClippyHelp_Objects_PendulumBlade_PendulumBladeMov : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Objects_PendulumBlade_PendulumBladeMov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Objects_PendulumBlade_PendulumBladeMov();
		virtual ~Menus_Hacking_ClippyHelp_Objects_PendulumBlade_PendulumBladeMov() = default;
	};

	class Menus_Hacking_ClippyHelp_Objects_Wind_WindNop : public LocalizedString
	{
	public:
		static Menus_Hacking_ClippyHelp_Objects_Wind_WindNop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_ClippyHelp_Objects_Wind_WindNop();
		virtual ~Menus_Hacking_ClippyHelp_Objects_Wind_WindNop() = default;
	};

	class Menus_Hacking_CodeEditor_Address : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Address* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Address();
		virtual ~Menus_Hacking_CodeEditor_Address() = default;
	};

	class Menus_Hacking_CodeEditor_AllocationEditor : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_AllocationEditor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_AllocationEditor();
		virtual ~Menus_Hacking_CodeEditor_AllocationEditor() = default;
	};

	class Menus_Hacking_CodeEditor_Assembler : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Assembler* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Assembler();
		virtual ~Menus_Hacking_CodeEditor_Assembler() = default;
	};

	class Menus_Hacking_CodeEditor_ByteCount : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_ByteCount* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_ByteCount();
		virtual ~Menus_Hacking_CodeEditor_ByteCount() = default;
	};

	class Menus_Hacking_CodeEditor_ByteOverflow : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_ByteOverflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_ByteOverflow();
		virtual ~Menus_Hacking_CodeEditor_ByteOverflow() = default;
	};

	class Menus_Hacking_CodeEditor_Bytes : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Bytes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Bytes();
		virtual ~Menus_Hacking_CodeEditor_Bytes() = default;
	};

	class Menus_Hacking_CodeEditor_ClickToEdit : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_ClickToEdit* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_ClickToEdit();
		virtual ~Menus_Hacking_CodeEditor_ClickToEdit() = default;
	};

	class Menus_Hacking_CodeEditor_CodeEditor : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_CodeEditor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_CodeEditor();
		virtual ~Menus_Hacking_CodeEditor_CodeEditor() = default;
	};

	class Menus_Hacking_CodeEditor_CompileErrors : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_CompileErrors* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_CompileErrors();
		virtual ~Menus_Hacking_CodeEditor_CompileErrors() = default;
	};

	class Menus_Hacking_CodeEditor_CompileSuccessful : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_CompileSuccessful* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_CompileSuccessful();
		virtual ~Menus_Hacking_CodeEditor_CompileSuccessful() = default;
	};

	class Menus_Hacking_CodeEditor_CopyScript : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_CopyScript* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_CopyScript();
		virtual ~Menus_Hacking_CodeEditor_CopyScript() = default;
	};

	class Menus_Hacking_CodeEditor_CreateNewScript : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_CreateNewScript* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_CreateNewScript();
		virtual ~Menus_Hacking_CodeEditor_CreateNewScript() = default;
	};

	class Menus_Hacking_CodeEditor_DeleteConfirmation : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_DeleteConfirmation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_DeleteConfirmation();
		virtual ~Menus_Hacking_CodeEditor_DeleteConfirmation() = default;
	};

	class Menus_Hacking_CodeEditor_DeleteScript : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_DeleteScript* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_DeleteScript();
		virtual ~Menus_Hacking_CodeEditor_DeleteScript() = default;
	};

	class Menus_Hacking_CodeEditor_Discord : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Discord* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Discord();
		virtual ~Menus_Hacking_CodeEditor_Discord() = default;
	};

	class Menus_Hacking_CodeEditor_Error : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Error* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Error();
		virtual ~Menus_Hacking_CodeEditor_Error() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_AlreadyInitialized : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_AlreadyInitialized* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_AlreadyInitialized();
		virtual ~Menus_Hacking_CodeEditor_Errors_AlreadyInitialized() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_AmbiguousOperandSize : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_AmbiguousOperandSize* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_AmbiguousOperandSize();
		virtual ~Menus_Hacking_CodeEditor_Errors_AmbiguousOperandSize() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_CodeTooLarge : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_CodeTooLarge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_CodeTooLarge();
		virtual ~Menus_Hacking_CodeEditor_Errors_CodeTooLarge() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_FeatureNotEnabled : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_FeatureNotEnabled* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_FeatureNotEnabled();
		virtual ~Menus_Hacking_CodeEditor_Errors_FeatureNotEnabled() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidAddress : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidAddress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidAddress();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidAddress() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidAddressIndex : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidAddressIndex* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidAddressIndex();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidAddressIndex() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidAddressScale : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidAddressScale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidAddressScale();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidAddressScale() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidArchitecture : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidArchitecture* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidArchitecture();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidArchitecture() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidArgument : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidArgument* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidArgument();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidArgument() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidBroadcast : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidBroadcast* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidBroadcast();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidBroadcast() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidDisplacement : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidDisplacement* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidDisplacement();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidDisplacement() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidImmediateValue : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidImmediateValue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidImmediateValue();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidImmediateValue() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidInstruction : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidInstruction* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidInstruction();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidInstruction() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidLabel : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidLabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidLabel();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidLabel() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidLabelName : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidLabelName* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidLabelName();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidLabelName() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidLockPrefix : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidLockPrefix* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidLockPrefix();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidLockPrefix() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidMask : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidMask* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidMask();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidMask() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidOperandSize : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidOperandSize* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidOperandSize();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidOperandSize() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidOption : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidOption* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidOption();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidOption() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidParentLabel : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidParentLabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidParentLabel();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidParentLabel() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidPrefixCombination : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidPrefixCombination* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidPrefixCombination();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidPrefixCombination() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRegisterKind : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRegisterKind* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRegisterKind();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRegisterKind() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRegisterPhysicalId : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRegisterPhysicalId* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRegisterPhysicalId();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRegisterPhysicalId() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRegisterType : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRegisterType* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRegisterType();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRegisterType() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRegisterVirtualId : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRegisterVirtualId* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRegisterVirtualId();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRegisterVirtualId() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRelocationEntry : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRelocationEntry* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRelocationEntry();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRelocationEntry() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRepPrefix : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRepPrefix* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRepPrefix();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRepPrefix() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidRexPrefix : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidRexPrefix* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidRexPrefix();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidRexPrefix() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidSegment : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidSegment* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidSegment();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidSegment() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidState : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidState* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidState();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidState() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidTypeInfo : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidTypeInfo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidTypeInfo();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidTypeInfo() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseDouble : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseDouble* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseDouble();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseDouble() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitAddress : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitAddress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitAddress();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitAddress() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitRegister : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitRegister* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitRegister();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseOf64BitRegister() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseOf80BitFloat : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseOf80BitFloat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseOf80BitFloat();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseOf80BitFloat() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseOf8BitRegister : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseOf8BitRegister* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseOf8BitRegister();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseOf8BitRegister() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidUseSingle : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidUseSingle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidUseSingle();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidUseSingle() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidXAquirePrefix : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidXAquirePrefix* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidXAquirePrefix();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidXAquirePrefix() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_InvalidXReleasePrefix : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_InvalidXReleasePrefix* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_InvalidXReleasePrefix();
		virtual ~Menus_Hacking_CodeEditor_Errors_InvalidXReleasePrefix() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_LabelAlreadyBound : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_LabelAlreadyBound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_LabelAlreadyBound();
		virtual ~Menus_Hacking_CodeEditor_Errors_LabelAlreadyBound() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_LabelAlreadyDefined : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_LabelAlreadyDefined* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_LabelAlreadyDefined();
		virtual ~Menus_Hacking_CodeEditor_Errors_LabelAlreadyDefined() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_LabelIndexOverflow : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_LabelIndexOverflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_LabelIndexOverflow();
		virtual ~Menus_Hacking_CodeEditor_Errors_LabelIndexOverflow() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_LabelNameTooLong : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_LabelNameTooLong* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_LabelNameTooLong();
		virtual ~Menus_Hacking_CodeEditor_Errors_LabelNameTooLong() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NoCodeGenerated : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NoCodeGenerated* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NoCodeGenerated();
		virtual ~Menus_Hacking_CodeEditor_Errors_NoCodeGenerated() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NoHeapMemory : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NoHeapMemory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NoHeapMemory();
		virtual ~Menus_Hacking_CodeEditor_Errors_NoHeapMemory() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NoPhysicalRegisters : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NoPhysicalRegisters* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NoPhysicalRegisters();
		virtual ~Menus_Hacking_CodeEditor_Errors_NoPhysicalRegisters() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NoVirtualMemory : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NoVirtualMemory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NoVirtualMemory();
		virtual ~Menus_Hacking_CodeEditor_Errors_NoVirtualMemory() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NonLocalLabelCantHaveParent : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NonLocalLabelCantHaveParent* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NonLocalLabelCantHaveParent();
		virtual ~Menus_Hacking_CodeEditor_Errors_NonLocalLabelCantHaveParent() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NotConsecutiveRegisters : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NotConsecutiveRegisters* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NotConsecutiveRegisters();
		virtual ~Menus_Hacking_CodeEditor_Errors_NotConsecutiveRegisters() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_NotInitialized : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_NotInitialized* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_NotInitialized();
		virtual ~Menus_Hacking_CodeEditor_Errors_NotInitialized() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_Ok : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_Ok* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_Ok();
		virtual ~Menus_Hacking_CodeEditor_Errors_Ok() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_OperandSizeMismatch : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_OperandSizeMismatch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_OperandSizeMismatch();
		virtual ~Menus_Hacking_CodeEditor_Errors_OperandSizeMismatch() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_OverlappedRegisters : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_OverlappedRegisters* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_OverlappedRegisters();
		virtual ~Menus_Hacking_CodeEditor_Errors_OverlappedRegisters() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_OverlappingRegisterAndArgsRegister : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_OverlappingRegisterAndArgsRegister* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_OverlappingRegisterAndArgsRegister();
		virtual ~Menus_Hacking_CodeEditor_Errors_OverlappingRegisterAndArgsRegister() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_RelocationIndexOverflow : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_RelocationIndexOverflow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_RelocationIndexOverflow();
		virtual ~Menus_Hacking_CodeEditor_Errors_RelocationIndexOverflow() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_SlotOccupied : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_SlotOccupied* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_SlotOccupied();
		virtual ~Menus_Hacking_CodeEditor_Errors_SlotOccupied() = default;
	};

	class Menus_Hacking_CodeEditor_Errors_UnknownError : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Errors_UnknownError* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Errors_UnknownError();
		virtual ~Menus_Hacking_CodeEditor_Errors_UnknownError() = default;
	};

	class Menus_Hacking_CodeEditor_FunctionHeader : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_FunctionHeader* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_FunctionHeader();
		virtual ~Menus_Hacking_CodeEditor_FunctionHeader() = default;
	};

	class Menus_Hacking_CodeEditor_LineNumber : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_LineNumber* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_LineNumber();
		virtual ~Menus_Hacking_CodeEditor_LineNumber() = default;
	};

	class Menus_Hacking_CodeEditor_MyNewScript : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_MyNewScript* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_MyNewScript();
		virtual ~Menus_Hacking_CodeEditor_MyNewScript() = default;
	};

	class Menus_Hacking_CodeEditor_OriginalCode : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_OriginalCode* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_OriginalCode();
		virtual ~Menus_Hacking_CodeEditor_OriginalCode() = default;
	};

	class Menus_Hacking_CodeEditor_Readonly : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Readonly* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Readonly();
		virtual ~Menus_Hacking_CodeEditor_Readonly() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEax();
		virtual ~Menus_Hacking_CodeEditor_RegisterEax() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEbp : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEbp();
		virtual ~Menus_Hacking_CodeEditor_RegisterEbp() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEbx();
		virtual ~Menus_Hacking_CodeEditor_RegisterEbx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEcx();
		virtual ~Menus_Hacking_CodeEditor_RegisterEcx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEdi();
		virtual ~Menus_Hacking_CodeEditor_RegisterEdi() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEdx();
		virtual ~Menus_Hacking_CodeEditor_RegisterEdx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEip : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEip();
		virtual ~Menus_Hacking_CodeEditor_RegisterEip() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEsi();
		virtual ~Menus_Hacking_CodeEditor_RegisterEsi() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterEsp : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterEsp();
		virtual ~Menus_Hacking_CodeEditor_RegisterEsp() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR10 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR10();
		virtual ~Menus_Hacking_CodeEditor_RegisterR10() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR11 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR11();
		virtual ~Menus_Hacking_CodeEditor_RegisterR11() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR12 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR12();
		virtual ~Menus_Hacking_CodeEditor_RegisterR12() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR13 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR13();
		virtual ~Menus_Hacking_CodeEditor_RegisterR13() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR14 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR14();
		virtual ~Menus_Hacking_CodeEditor_RegisterR14() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR15 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR15();
		virtual ~Menus_Hacking_CodeEditor_RegisterR15() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR8 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR8();
		virtual ~Menus_Hacking_CodeEditor_RegisterR8() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterR9 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterR9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterR9();
		virtual ~Menus_Hacking_CodeEditor_RegisterR9() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRax : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRax();
		virtual ~Menus_Hacking_CodeEditor_RegisterRax() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRbp : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRbp();
		virtual ~Menus_Hacking_CodeEditor_RegisterRbp() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRbx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRbx();
		virtual ~Menus_Hacking_CodeEditor_RegisterRbx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRcx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRcx();
		virtual ~Menus_Hacking_CodeEditor_RegisterRcx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRdi : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRdi();
		virtual ~Menus_Hacking_CodeEditor_RegisterRdi() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRdx : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRdx();
		virtual ~Menus_Hacking_CodeEditor_RegisterRdx() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRip : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRip();
		virtual ~Menus_Hacking_CodeEditor_RegisterRip() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRsi : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRsi();
		virtual ~Menus_Hacking_CodeEditor_RegisterRsi() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterRsp : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterRsp();
		virtual ~Menus_Hacking_CodeEditor_RegisterRsp() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt0();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt0() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt1();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt1() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt2();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt2() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt3();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt3() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt4 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt4();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt4() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt5 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt5();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt5() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt6 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt6();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt6() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterSt7 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterSt7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterSt7();
		virtual ~Menus_Hacking_CodeEditor_RegisterSt7() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm0();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm0() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm1();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm1() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm2 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm2();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm2() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm3();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm3() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm4 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm4();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm4() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm5 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm5();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm5() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm6 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm6();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm6() = default;
	};

	class Menus_Hacking_CodeEditor_RegisterXmm7 : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_RegisterXmm7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_RegisterXmm7();
		virtual ~Menus_Hacking_CodeEditor_RegisterXmm7() = default;
	};

	class Menus_Hacking_CodeEditor_Status : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Status* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Status();
		virtual ~Menus_Hacking_CodeEditor_Status() = default;
	};

	class Menus_Hacking_CodeEditor_StatusHeader : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_StatusHeader* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_StatusHeader();
		virtual ~Menus_Hacking_CodeEditor_StatusHeader() = default;
	};

	class Menus_Hacking_CodeEditor_Stuck : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Stuck* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Stuck();
		virtual ~Menus_Hacking_CodeEditor_Stuck() = default;
	};

	class Menus_Hacking_CodeEditor_UnfilledBytes : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_UnfilledBytes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_UnfilledBytes();
		virtual ~Menus_Hacking_CodeEditor_UnfilledBytes() = default;
	};

	class Menus_Hacking_CodeEditor_Unknown : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_Unknown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_Unknown();
		virtual ~Menus_Hacking_CodeEditor_Unknown() = default;
	};

	class Menus_Hacking_CodeEditor_UnnamedScript : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_UnnamedScript* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_UnnamedScript();
		virtual ~Menus_Hacking_CodeEditor_UnnamedScript() = default;
	};

	class Menus_Hacking_CodeEditor_YourScripts : public LocalizedString
	{
	public:
		static Menus_Hacking_CodeEditor_YourScripts* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_CodeEditor_YourScripts();
		virtual ~Menus_Hacking_CodeEditor_YourScripts() = default;
	};

	class Menus_Hacking_HackWarning : public LocalizedString
	{
	public:
		static Menus_Hacking_HackWarning* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_HackWarning();
		virtual ~Menus_Hacking_HackWarning() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Add : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Add* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Add();
		virtual ~Menus_Hacking_Lexicon_Assembly_Add() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Dec : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Dec* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Dec();
		virtual ~Menus_Hacking_Lexicon_Assembly_Dec() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Div : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Div* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Div();
		virtual ~Menus_Hacking_Lexicon_Assembly_Div() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Inc : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Inc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Inc();
		virtual ~Menus_Hacking_Lexicon_Assembly_Inc() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Jmp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Jmp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Jmp();
		virtual ~Menus_Hacking_Lexicon_Assembly_Jmp() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Mov : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Mov();
		virtual ~Menus_Hacking_Lexicon_Assembly_Mov() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Mul : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Mul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Mul();
		virtual ~Menus_Hacking_Lexicon_Assembly_Mul() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Neg : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Neg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Neg();
		virtual ~Menus_Hacking_Lexicon_Assembly_Neg() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_OffsetNegative : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_OffsetNegative* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_OffsetNegative();
		virtual ~Menus_Hacking_Lexicon_Assembly_OffsetNegative() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_OffsetPositive : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_OffsetPositive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_OffsetPositive();
		virtual ~Menus_Hacking_Lexicon_Assembly_OffsetPositive() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Pop : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Pop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Pop();
		virtual ~Menus_Hacking_Lexicon_Assembly_Pop() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Ptr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Ptr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Ptr();
		virtual ~Menus_Hacking_Lexicon_Assembly_Ptr() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Push : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Push* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Push();
		virtual ~Menus_Hacking_Lexicon_Assembly_Push() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEax();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEax() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEbp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEbp();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEbp() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEbx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEbx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEcx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEcx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEdi();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEdi() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEdx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEdx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEip();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEip() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEsi();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEsi() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterEsp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterEsp();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterEsp() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRax : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRax();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRax() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRbp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRbp();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRbp() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRbx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRbx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRcx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRcx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRdi();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRdi() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRdx();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRdx() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRip();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRip() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRsi();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRsi() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_RegisterRsp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_RegisterRsp();
		virtual ~Menus_Hacking_Lexicon_Assembly_RegisterRsp() = default;
	};

	class Menus_Hacking_Lexicon_Assembly_Sub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Assembly_Sub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Assembly_Sub();
		virtual ~Menus_Hacking_Lexicon_Assembly_Sub() = default;
	};

	class Menus_Hacking_Lexicon_Examples : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Examples* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Examples();
		virtual ~Menus_Hacking_Lexicon_Examples() = default;
	};

	class Menus_Hacking_Lexicon_Execute : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Execute* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Execute();
		virtual ~Menus_Hacking_Lexicon_Execute() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_And : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_And* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_And();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_And() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Bswap : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Bswap* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Bswap();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Bswap() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Not : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Not* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Not();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Not() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Or : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Or* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Or();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Or() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Rcl : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Rcl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Rcl();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Rcl() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Rcr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Rcr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Rcr();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Rcr() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Rol : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Rol* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Rol();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Rol() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Ror : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Ror* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Ror();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Ror() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Sal : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Sal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Sal();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Sal() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Sar : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Sar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Sar();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Sar() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Shl : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Shl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Shl();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Shl() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Shld : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Shld* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Shld();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Shld() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Shr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Shr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Shr();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Shr() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Shrd : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Shrd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Shrd();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Shrd() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Binary_Xor : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Binary_Xor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Binary_Xor();
		virtual ~Menus_Hacking_Lexicon_Instructions_Binary_Xor() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Call : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Call* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Call();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Call() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Cmp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Cmp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Cmp();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Cmp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Ja : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Ja* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Ja();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Ja() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jae : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jae* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jae();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jae() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jb : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jb();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jb() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Je : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Je* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Je();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Je() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jg : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jg();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jg() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jge : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jge();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jge() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jl : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jl* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jl();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jl() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jmp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jmp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jmp();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jmp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jne : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jne();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jne() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jno : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jno* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jno();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jno() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnp();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jns : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jns* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jns();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jns() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnz : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnz();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jnz() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jo : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jo();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jo() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jp();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Js : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Js* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Js();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Js() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Jz : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Jz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Jz();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Jz() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loop : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loop();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loop() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopcc : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopcc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopcc();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopcc() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loope : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loope* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loope();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loope() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopne : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopne();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopne() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopnz : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopnz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopnz();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopnz() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopz : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopz();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Loopz() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Nop : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Nop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Nop();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Nop() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Ret : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Ret* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Ret();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Ret() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_ControlFlow_Test : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_ControlFlow_Test* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_ControlFlow_Test();
		virtual ~Menus_Hacking_Lexicon_Instructions_ControlFlow_Test() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Add : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Add* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Add();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Add() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Dec : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Dec* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Dec();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Dec() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Div : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Div* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Div();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Div() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Inc : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Inc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Inc();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Inc() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Mov : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Mov();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Mov() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Mul : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Mul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Mul();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Mul() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Neg : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Neg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Neg();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Neg() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Pop : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Pop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Pop();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Pop() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Push : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Push* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Push();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Push() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Data_Sub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Data_Sub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Data_Sub();
		virtual ~Menus_Hacking_Lexicon_Instructions_Data_Sub() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fabs : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fabs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fabs();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fabs() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fadd : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fadd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fadd();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fadd() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Faddp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Faddp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Faddp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Faddp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fchs : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fchs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fchs();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fchs() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovb : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovb();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovb() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovbe : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovbe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovbe();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovbe() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmove : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmove* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmove();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmove() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnb : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnb();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnb() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnbe : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnbe* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnbe();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnbe() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovne : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovne();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovne() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnu : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnu* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnu();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovnu() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovu : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovu* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovu();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcmovu() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcom : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcom();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcom() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomi();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomi() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomip();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomip() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcomp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcompp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcompp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcompp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fcompp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdiv : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdiv* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdiv();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdiv() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivr();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivr() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivrp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivrp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivrp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fdivrp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fiadd : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fiadd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fiadd();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fiadd() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficom : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficom();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficom() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficomp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficomp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficomp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ficomp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fild : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fild* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fild();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fild() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fimul : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fimul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fimul();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fimul() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fist : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fist* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fist();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fist() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fistp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fistp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fistp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fistp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisub();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisub() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisubr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisubr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisubr();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fisubr() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld1();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fld1() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2e : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2e* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2e();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2e() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2t : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2t* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2t();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldl2t() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldlg2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldlg2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldlg2();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldlg2() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldln2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldln2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldln2();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldln2() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldpi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldpi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldpi();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldpi() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldz : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldz* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldz();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fldz() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmul : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmul();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmul() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmulp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmulp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmulp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fmulp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fnop : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fnop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fnop();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fnop() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Frndint : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Frndint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Frndint();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Frndint() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fscale : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fscale* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fscale();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fscale() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsqrt : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsqrt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsqrt();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsqrt() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fstp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fstp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fstp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fstp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsub();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsub() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubr : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubr();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubr() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubrp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubrp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubrp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fsubrp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ftst : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ftst* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ftst();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Ftst() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucom : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucom();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucom() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomi();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomi() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomip();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomip() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucomp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucompp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucompp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucompp();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fucompp() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxam : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxam* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxam();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxam() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxch : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxch();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxch() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxtract : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxtract* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxtract();
		virtual ~Menus_Hacking_Lexicon_Instructions_FloatingPoint_Fxtract() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Addps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Addps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Addps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Addps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Addss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Addss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Addss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Addss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Andnps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Andnps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Andnps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Andnps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Andps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Andps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Andps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Andps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cmpps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cmpps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cmpps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cmpps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cmpss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cmpss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cmpss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cmpss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Comiss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Comiss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Comiss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Comiss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvtpi2ps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvtpi2ps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvtpi2ps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvtpi2ps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvtps2pi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvtps2pi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvtps2pi();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvtps2pi() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvtsi2ss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvtsi2ss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvtsi2ss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvtsi2ss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvtss2si : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvtss2si* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvtss2si();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvtss2si() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvttps2pi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvttps2pi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvttps2pi();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvttps2pi() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Cvttss2si : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Cvttss2si* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Cvttss2si();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Cvttss2si() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Divps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Divps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Divps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Divps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Divss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Divss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Divss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Divss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Maxps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Maxps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Maxps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Maxps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Minps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Minps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Minps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Minps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movaps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movaps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movaps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movaps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movhlps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movhlps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movhlps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movhlps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movhps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movhps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movhps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movhps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movlhps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movlhps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movlhps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movlhps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movmskps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movmskps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movmskps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movmskps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Movups : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Movups* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Movups();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Movups() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Mulps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Mulps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Mulps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Mulps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Mulss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Mulss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Mulss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Mulss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Orps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Orps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Orps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Orps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pavgb : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pavgb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pavgb();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pavgb() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pavgw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pavgw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pavgw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pavgw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pextrw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pextrw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pextrw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pextrw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pinsrw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pinsrw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pinsrw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pinsrw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pmaxsw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pmaxsw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pmaxsw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pmaxsw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pmaxub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pmaxub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pmaxub();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pmaxub() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pminsw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pminsw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pminsw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pminsw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pminub : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pminub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pminub();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pminub() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pmovmskb : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pmovmskb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pmovmskb();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pmovmskb() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pmulhuw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pmulhuw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pmulhuw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pmulhuw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Psadbw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Psadbw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Psadbw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Psadbw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Pshufw : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Pshufw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Pshufw();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Pshufw() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Rcpps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Rcpps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Rcpps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Rcpps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Rcpss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Rcpss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Rcpss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Rcpss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Rsqrtps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Rsqrtps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Rsqrtps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Rsqrtps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Shufps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Shufps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Shufps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Shufps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Sqrtps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Sqrtps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Sqrtps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Sqrtps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Sqrtss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Sqrtss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Sqrtss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Sqrtss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Subps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Subps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Subps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Subps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Subss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Subss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Subss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Subss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Ucomiss : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Ucomiss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Ucomiss();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Ucomiss() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Unpckhps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Unpckhps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Unpckhps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Unpckhps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Unpcklps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Unpcklps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Unpcklps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Unpcklps() = default;
	};

	class Menus_Hacking_Lexicon_Instructions_Vector_Xorps : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Instructions_Vector_Xorps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Instructions_Vector_Xorps();
		virtual ~Menus_Hacking_Lexicon_Instructions_Vector_Xorps() = default;
	};

	class Menus_Hacking_Lexicon_Lexicon : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Lexicon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Lexicon();
		virtual ~Menus_Hacking_Lexicon_Lexicon() = default;
	};

	class Menus_Hacking_Lexicon_Memory : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Memory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Memory();
		virtual ~Menus_Hacking_Lexicon_Memory() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_And_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_And_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_And_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_And_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Bswap_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Bswap_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Bswap_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Bswap_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Not_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Not_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Not_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Not_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Or_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Or_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Or_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Or_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Shl_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Shl_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Shl_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Shl_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Shr_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Shr_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Shr_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Shr_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Title() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Binary_Xor_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Binary_Xor_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Binary_Xor_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Binary_Xor_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAChapter : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAChapter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAChapter();
		virtual ~Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAChapter() = default;
	};

	class Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAnOperation : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAnOperation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAnOperation();
		virtual ~Menus_Hacking_Lexicon_Pages_ChapterSelect_ChooseAnOperation() = default;
	};

	class Menus_Hacking_Lexicon_Pages_ControlFlow_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_ControlFlow_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_ControlFlow_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_ControlFlow_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_ControlFlow_Nop_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_ControlFlow_Nop_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_ControlFlow_Nop_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_ControlFlow_Nop_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_ControlFlow_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_ControlFlow_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_ControlFlow_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_ControlFlow_Title() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Add_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Add_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Add_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Add_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Dec_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Dec_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Dec_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Dec_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Dec_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Dec_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Dec_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Dec_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Div_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Div_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Div_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Div_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt2();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt2() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt3();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Div_IntroPt3() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Inc_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Inc_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Inc_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Inc_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Inc_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Inc_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Inc_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Inc_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Lea_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Lea_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Lea_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Lea_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Mov_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Mov_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Mov_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Mov_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Mul_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Mul_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Mul_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Mul_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Neg_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Neg_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Neg_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Neg_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Neg_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Neg_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Neg_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Neg_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_OffsetHelp12 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_OffsetHelp12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_OffsetHelp12();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_OffsetHelp12() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_OffsetHelp4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_OffsetHelp4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_OffsetHelp4();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_OffsetHelp4() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_OffsetHelp8 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_OffsetHelp8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_OffsetHelp8();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_OffsetHelp8() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Pop_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Pop_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Pop_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Pop_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Pop_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Pop_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Pop_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Pop_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Push_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Push_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Push_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Push_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Push_PointerHelp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Push_PointerHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Push_PointerHelp();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Push_PointerHelp() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Sub_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Sub_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Sub_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Sub_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Data_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Data_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Data_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_Data_Title() = default;
	};

	class Menus_Hacking_Lexicon_Pages_FloatingPoint_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_FloatingPoint_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_FloatingPoint_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_FloatingPoint_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_FloatingPoint_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_FloatingPoint_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_FloatingPoint_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_FloatingPoint_Title() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Intro_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Intro_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Intro_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Intro_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Intro_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Intro_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Intro_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_Intro_Title() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Vector_Intro : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Vector_Intro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Vector_Intro();
		virtual ~Menus_Hacking_Lexicon_Pages_Vector_Intro() = default;
	};

	class Menus_Hacking_Lexicon_Pages_Vector_Title : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Pages_Vector_Title* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Pages_Vector_Title();
		virtual ~Menus_Hacking_Lexicon_Pages_Vector_Title() = default;
	};

	class Menus_Hacking_Lexicon_Registers : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers();
		virtual ~Menus_Hacking_Lexicon_Registers() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEax();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEax() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEbp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEbp();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEbp() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEbx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEbx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEcx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEcx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEdi();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEdi() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEdx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEdx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEip();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEip() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEsi();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEsi() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterEsp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterEsp();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterEsp() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR10 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR10();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR10() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR11 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR11();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR11() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR12 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR12();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR12() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR13 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR13();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR13() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR14 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR14();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR14() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR15 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR15();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR15() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR8 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR8();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR8() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterR9 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterR9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterR9();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterR9() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRax : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRax();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRax() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRbp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRbp();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRbp() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRbx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRbx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRcx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRcx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRdi();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRdi() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRdx : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRdx();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRdx() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRip : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRip();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRip() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRsi();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRsi() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterRsp : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterRsp();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterRsp() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt0();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt0() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt1();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt1() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt2();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt2() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt3();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt3() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt4();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt4() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt5 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt5();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt5() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt6 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt6();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt6() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterSt7 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterSt7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterSt7();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterSt7() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm0();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm0() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm1();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm1() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm2();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm2() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm3();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm3() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm4();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm4() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm5 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm5();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm5() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm6 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm6();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm6() = default;
	};

	class Menus_Hacking_Lexicon_Registers_RegisterXmm7 : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Registers_RegisterXmm7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Registers_RegisterXmm7();
		virtual ~Menus_Hacking_Lexicon_Registers_RegisterXmm7() = default;
	};

	class Menus_Hacking_Lexicon_Reset : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Reset* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Reset();
		virtual ~Menus_Hacking_Lexicon_Reset() = default;
	};

	class Menus_Hacking_Lexicon_Stack : public LocalizedString
	{
	public:
		static Menus_Hacking_Lexicon_Stack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Lexicon_Stack();
		virtual ~Menus_Hacking_Lexicon_Stack() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentBlizzardDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentBlizzardDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentBlizzardDown();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentBlizzardDown() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentModify : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentModify* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentModify();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_CommentModify() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEax();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEbx();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeed();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeed() = default;
	};

	class Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeedDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeedDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeedDown();
		virtual ~Menus_Hacking_Objects_Blizzard_SetBlizzardSpeed_SetBlizzardSpeedDown() = default;
	};

	class Menus_Hacking_Objects_Catapult_ApplyPower_ApplyPower : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Catapult_ApplyPower_ApplyPower* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Catapult_ApplyPower_ApplyPower();
		virtual ~Menus_Hacking_Objects_Catapult_ApplyPower_ApplyPower() = default;
	};

	class Menus_Hacking_Objects_Catapult_ApplyPower_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Catapult_ApplyPower_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Catapult_ApplyPower_RegisterEax();
		virtual ~Menus_Hacking_Objects_Catapult_ApplyPower_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm0();
		virtual ~Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm0() = default;
	};

	class Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm1();
		virtual ~Menus_Hacking_Objects_Catapult_ApplyPower_RegisterXmm1() = default;
	};

	class Menus_Hacking_Objects_Crusher_DetectPlayer_DetectPlayer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Crusher_DetectPlayer_DetectPlayer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Crusher_DetectPlayer_DetectPlayer();
		virtual ~Menus_Hacking_Objects_Crusher_DetectPlayer_DetectPlayer() = default;
	};

	class Menus_Hacking_Objects_Crusher_DetectPlayer_Hint : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Crusher_DetectPlayer_Hint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Crusher_DetectPlayer_Hint();
		virtual ~Menus_Hacking_Objects_Crusher_DetectPlayer_Hint() = default;
	};

	class Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEax();
		virtual ~Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEbx();
		virtual ~Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEcx();
		virtual ~Menus_Hacking_Objects_Crusher_DetectPlayer_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_RegisterSt0();
		virtual ~Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_RegisterSt0() = default;
	};

	class Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_UpdateCountDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_UpdateCountDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_UpdateCountDown();
		virtual ~Menus_Hacking_Objects_ElectricityBeam_UpdateCountDown_UpdateCountDown() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_CommentAddss : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_CommentAddss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_CommentAddss();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_CommentAddss() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_CommentChangeTo : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_CommentChangeTo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_CommentChangeTo();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_CommentChangeTo() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt1();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt1() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt2();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt2() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt3();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_CommentSSEInstructionsPt3() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm2();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm2() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm4();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_RegisterXmm4() = default;
	};

	class Menus_Hacking_Objects_FireBird_UpdateTimer_UpdateTimer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FireBird_UpdateTimer_UpdateTimer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FireBird_UpdateTimer_UpdateTimer();
		virtual ~Menus_Hacking_Objects_FireBird_UpdateTimer_UpdateTimer() = default;
	};

	class Menus_Hacking_Objects_FloatingObjects_GetDensity_GetDensity : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FloatingObjects_GetDensity_GetDensity* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FloatingObjects_GetDensity_GetDensity();
		virtual ~Menus_Hacking_Objects_FloatingObjects_GetDensity_GetDensity() = default;
	};

	class Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterEax();
		virtual ~Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm0();
		virtual ~Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm0() = default;
	};

	class Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm1();
		virtual ~Menus_Hacking_Objects_FloatingObjects_GetDensity_RegisterXmm1() = default;
	};

	class Menus_Hacking_Objects_HeavenHug_GetTravelHeight_GetTravelHeight : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_HeavenHug_GetTravelHeight_GetTravelHeight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_HeavenHug_GetTravelHeight_GetTravelHeight();
		virtual ~Menus_Hacking_Objects_HeavenHug_GetTravelHeight_GetTravelHeight() = default;
	};

	class Menus_Hacking_Objects_HeavenHug_GetTravelHeight_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_HeavenHug_GetTravelHeight_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_HeavenHug_GetTravelHeight_RegisterEax();
		virtual ~Menus_Hacking_Objects_HeavenHug_GetTravelHeight_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_IncrementHealth : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_IncrementHealth* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_IncrementHealth();
		virtual ~Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_IncrementHealth() = default;
	};

	class Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_RegisterEdi();
		virtual ~Menus_Hacking_Objects_IncrementHealthFlask_IncrementHealth_RegisterEdi() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentCompare : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentCompare* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentCompare();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentCompare() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentCritChance : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentCritChance* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentCritChance();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentCritChance() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentCritChanceNegate : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentCritChanceNegate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentCritChanceNegate();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentCritChanceNegate() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentHintCmove : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentHintCmove* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentHintCmove();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentHintCmove() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentHintCmovne : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentHintCmovne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentHintCmovne();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentHintCmovne() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_CommentHintGeneric : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_CommentHintGeneric* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_CommentHintGeneric();
		virtual ~Menus_Hacking_Objects_KillingMachine_CommentHintGeneric() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_RegisterEax();
		virtual ~Menus_Hacking_Objects_KillingMachine_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_RegisterEdi();
		virtual ~Menus_Hacking_Objects_KillingMachine_RegisterEdi() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_RegisterEsi();
		virtual ~Menus_Hacking_Objects_KillingMachine_RegisterEsi() = default;
	};

	class Menus_Hacking_Objects_KillingMachine_TakeDamage : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_KillingMachine_TakeDamage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_KillingMachine_TakeDamage();
		virtual ~Menus_Hacking_Objects_KillingMachine_TakeDamage() = default;
	};

	class Menus_Hacking_Objects_Laser_UpdateCountDown_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Laser_UpdateCountDown_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Laser_UpdateCountDown_RegisterSt0();
		virtual ~Menus_Hacking_Objects_Laser_UpdateCountDown_RegisterSt0() = default;
	};

	class Menus_Hacking_Objects_Laser_UpdateCountDown_UpdateCountDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Laser_UpdateCountDown_UpdateCountDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Laser_UpdateCountDown_UpdateCountDown();
		virtual ~Menus_Hacking_Objects_Laser_UpdateCountDown_UpdateCountDown() = default;
	};

	class Menus_Hacking_Objects_MayanDoor_Combination1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MayanDoor_Combination1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MayanDoor_Combination1();
		virtual ~Menus_Hacking_Objects_MayanDoor_Combination1() = default;
	};

	class Menus_Hacking_Objects_MayanDoor_Combination2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MayanDoor_Combination2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MayanDoor_Combination2();
		virtual ~Menus_Hacking_Objects_MayanDoor_Combination2() = default;
	};

	class Menus_Hacking_Objects_MayanDoor_Combination3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MayanDoor_Combination3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MayanDoor_Combination3();
		virtual ~Menus_Hacking_Objects_MayanDoor_Combination3() = default;
	};

	class Menus_Hacking_Objects_MayanDoor_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MayanDoor_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MayanDoor_RegisterEbx();
		virtual ~Menus_Hacking_Objects_MayanDoor_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEax();
		virtual ~Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEbx();
		virtual ~Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_SetTargetAngle : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_SetTargetAngle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_SetTargetAngle();
		virtual ~Menus_Hacking_Objects_MechanicalFlail_SetTargetAngle_SetTargetAngle() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentAddss : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentAddss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentAddss();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentAddss() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentChangeTo : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentChangeTo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentChangeTo();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentChangeTo() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt1();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt1() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt2();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt2() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt3();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_CommentSSEInstructionsPt3() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm2();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm2() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm4 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm4();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_RegisterXmm4() = default;
	};

	class Menus_Hacking_Objects_MetalSpikes_UpdateTimer_UpdateTimer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MetalSpikes_UpdateTimer_UpdateTimer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MetalSpikes_UpdateTimer_UpdateTimer();
		virtual ~Menus_Hacking_Objects_MetalSpikes_UpdateTimer_UpdateTimer() = default;
	};

	class Menus_Hacking_Objects_MineCart_IsMoving_IsMoving : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MineCart_IsMoving_IsMoving* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MineCart_IsMoving_IsMoving();
		virtual ~Menus_Hacking_Objects_MineCart_IsMoving_IsMoving() = default;
	};

	class Menus_Hacking_Objects_MineCart_IsMoving_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_MineCart_IsMoving_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_MineCart_IsMoving_RegisterEax();
		virtual ~Menus_Hacking_Objects_MineCart_IsMoving_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEax();
		virtual ~Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEbx();
		virtual ~Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_SetTargetAngle : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_SetTargetAngle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_SetTargetAngle();
		virtual ~Menus_Hacking_Objects_PendulumBlade_SetTargetAngle_SetTargetAngle() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEax();
		virtual ~Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEbx();
		virtual ~Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_SetTargetAngle : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_SetTargetAngle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_SetTargetAngle();
		virtual ~Menus_Hacking_Objects_PivotLauncher_SetTargetAngle_SetTargetAngle() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterEax();
		virtual ~Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm0();
		virtual ~Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm0() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm1();
		virtual ~Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_RegisterXmm1() = default;
	};

	class Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_UpdateLaunchTimer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_UpdateLaunchTimer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_UpdateLaunchTimer();
		virtual ~Menus_Hacking_Objects_PivotLauncher_UpdateLaunchTimer_UpdateLaunchTimer() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Addition_Addition : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Addition_Addition* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Addition_Addition();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Addition_Addition() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Addition_CommentAdd : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Addition_CommentAdd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Addition_CommentAdd();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Addition_CommentAdd() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Addition_CommentElaboration : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Addition_CommentElaboration* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Addition_CommentElaboration();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Addition_CommentElaboration() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Addition_CommentTopNumber : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Addition_CommentTopNumber* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Addition_CommentTopNumber();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Addition_CommentTopNumber() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Addition_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Addition_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Addition_RegisterEcx();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Addition_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Division_Division : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Division_Division* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Division_Division();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Division_Division() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Division_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Division_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Division_RegisterEcx();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Division_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentElaboration : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentElaboration* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentElaboration();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentElaboration() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentIMul : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentIMul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentIMul();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentIMul() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentTopNumber : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentTopNumber* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentTopNumber();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Multiply_CommentTopNumber() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Multiply_Multiply : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Multiply_Multiply* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Multiply_Multiply();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Multiply_Multiply() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Multiply_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Multiply_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Multiply_RegisterEcx();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Multiply_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Subtraction_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Subtraction_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Subtraction_RegisterEcx();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Subtraction_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_PuzzleDoor_Subtraction_Subtraction : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_PuzzleDoor_Subtraction_Subtraction* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_PuzzleDoor_Subtraction_Subtraction();
		virtual ~Menus_Hacking_Objects_PuzzleDoor_Subtraction_Subtraction() = default;
	};

	class Menus_Hacking_Objects_RegisterRbpWarning : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_RegisterRbpWarning* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_RegisterRbpWarning();
		virtual ~Menus_Hacking_Objects_RegisterRbpWarning() = default;
	};

	class Menus_Hacking_Objects_RegisterRspWarning : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_RegisterRspWarning* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_RegisterRspWarning();
		virtual ~Menus_Hacking_Objects_RegisterRspWarning() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHint : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHint();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHint() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintInvert : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintInvert* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintInvert();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintInvert() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintLeft : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintLeft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintLeft();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintLeft() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintRight : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintRight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintRight();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_CommentHintRight() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_MoveTowardsPlayer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_MoveTowardsPlayer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_MoveTowardsPlayer();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_MoveTowardsPlayer() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEax();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEbx();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEcx();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEdi();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEdi() = default;
	};

	class Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEsi();
		virtual ~Menus_Hacking_Objects_SpikedLogRailed_MoveTowardsPlayer_RegisterEsi() = default;
	};

	class Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_CommentOptions : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_CommentOptions* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_CommentOptions();
		virtual ~Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_CommentOptions() = default;
	};

	class Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_IncrementAnimationFrame : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_IncrementAnimationFrame* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_IncrementAnimationFrame();
		virtual ~Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_IncrementAnimationFrame() = default;
	};

	class Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_RegisterEcx();
		virtual ~Menus_Hacking_Objects_SpikedLog_IncrementAnimationFrame_RegisterEcx() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_CommentModify : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_CommentModify* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_CommentModify();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_CommentModify() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_CommentWindDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_CommentWindDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_CommentWindDown();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_CommentWindDown() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEax();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEax() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEbx();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeed : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeed();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeed() = default;
	};

	class Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeedDown : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeedDown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeedDown();
		virtual ~Menus_Hacking_Objects_Wind_SetWindSpeed_SetWindSpeedDown() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentDontWorry : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentDontWorry* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentDontWorry();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentDontWorry() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt1();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt1() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt2();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFPUInstructionsPt2() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFadd : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFadd* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFadd();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_CommentFadd() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterEbx();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterEbx() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterSt0();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_RegisterSt0() = default;
	};

	class Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_UpdateTimer : public LocalizedString
	{
	public:
		static Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_UpdateTimer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_UpdateTimer();
		virtual ~Menus_Hacking_Objects_WoodenSpikes_UpdateTimer_UpdateTimer() = default;
	};

	class Menus_Hacking_RadialMenu_RequiresEq : public LocalizedString
	{
	public:
		static Menus_Hacking_RadialMenu_RequiresEq* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RadialMenu_RequiresEq();
		virtual ~Menus_Hacking_RadialMenu_RequiresEq() = default;
	};

	class Menus_Hacking_RegisterEax : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEax();
		virtual ~Menus_Hacking_RegisterEax() = default;
	};

	class Menus_Hacking_RegisterEbp : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEbp();
		virtual ~Menus_Hacking_RegisterEbp() = default;
	};

	class Menus_Hacking_RegisterEbx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEbx();
		virtual ~Menus_Hacking_RegisterEbx() = default;
	};

	class Menus_Hacking_RegisterEcx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEcx();
		virtual ~Menus_Hacking_RegisterEcx() = default;
	};

	class Menus_Hacking_RegisterEdi : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEdi();
		virtual ~Menus_Hacking_RegisterEdi() = default;
	};

	class Menus_Hacking_RegisterEdx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEdx();
		virtual ~Menus_Hacking_RegisterEdx() = default;
	};

	class Menus_Hacking_RegisterEip : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEip();
		virtual ~Menus_Hacking_RegisterEip() = default;
	};

	class Menus_Hacking_RegisterEsi : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEsi();
		virtual ~Menus_Hacking_RegisterEsi() = default;
	};

	class Menus_Hacking_RegisterEsp : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterEsp();
		virtual ~Menus_Hacking_RegisterEsp() = default;
	};

	class Menus_Hacking_RegisterR10 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR10* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR10();
		virtual ~Menus_Hacking_RegisterR10() = default;
	};

	class Menus_Hacking_RegisterR11 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR11* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR11();
		virtual ~Menus_Hacking_RegisterR11() = default;
	};

	class Menus_Hacking_RegisterR12 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR12* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR12();
		virtual ~Menus_Hacking_RegisterR12() = default;
	};

	class Menus_Hacking_RegisterR13 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR13* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR13();
		virtual ~Menus_Hacking_RegisterR13() = default;
	};

	class Menus_Hacking_RegisterR14 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR14* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR14();
		virtual ~Menus_Hacking_RegisterR14() = default;
	};

	class Menus_Hacking_RegisterR15 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR15* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR15();
		virtual ~Menus_Hacking_RegisterR15() = default;
	};

	class Menus_Hacking_RegisterR8 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR8* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR8();
		virtual ~Menus_Hacking_RegisterR8() = default;
	};

	class Menus_Hacking_RegisterR9 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterR9* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterR9();
		virtual ~Menus_Hacking_RegisterR9() = default;
	};

	class Menus_Hacking_RegisterRax : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRax();
		virtual ~Menus_Hacking_RegisterRax() = default;
	};

	class Menus_Hacking_RegisterRbp : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRbp();
		virtual ~Menus_Hacking_RegisterRbp() = default;
	};

	class Menus_Hacking_RegisterRbx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRbx();
		virtual ~Menus_Hacking_RegisterRbx() = default;
	};

	class Menus_Hacking_RegisterRcx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRcx();
		virtual ~Menus_Hacking_RegisterRcx() = default;
	};

	class Menus_Hacking_RegisterRdi : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRdi();
		virtual ~Menus_Hacking_RegisterRdi() = default;
	};

	class Menus_Hacking_RegisterRdx : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRdx();
		virtual ~Menus_Hacking_RegisterRdx() = default;
	};

	class Menus_Hacking_RegisterRip : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRip();
		virtual ~Menus_Hacking_RegisterRip() = default;
	};

	class Menus_Hacking_RegisterRsi : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRsi();
		virtual ~Menus_Hacking_RegisterRsi() = default;
	};

	class Menus_Hacking_RegisterRsp : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterRsp();
		virtual ~Menus_Hacking_RegisterRsp() = default;
	};

	class Menus_Hacking_RegisterSt0 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt0();
		virtual ~Menus_Hacking_RegisterSt0() = default;
	};

	class Menus_Hacking_RegisterSt1 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt1();
		virtual ~Menus_Hacking_RegisterSt1() = default;
	};

	class Menus_Hacking_RegisterSt2 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt2();
		virtual ~Menus_Hacking_RegisterSt2() = default;
	};

	class Menus_Hacking_RegisterSt3 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt3();
		virtual ~Menus_Hacking_RegisterSt3() = default;
	};

	class Menus_Hacking_RegisterSt4 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt4();
		virtual ~Menus_Hacking_RegisterSt4() = default;
	};

	class Menus_Hacking_RegisterSt5 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt5();
		virtual ~Menus_Hacking_RegisterSt5() = default;
	};

	class Menus_Hacking_RegisterSt6 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt6();
		virtual ~Menus_Hacking_RegisterSt6() = default;
	};

	class Menus_Hacking_RegisterSt7 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterSt7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterSt7();
		virtual ~Menus_Hacking_RegisterSt7() = default;
	};

	class Menus_Hacking_RegisterXmm0 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm0* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm0();
		virtual ~Menus_Hacking_RegisterXmm0() = default;
	};

	class Menus_Hacking_RegisterXmm1 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm1();
		virtual ~Menus_Hacking_RegisterXmm1() = default;
	};

	class Menus_Hacking_RegisterXmm2 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm2();
		virtual ~Menus_Hacking_RegisterXmm2() = default;
	};

	class Menus_Hacking_RegisterXmm3 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm3* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm3();
		virtual ~Menus_Hacking_RegisterXmm3() = default;
	};

	class Menus_Hacking_RegisterXmm4 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm4* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm4();
		virtual ~Menus_Hacking_RegisterXmm4() = default;
	};

	class Menus_Hacking_RegisterXmm5 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm5* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm5();
		virtual ~Menus_Hacking_RegisterXmm5() = default;
	};

	class Menus_Hacking_RegisterXmm6 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm6* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm6();
		virtual ~Menus_Hacking_RegisterXmm6() = default;
	};

	class Menus_Hacking_RegisterXmm7 : public LocalizedString
	{
	public:
		static Menus_Hacking_RegisterXmm7* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Hacking_RegisterXmm7();
		virtual ~Menus_Hacking_RegisterXmm7() = default;
	};

	class Menus_Help : public LocalizedString
	{
	public:
		static Menus_Help* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Help();
		virtual ~Menus_Help() = default;
	};

	class Menus_Inventory_All : public LocalizedString
	{
	public:
		static Menus_Inventory_All* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_All();
		virtual ~Menus_Inventory_All() = default;
	};

	class Menus_Inventory_Consumables : public LocalizedString
	{
	public:
		static Menus_Inventory_Consumables* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Consumables();
		virtual ~Menus_Inventory_Consumables() = default;
	};

	class Menus_Inventory_Crafting : public LocalizedString
	{
	public:
		static Menus_Inventory_Crafting* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Crafting();
		virtual ~Menus_Inventory_Crafting() = default;
	};

	class Menus_Inventory_Equipment : public LocalizedString
	{
	public:
		static Menus_Inventory_Equipment* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Equipment();
		virtual ~Menus_Inventory_Equipment() = default;
	};

	class Menus_Inventory_Hexus : public LocalizedString
	{
	public:
		static Menus_Inventory_Hexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Hexus();
		virtual ~Menus_Inventory_Hexus() = default;
	};

	class Menus_Inventory_Inventory : public LocalizedString
	{
	public:
		static Menus_Inventory_Inventory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Inventory();
		virtual ~Menus_Inventory_Inventory() = default;
	};

	class Menus_Inventory_Item : public LocalizedString
	{
	public:
		static Menus_Inventory_Item* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Item();
		virtual ~Menus_Inventory_Item() = default;
	};

	class Menus_Inventory_Misc : public LocalizedString
	{
	public:
		static Menus_Inventory_Misc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Misc();
		virtual ~Menus_Inventory_Misc() = default;
	};

	class Menus_Inventory_Take : public LocalizedString
	{
	public:
		static Menus_Inventory_Take* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Inventory_Take();
		virtual ~Menus_Inventory_Take() = default;
	};

	class Menus_ItemPreview_Armor : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Armor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Armor();
		virtual ~Menus_ItemPreview_Armor() = default;
	};

	class Menus_ItemPreview_Attack : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Attack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Attack();
		virtual ~Menus_ItemPreview_Attack() = default;
	};

	class Menus_ItemPreview_Damage : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Damage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Damage();
		virtual ~Menus_ItemPreview_Damage() = default;
	};

	class Menus_ItemPreview_Equip : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Equip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Equip();
		virtual ~Menus_ItemPreview_Equip() = default;
	};

	class Menus_ItemPreview_Health : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Health* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Health();
		virtual ~Menus_ItemPreview_Health() = default;
	};

	class Menus_ItemPreview_Mana : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Mana* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Mana();
		virtual ~Menus_ItemPreview_Mana() = default;
	};

	class Menus_ItemPreview_Spacebar : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Spacebar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Spacebar();
		virtual ~Menus_ItemPreview_Spacebar() = default;
	};

	class Menus_ItemPreview_Speed : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Speed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Speed();
		virtual ~Menus_ItemPreview_Speed() = default;
	};

	class Menus_ItemPreview_Unequip : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Unequip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Unequip();
		virtual ~Menus_ItemPreview_Unequip() = default;
	};

	class Menus_ItemPreview_Use : public LocalizedString
	{
	public:
		static Menus_ItemPreview_Use* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_ItemPreview_Use();
		virtual ~Menus_ItemPreview_Use() = default;
	};

	class Menus_Leave : public LocalizedString
	{
	public:
		static Menus_Leave* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Leave();
		virtual ~Menus_Leave() = default;
	};

	class Menus_Minigames : public LocalizedString
	{
	public:
		static Menus_Minigames* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Minigames();
		virtual ~Menus_Minigames() = default;
	};

	class Menus_Music_AlexanderIvanov_AlexanderIvanov : public LocalizedString
	{
	public:
		static Menus_Music_AlexanderIvanov_AlexanderIvanov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_AlexanderIvanov_AlexanderIvanov();
		virtual ~Menus_Music_AlexanderIvanov_AlexanderIvanov() = default;
	};

	class Menus_Music_AlexanderIvanov_Heartbeat : public LocalizedString
	{
	public:
		static Menus_Music_AlexanderIvanov_Heartbeat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_AlexanderIvanov_Heartbeat();
		virtual ~Menus_Music_AlexanderIvanov_Heartbeat() = default;
	};

	class Menus_Music_AndreaBaroni_AndreaBaroni : public LocalizedString
	{
	public:
		static Menus_Music_AndreaBaroni_AndreaBaroni* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_AndreaBaroni_AndreaBaroni();
		virtual ~Menus_Music_AndreaBaroni_AndreaBaroni() = default;
	};

	class Menus_Music_AndreaBaroni_BurdenOfTime : public LocalizedString
	{
	public:
		static Menus_Music_AndreaBaroni_BurdenOfTime* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_AndreaBaroni_BurdenOfTime();
		virtual ~Menus_Music_AndreaBaroni_BurdenOfTime() = default;
	};

	class Menus_Music_Artist : public LocalizedString
	{
	public:
		static Menus_Music_Artist* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Artist();
		virtual ~Menus_Music_Artist() = default;
	};

	class Menus_Music_Blacksmith_Blacksmith : public LocalizedString
	{
	public:
		static Menus_Music_Blacksmith_Blacksmith* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Blacksmith_Blacksmith();
		virtual ~Menus_Music_Blacksmith_Blacksmith() = default;
	};

	class Menus_Music_Blacksmith_Medieval : public LocalizedString
	{
	public:
		static Menus_Music_Blacksmith_Medieval* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Blacksmith_Medieval();
		virtual ~Menus_Music_Blacksmith_Medieval() = default;
	};

	class Menus_Music_Blacksmith_Medieval2 : public LocalizedString
	{
	public:
		static Menus_Music_Blacksmith_Medieval2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Blacksmith_Medieval2();
		virtual ~Menus_Music_Blacksmith_Medieval2() = default;
	};

	class Menus_Music_GavinLuke_GavinLuke : public LocalizedString
	{
	public:
		static Menus_Music_GavinLuke_GavinLuke* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_GavinLuke_GavinLuke();
		virtual ~Menus_Music_GavinLuke_GavinLuke() = default;
	};

	class Menus_Music_GavinLuke_Solace : public LocalizedString
	{
	public:
		static Menus_Music_GavinLuke_Solace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_GavinLuke_Solace();
		virtual ~Menus_Music_GavinLuke_Solace() = default;
	};

	class Menus_Music_JakobLindhagen_Forgotten : public LocalizedString
	{
	public:
		static Menus_Music_JakobLindhagen_Forgotten* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_JakobLindhagen_Forgotten();
		virtual ~Menus_Music_JakobLindhagen_Forgotten() = default;
	};

	class Menus_Music_JakobLindhagen_JakobLindhagen : public LocalizedString
	{
	public:
		static Menus_Music_JakobLindhagen_JakobLindhagen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_JakobLindhagen_JakobLindhagen();
		virtual ~Menus_Music_JakobLindhagen_JakobLindhagen() = default;
	};

	class Menus_Music_Lemmonias_Lemmonias : public LocalizedString
	{
	public:
		static Menus_Music_Lemmonias_Lemmonias* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Lemmonias_Lemmonias();
		virtual ~Menus_Music_Lemmonias_Lemmonias() = default;
	};

	class Menus_Music_Lemmonias_WWGTT : public LocalizedString
	{
	public:
		static Menus_Music_Lemmonias_WWGTT* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Lemmonias_WWGTT();
		virtual ~Menus_Music_Lemmonias_WWGTT() = default;
	};

	class Menus_Music_Nosbertus_Nosbertus : public LocalizedString
	{
	public:
		static Menus_Music_Nosbertus_Nosbertus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Nosbertus_Nosbertus();
		virtual ~Menus_Music_Nosbertus_Nosbertus() = default;
	};

	class Menus_Music_Nosbertus_TrickOrTreat : public LocalizedString
	{
	public:
		static Menus_Music_Nosbertus_TrickOrTreat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Nosbertus_TrickOrTreat();
		virtual ~Menus_Music_Nosbertus_TrickOrTreat() = default;
	};

	class Menus_Music_StrayGhost_StrayGhost : public LocalizedString
	{
	public:
		static Menus_Music_StrayGhost_StrayGhost* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_StrayGhost_StrayGhost();
		virtual ~Menus_Music_StrayGhost_StrayGhost() = default;
	};

	class Menus_Music_StrayGhost_TwoStepsTooOftenAside : public LocalizedString
	{
	public:
		static Menus_Music_StrayGhost_TwoStepsTooOftenAside* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_StrayGhost_TwoStepsTooOftenAside();
		virtual ~Menus_Music_StrayGhost_TwoStepsTooOftenAside() = default;
	};

	class Menus_Music_TheoAndPaul_LastMarch : public LocalizedString
	{
	public:
		static Menus_Music_TheoAndPaul_LastMarch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_TheoAndPaul_LastMarch();
		virtual ~Menus_Music_TheoAndPaul_LastMarch() = default;
	};

	class Menus_Music_TheoAndPaul_TheoAndPaul : public LocalizedString
	{
	public:
		static Menus_Music_TheoAndPaul_TheoAndPaul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_TheoAndPaul_TheoAndPaul();
		virtual ~Menus_Music_TheoAndPaul_TheoAndPaul() = default;
	};

	class Menus_Music_Track : public LocalizedString
	{
	public:
		static Menus_Music_Track* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Track();
		virtual ~Menus_Music_Track() = default;
	};

	class Menus_Music_Unknown_Atrium : public LocalizedString
	{
	public:
		static Menus_Music_Unknown_Atrium* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Unknown_Atrium();
		virtual ~Menus_Music_Unknown_Atrium() = default;
	};

	class Menus_Music_Unknown_Unknown : public LocalizedString
	{
	public:
		static Menus_Music_Unknown_Unknown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Music_Unknown_Unknown();
		virtual ~Menus_Music_Unknown_Unknown() = default;
	};

	class Menus_Next : public LocalizedString
	{
	public:
		static Menus_Next* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Next();
		virtual ~Menus_Next() = default;
	};

	class Menus_Notifications_CreatureRescued : public LocalizedString
	{
	public:
		static Menus_Notifications_CreatureRescued* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Notifications_CreatureRescued();
		virtual ~Menus_Notifications_CreatureRescued() = default;
	};

	class Menus_Okay : public LocalizedString
	{
	public:
		static Menus_Okay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Okay();
		virtual ~Menus_Okay() = default;
	};

	class Menus_Options_FullScreen : public LocalizedString
	{
	public:
		static Menus_Options_FullScreen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_FullScreen();
		virtual ~Menus_Options_FullScreen() = default;
	};

	class Menus_Options_GeneralOptions : public LocalizedString
	{
	public:
		static Menus_Options_GeneralOptions* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_GeneralOptions();
		virtual ~Menus_Options_GeneralOptions() = default;
	};

	class Menus_Options_GraphicEffects : public LocalizedString
	{
	public:
		static Menus_Options_GraphicEffects* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_GraphicEffects();
		virtual ~Menus_Options_GraphicEffects() = default;
	};

	class Menus_Options_HighQuality : public LocalizedString
	{
	public:
		static Menus_Options_HighQuality* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_HighQuality();
		virtual ~Menus_Options_HighQuality() = default;
	};

	class Menus_Options_Language : public LocalizedString
	{
	public:
		static Menus_Options_Language* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Language();
		virtual ~Menus_Options_Language() = default;
	};

	class Menus_Options_LowQuality : public LocalizedString
	{
	public:
		static Menus_Options_LowQuality* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_LowQuality();
		virtual ~Menus_Options_LowQuality() = default;
	};

	class Menus_Options_Memes : public LocalizedString
	{
	public:
		static Menus_Options_Memes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Memes();
		virtual ~Menus_Options_Memes() = default;
	};

	class Menus_Options_Options : public LocalizedString
	{
	public:
		static Menus_Options_Options* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Options();
		virtual ~Menus_Options_Options() = default;
	};

	class Menus_Options_Resolution1080x768 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1080x768* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1080x768();
		virtual ~Menus_Options_Resolution1080x768() = default;
	};

	class Menus_Options_Resolution1152x864 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1152x864* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1152x864();
		virtual ~Menus_Options_Resolution1152x864() = default;
	};

	class Menus_Options_Resolution1280x1024 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1280x1024* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1280x1024();
		virtual ~Menus_Options_Resolution1280x1024() = default;
	};

	class Menus_Options_Resolution1280x720 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1280x720* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1280x720();
		virtual ~Menus_Options_Resolution1280x720() = default;
	};

	class Menus_Options_Resolution1280x960 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1280x960* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1280x960();
		virtual ~Menus_Options_Resolution1280x960() = default;
	};

	class Menus_Options_Resolution1440x900 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1440x900* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1440x900();
		virtual ~Menus_Options_Resolution1440x900() = default;
	};

	class Menus_Options_Resolution1600x1024 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1600x1024* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1600x1024();
		virtual ~Menus_Options_Resolution1600x1024() = default;
	};

	class Menus_Options_Resolution1600x900 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1600x900* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1600x900();
		virtual ~Menus_Options_Resolution1600x900() = default;
	};

	class Menus_Options_Resolution1920x1080 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution1920x1080* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution1920x1080();
		virtual ~Menus_Options_Resolution1920x1080() = default;
	};

	class Menus_Options_Resolution2560x1440 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution2560x1440* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution2560x1440();
		virtual ~Menus_Options_Resolution2560x1440() = default;
	};

	class Menus_Options_Resolution3840x2160 : public LocalizedString
	{
	public:
		static Menus_Options_Resolution3840x2160* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_Resolution3840x2160();
		virtual ~Menus_Options_Resolution3840x2160() = default;
	};

	class Menus_Options_VideoOptions : public LocalizedString
	{
	public:
		static Menus_Options_VideoOptions* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Options_VideoOptions();
		virtual ~Menus_Options_VideoOptions() = default;
	};

	class Menus_Party_Party : public LocalizedString
	{
	public:
		static Menus_Party_Party* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Party_Party();
		virtual ~Menus_Party_Party() = default;
	};

	class Menus_Party_Stuck : public LocalizedString
	{
	public:
		static Menus_Party_Stuck* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Party_Stuck();
		virtual ~Menus_Party_Stuck() = default;
	};

	class Menus_Party_StuckConfirm : public LocalizedString
	{
	public:
		static Menus_Party_StuckConfirm* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Party_StuckConfirm();
		virtual ~Menus_Party_StuckConfirm() = default;
	};

	class Menus_Pause_Cards : public LocalizedString
	{
	public:
		static Menus_Pause_Cards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Cards();
		virtual ~Menus_Pause_Cards() = default;
	};

	class Menus_Pause_Collectables : public LocalizedString
	{
	public:
		static Menus_Pause_Collectables* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Collectables();
		virtual ~Menus_Pause_Collectables() = default;
	};

	class Menus_Pause_Inventory : public LocalizedString
	{
	public:
		static Menus_Pause_Inventory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Inventory();
		virtual ~Menus_Pause_Inventory() = default;
	};

	class Menus_Pause_Map : public LocalizedString
	{
	public:
		static Menus_Pause_Map* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Map();
		virtual ~Menus_Pause_Map() = default;
	};

	class Menus_Pause_Options : public LocalizedString
	{
	public:
		static Menus_Pause_Options* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Options();
		virtual ~Menus_Pause_Options() = default;
	};

	class Menus_Pause_Party : public LocalizedString
	{
	public:
		static Menus_Pause_Party* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Party();
		virtual ~Menus_Pause_Party() = default;
	};

	class Menus_Pause_Pause : public LocalizedString
	{
	public:
		static Menus_Pause_Pause* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Pause();
		virtual ~Menus_Pause_Pause() = default;
	};

	class Menus_Pause_QuitToTitle : public LocalizedString
	{
	public:
		static Menus_Pause_QuitToTitle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_QuitToTitle();
		virtual ~Menus_Pause_QuitToTitle() = default;
	};

	class Menus_Pause_Resume : public LocalizedString
	{
	public:
		static Menus_Pause_Resume* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Pause_Resume();
		virtual ~Menus_Pause_Resume() = default;
	};

	class Menus_Reset : public LocalizedString
	{
	public:
		static Menus_Reset* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Reset();
		virtual ~Menus_Reset() = default;
	};

	class Menus_Retry : public LocalizedString
	{
	public:
		static Menus_Retry* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Retry();
		virtual ~Menus_Retry() = default;
	};

	class Menus_Return : public LocalizedString
	{
	public:
		static Menus_Return* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Return();
		virtual ~Menus_Return() = default;
	};

	class Menus_SaveSelect_ConfirmDelete : public LocalizedString
	{
	public:
		static Menus_SaveSelect_ConfirmDelete* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_SaveSelect_ConfirmDelete();
		virtual ~Menus_SaveSelect_ConfirmDelete() = default;
	};

	class Menus_SaveSelect_ContinueGame : public LocalizedString
	{
	public:
		static Menus_SaveSelect_ContinueGame* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_SaveSelect_ContinueGame();
		virtual ~Menus_SaveSelect_ContinueGame() = default;
	};

	class Menus_SaveSelect_NewGame : public LocalizedString
	{
	public:
		static Menus_SaveSelect_NewGame* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_SaveSelect_NewGame();
		virtual ~Menus_SaveSelect_NewGame() = default;
	};

	class Menus_SaveSelect_SelectASave : public LocalizedString
	{
	public:
		static Menus_SaveSelect_SelectASave* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_SaveSelect_SelectASave();
		virtual ~Menus_SaveSelect_SelectASave() = default;
	};

	class Menus_StoryMode : public LocalizedString
	{
	public:
		static Menus_StoryMode* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_StoryMode();
		virtual ~Menus_StoryMode() = default;
	};

	class Menus_Submit : public LocalizedString
	{
	public:
		static Menus_Submit* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Submit();
		virtual ~Menus_Submit() = default;
	};

	class Menus_TODO : public LocalizedString
	{
	public:
		static Menus_TODO* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_TODO();
		virtual ~Menus_TODO() = default;
	};

	class Menus_TranslationEditor_CurrentTranslation : public LocalizedString
	{
	public:
		static Menus_TranslationEditor_CurrentTranslation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_TranslationEditor_CurrentTranslation();
		virtual ~Menus_TranslationEditor_CurrentTranslation() = default;
	};

	class Menus_TranslationEditor_NewTranslation : public LocalizedString
	{
	public:
		static Menus_TranslationEditor_NewTranslation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_TranslationEditor_NewTranslation();
		virtual ~Menus_TranslationEditor_NewTranslation() = default;
	};

	class Menus_TranslationEditor_OriginalTextInEnglish : public LocalizedString
	{
	public:
		static Menus_TranslationEditor_OriginalTextInEnglish* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_TranslationEditor_OriginalTextInEnglish();
		virtual ~Menus_TranslationEditor_OriginalTextInEnglish() = default;
	};

	class Menus_TranslationEditor_TranslationEditor : public LocalizedString
	{
	public:
		static Menus_TranslationEditor_TranslationEditor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_TranslationEditor_TranslationEditor();
		virtual ~Menus_TranslationEditor_TranslationEditor() = default;
	};

	class Menus_Tutorials : public LocalizedString
	{
	public:
		static Menus_Tutorials* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials();
		virtual ~Menus_Tutorials() = default;
	};

	class Menus_Tutorials_AssemblyEditing_AssemblyEditing : public LocalizedString
	{
	public:
		static Menus_Tutorials_AssemblyEditing_AssemblyEditing* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_AssemblyEditing_AssemblyEditing();
		virtual ~Menus_Tutorials_AssemblyEditing_AssemblyEditing() = default;
	};

	class Menus_Tutorials_HexEditing_HexEditing : public LocalizedString
	{
	public:
		static Menus_Tutorials_HexEditing_HexEditing* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_HexEditing_HexEditing();
		virtual ~Menus_Tutorials_HexEditing_HexEditing() = default;
	};

	class Menus_Tutorials_HexEditing_TutorialStringSearch : public LocalizedString
	{
	public:
		static Menus_Tutorials_HexEditing_TutorialStringSearch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_HexEditing_TutorialStringSearch();
		virtual ~Menus_Tutorials_HexEditing_TutorialStringSearch() = default;
	};

	class Menus_Tutorials_Home_Disclaimer : public LocalizedString
	{
	public:
		static Menus_Tutorials_Home_Disclaimer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_Home_Disclaimer();
		virtual ~Menus_Tutorials_Home_Disclaimer() = default;
	};

	class Menus_Tutorials_Home_Home : public LocalizedString
	{
	public:
		static Menus_Tutorials_Home_Home* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_Home_Home();
		virtual ~Menus_Tutorials_Home_Home() = default;
	};

	class Menus_Tutorials_MemoryEditing_MemoryEditing : public LocalizedString
	{
	public:
		static Menus_Tutorials_MemoryEditing_MemoryEditing* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_MemoryEditing_MemoryEditing();
		virtual ~Menus_Tutorials_MemoryEditing_MemoryEditing() = default;
	};

	class Menus_Tutorials_Pointers_Pointers : public LocalizedString
	{
	public:
		static Menus_Tutorials_Pointers_Pointers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Menus_Tutorials_Pointers_Pointers();
		virtual ~Menus_Tutorials_Pointers_Pointers() = default;
	};

	class Platformer_Combat_Attack : public LocalizedString
	{
	public:
		static Platformer_Combat_Attack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attack();
		virtual ~Platformer_Combat_Attack() = default;
	};

	class Platformer_Combat_Attacks_Cleave : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Cleave* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Cleave();
		virtual ~Platformer_Combat_Attacks_Cleave() = default;
	};

	class Platformer_Combat_Attacks_CleaveDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_CleaveDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_CleaveDescription();
		virtual ~Platformer_Combat_Attacks_CleaveDescription() = default;
	};

	class Platformer_Combat_Attacks_Condensation : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Condensation* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Condensation();
		virtual ~Platformer_Combat_Attacks_Condensation() = default;
	};

	class Platformer_Combat_Attacks_CondensationDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_CondensationDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_CondensationDescription();
		virtual ~Platformer_Combat_Attacks_CondensationDescription() = default;
	};

	class Platformer_Combat_Attacks_DropTimeBomb : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_DropTimeBomb* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_DropTimeBomb();
		virtual ~Platformer_Combat_Attacks_DropTimeBomb() = default;
	};

	class Platformer_Combat_Attacks_EnergyBolt : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_EnergyBolt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_EnergyBolt();
		virtual ~Platformer_Combat_Attacks_EnergyBolt() = default;
	};

	class Platformer_Combat_Attacks_EnergyBoltDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_EnergyBoltDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_EnergyBoltDescription();
		virtual ~Platformer_Combat_Attacks_EnergyBoltDescription() = default;
	};

	class Platformer_Combat_Attacks_EnvelopingWinds : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_EnvelopingWinds* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_EnvelopingWinds();
		virtual ~Platformer_Combat_Attacks_EnvelopingWinds() = default;
	};

	class Platformer_Combat_Attacks_EnvelopingWindsDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_EnvelopingWindsDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_EnvelopingWindsDescription();
		virtual ~Platformer_Combat_Attacks_EnvelopingWindsDescription() = default;
	};

	class Platformer_Combat_Attacks_Execute : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Execute* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Execute();
		virtual ~Platformer_Combat_Attacks_Execute() = default;
	};

	class Platformer_Combat_Attacks_ExecuteDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_ExecuteDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_ExecuteDescription();
		virtual ~Platformer_Combat_Attacks_ExecuteDescription() = default;
	};

	class Platformer_Combat_Attacks_LightningStrike : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_LightningStrike* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_LightningStrike();
		virtual ~Platformer_Combat_Attacks_LightningStrike() = default;
	};

	class Platformer_Combat_Attacks_LightningStrikeDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_LightningStrikeDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_LightningStrikeDescription();
		virtual ~Platformer_Combat_Attacks_LightningStrikeDescription() = default;
	};

	class Platformer_Combat_Attacks_MultiShot : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_MultiShot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_MultiShot();
		virtual ~Platformer_Combat_Attacks_MultiShot() = default;
	};

	class Platformer_Combat_Attacks_MultiShotDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_MultiShotDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_MultiShotDescription();
		virtual ~Platformer_Combat_Attacks_MultiShotDescription() = default;
	};

	class Platformer_Combat_Attacks_Pound : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Pound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Pound();
		virtual ~Platformer_Combat_Attacks_Pound() = default;
	};

	class Platformer_Combat_Attacks_PoundDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_PoundDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_PoundDescription();
		virtual ~Platformer_Combat_Attacks_PoundDescription() = default;
	};

	class Platformer_Combat_Attacks_Punch : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Punch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Punch();
		virtual ~Platformer_Combat_Attacks_Punch() = default;
	};

	class Platformer_Combat_Attacks_Resurrect : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Resurrect* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Resurrect();
		virtual ~Platformer_Combat_Attacks_Resurrect() = default;
	};

	class Platformer_Combat_Attacks_ResurrectDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_ResurrectDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_ResurrectDescription();
		virtual ~Platformer_Combat_Attacks_ResurrectDescription() = default;
	};

	class Platformer_Combat_Attacks_Shoot : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Shoot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Shoot();
		virtual ~Platformer_Combat_Attacks_Shoot() = default;
	};

	class Platformer_Combat_Attacks_Slash : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Slash* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Slash();
		virtual ~Platformer_Combat_Attacks_Slash() = default;
	};

	class Platformer_Combat_Attacks_Smash : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_Smash* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_Smash();
		virtual ~Platformer_Combat_Attacks_Smash() = default;
	};

	class Platformer_Combat_Attacks_SmashDescription : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_SmashDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_SmashDescription();
		virtual ~Platformer_Combat_Attacks_SmashDescription() = default;
	};

	class Platformer_Combat_Attacks_ThrowFlamingWeapon : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_ThrowFlamingWeapon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_ThrowFlamingWeapon();
		virtual ~Platformer_Combat_Attacks_ThrowFlamingWeapon() = default;
	};

	class Platformer_Combat_Attacks_ThrowWeapon : public LocalizedString
	{
	public:
		static Platformer_Combat_Attacks_ThrowWeapon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Attacks_ThrowWeapon();
		virtual ~Platformer_Combat_Attacks_ThrowWeapon() = default;
	};

	class Platformer_Combat_Blocked : public LocalizedString
	{
	public:
		static Platformer_Combat_Blocked* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Blocked();
		virtual ~Platformer_Combat_Blocked() = default;
	};

	class Platformer_Combat_Cast : public LocalizedString
	{
	public:
		static Platformer_Combat_Cast* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Cast();
		virtual ~Platformer_Combat_Cast() = default;
	};

	class Platformer_Combat_ChooseATarget : public LocalizedString
	{
	public:
		static Platformer_Combat_ChooseATarget* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_ChooseATarget();
		virtual ~Platformer_Combat_ChooseATarget() = default;
	};

	class Platformer_Combat_Cost : public LocalizedString
	{
	public:
		static Platformer_Combat_Cost* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Cost();
		virtual ~Platformer_Combat_Cost() = default;
	};

	class Platformer_Combat_Defeat : public LocalizedString
	{
	public:
		static Platformer_Combat_Defeat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Defeat();
		virtual ~Platformer_Combat_Defeat() = default;
	};

	class Platformer_Combat_Defend : public LocalizedString
	{
	public:
		static Platformer_Combat_Defend* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Defend();
		virtual ~Platformer_Combat_Defend() = default;
	};

	class Platformer_Combat_ExpGain : public LocalizedString
	{
	public:
		static Platformer_Combat_ExpGain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_ExpGain();
		virtual ~Platformer_Combat_ExpGain() = default;
	};

	class Platformer_Combat_FirstStrike : public LocalizedString
	{
	public:
		static Platformer_Combat_FirstStrike* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_FirstStrike();
		virtual ~Platformer_Combat_FirstStrike() = default;
	};

	class Platformer_Combat_Interrupted : public LocalizedString
	{
	public:
		static Platformer_Combat_Interrupted* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Interrupted();
		virtual ~Platformer_Combat_Interrupted() = default;
	};

	class Platformer_Combat_Items : public LocalizedString
	{
	public:
		static Platformer_Combat_Items* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Items();
		virtual ~Platformer_Combat_Items() = default;
	};

	class Platformer_Combat_LevelUp : public LocalizedString
	{
	public:
		static Platformer_Combat_LevelUp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_LevelUp();
		virtual ~Platformer_Combat_LevelUp() = default;
	};

	class Platformer_Combat_Max : public LocalizedString
	{
	public:
		static Platformer_Combat_Max* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Max();
		virtual ~Platformer_Combat_Max() = default;
	};

	class Platformer_Combat_Min : public LocalizedString
	{
	public:
		static Platformer_Combat_Min* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Min();
		virtual ~Platformer_Combat_Min() = default;
	};

	class Platformer_Combat_Rewards : public LocalizedString
	{
	public:
		static Platformer_Combat_Rewards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Rewards();
		virtual ~Platformer_Combat_Rewards() = default;
	};

	class Platformer_Combat_Skills : public LocalizedString
	{
	public:
		static Platformer_Combat_Skills* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Skills();
		virtual ~Platformer_Combat_Skills() = default;
	};

	class Platformer_Combat_Spells : public LocalizedString
	{
	public:
		static Platformer_Combat_Spells* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Spells();
		virtual ~Platformer_Combat_Spells() = default;
	};

	class Platformer_Combat_Victory : public LocalizedString
	{
	public:
		static Platformer_Combat_Victory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Victory();
		virtual ~Platformer_Combat_Victory() = default;
	};

	class Platformer_Combat_Wait : public LocalizedString
	{
	public:
		static Platformer_Combat_Wait* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Combat_Wait();
		virtual ~Platformer_Combat_Wait() = default;
	};

	class Platformer_Cutscenes_IOU_FoundIOU : public LocalizedString
	{
	public:
		static Platformer_Cutscenes_IOU_FoundIOU* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Cutscenes_IOU_FoundIOU();
		virtual ~Platformer_Cutscenes_IOU_FoundIOU() = default;
	};

	class Platformer_Cutscenes_IOU_IOUDescription : public LocalizedString
	{
	public:
		static Platformer_Cutscenes_IOU_IOUDescription* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Cutscenes_IOU_IOUDescription();
		virtual ~Platformer_Cutscenes_IOU_IOUDescription() = default;
	};

	class Platformer_Cutscenes_PressEscToSkip : public LocalizedString
	{
	public:
		static Platformer_Cutscenes_PressEscToSkip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Cutscenes_PressEscToSkip();
		virtual ~Platformer_Cutscenes_PressEscToSkip() = default;
	};

	class Platformer_Dialogue_BattleCries_DieMortal : public LocalizedString
	{
	public:
		static Platformer_Dialogue_BattleCries_DieMortal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_BattleCries_DieMortal();
		virtual ~Platformer_Dialogue_BattleCries_DieMortal() = default;
	};

	class Platformer_Dialogue_Combat_Help_UseYourAbilities : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Combat_Help_UseYourAbilities* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Combat_Help_UseYourAbilities();
		virtual ~Platformer_Dialogue_Combat_Help_UseYourAbilities() = default;
	};

	class Platformer_Dialogue_Goodbye : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Goodbye* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Goodbye();
		virtual ~Platformer_Dialogue_Goodbye() = default;
	};

	class Platformer_Dialogue_Hexus_ADraw : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_ADraw* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_ADraw();
		virtual ~Platformer_Dialogue_Hexus_ADraw() = default;
	};

	class Platformer_Dialogue_Hexus_ADrawZalgo : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_ADrawZalgo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_ADrawZalgo();
		virtual ~Platformer_Dialogue_Hexus_ADrawZalgo() = default;
	};

	class Platformer_Dialogue_Hexus_BetterLuckNextTime : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_BetterLuckNextTime* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_BetterLuckNextTime();
		virtual ~Platformer_Dialogue_Hexus_BetterLuckNextTime() = default;
	};

	class Platformer_Dialogue_Hexus_GoodGame : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_GoodGame* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_GoodGame();
		virtual ~Platformer_Dialogue_Hexus_GoodGame() = default;
	};

	class Platformer_Dialogue_Hexus_GoodGameZalgo : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_GoodGameZalgo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_GoodGameZalgo();
		virtual ~Platformer_Dialogue_Hexus_GoodGameZalgo() = default;
	};

	class Platformer_Dialogue_Hexus_HowAboutARematch : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_HowAboutARematch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_HowAboutARematch();
		virtual ~Platformer_Dialogue_Hexus_HowAboutARematch() = default;
	};

	class Platformer_Dialogue_Hexus_HowAboutARoundOfHexus : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_HowAboutARoundOfHexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_HowAboutARoundOfHexus();
		virtual ~Platformer_Dialogue_Hexus_HowAboutARoundOfHexus() = default;
	};

	class Platformer_Dialogue_Hexus_PuzzleForYou : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_PuzzleForYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_PuzzleForYou();
		virtual ~Platformer_Dialogue_Hexus_PuzzleForYou() = default;
	};

	class Platformer_Dialogue_Hexus_WeAcceptYourChallenge : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_WeAcceptYourChallenge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_WeAcceptYourChallenge();
		virtual ~Platformer_Dialogue_Hexus_WeAcceptYourChallenge() = default;
	};

	class Platformer_Dialogue_Hexus_WellPlayed : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Hexus_WellPlayed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Hexus_WellPlayed();
		virtual ~Platformer_Dialogue_Hexus_WellPlayed() = default;
	};

	class Platformer_Dialogue_Recruitable_GeckyRecruitable : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Recruitable_GeckyRecruitable* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Recruitable_GeckyRecruitable();
		virtual ~Platformer_Dialogue_Recruitable_GeckyRecruitable() = default;
	};

	class Platformer_Dialogue_Recruitable_GuanoRecruitable : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Recruitable_GuanoRecruitable* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Recruitable_GuanoRecruitable();
		virtual ~Platformer_Dialogue_Recruitable_GuanoRecruitable() = default;
	};

	class Platformer_Dialogue_Recruitable_RecruitableAccept : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Recruitable_RecruitableAccept* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Recruitable_RecruitableAccept();
		virtual ~Platformer_Dialogue_Recruitable_RecruitableAccept() = default;
	};

	class Platformer_Dialogue_Recruitable_RecruitableChoose : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Recruitable_RecruitableChoose* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Recruitable_RecruitableChoose();
		virtual ~Platformer_Dialogue_Recruitable_RecruitableChoose() = default;
	};

	class Platformer_Dialogue_Rewards_DoYouWantThisReward : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Rewards_DoYouWantThisReward* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Rewards_DoYouWantThisReward();
		virtual ~Platformer_Dialogue_Rewards_DoYouWantThisReward() = default;
	};

	class Platformer_Dialogue_Shopkeepers_DoYouWantToBuy : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Shopkeepers_DoYouWantToBuy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Shopkeepers_DoYouWantToBuy();
		virtual ~Platformer_Dialogue_Shopkeepers_DoYouWantToBuy() = default;
	};

	class Platformer_Dialogue_Shopkeepers_HowDoIBuySomething : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Shopkeepers_HowDoIBuySomething* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Shopkeepers_HowDoIBuySomething();
		virtual ~Platformer_Dialogue_Shopkeepers_HowDoIBuySomething() = default;
	};

	class Platformer_Dialogue_Shopkeepers_HowToBuySomething : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Shopkeepers_HowToBuySomething* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Shopkeepers_HowToBuySomething();
		virtual ~Platformer_Dialogue_Shopkeepers_HowToBuySomething() = default;
	};

	class Platformer_Dialogue_Shopkeepers_Minos_LookinToDealDamage : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Shopkeepers_Minos_LookinToDealDamage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Shopkeepers_Minos_LookinToDealDamage();
		virtual ~Platformer_Dialogue_Shopkeepers_Minos_LookinToDealDamage() = default;
	};

	class Platformer_Dialogue_Shopkeepers_Welcome : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Shopkeepers_Welcome* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Shopkeepers_Welcome();
		virtual ~Platformer_Dialogue_Shopkeepers_Welcome() = default;
	};

	class Platformer_Dialogue_Transportation_AreWeThereYet : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_AreWeThereYet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_AreWeThereYet();
		virtual ~Platformer_Dialogue_Transportation_AreWeThereYet() = default;
	};

	class Platformer_Dialogue_Transportation_AreYouReady : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_AreYouReady* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_AreYouReady();
		virtual ~Platformer_Dialogue_Transportation_AreYouReady() = default;
	};

	class Platformer_Dialogue_Transportation_IForgotSomething : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_IForgotSomething* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_IForgotSomething();
		virtual ~Platformer_Dialogue_Transportation_IForgotSomething() = default;
	};

	class Platformer_Dialogue_Transportation_No : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_No* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_No();
		virtual ~Platformer_Dialogue_Transportation_No() = default;
	};

	class Platformer_Dialogue_Transportation_Seriously : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_Seriously* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_Seriously();
		virtual ~Platformer_Dialogue_Transportation_Seriously() = default;
	};

	class Platformer_Dialogue_Transportation_Yes : public LocalizedString
	{
	public:
		static Platformer_Dialogue_Transportation_Yes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Dialogue_Transportation_Yes();
		virtual ~Platformer_Dialogue_Transportation_Yes() = default;
	};

	class Platformer_Ellipses : public LocalizedString
	{
	public:
		static Platformer_Ellipses* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Ellipses();
		virtual ~Platformer_Ellipses() = default;
	};

	class Platformer_Entities_EndianForest_Lycan_LetMeIntoTown : public LocalizedString
	{
	public:
		static Platformer_Entities_EndianForest_Lycan_LetMeIntoTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_EndianForest_Lycan_LetMeIntoTown();
		virtual ~Platformer_Entities_EndianForest_Lycan_LetMeIntoTown() = default;
	};

	class Platformer_Entities_EndianForest_Lycan_NobodyAllowedIntoTown : public LocalizedString
	{
	public:
		static Platformer_Entities_EndianForest_Lycan_NobodyAllowedIntoTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_EndianForest_Lycan_NobodyAllowedIntoTown();
		virtual ~Platformer_Entities_EndianForest_Lycan_NobodyAllowedIntoTown() = default;
	};

	class Platformer_Entities_Names_Critters_Gull : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Critters_Gull* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Critters_Gull();
		virtual ~Platformer_Entities_Names_Critters_Gull() = default;
	};

	class Platformer_Entities_Names_Critters_Horse : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Critters_Horse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Critters_Horse();
		virtual ~Platformer_Entities_Names_Critters_Horse() = default;
	};

	class Platformer_Entities_Names_Critters_Lion : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Critters_Lion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Critters_Lion();
		virtual ~Platformer_Entities_Names_Critters_Lion() = default;
	};

	class Platformer_Entities_Names_Critters_Seagull : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Critters_Seagull* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Critters_Seagull();
		virtual ~Platformer_Entities_Names_Critters_Seagull() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_Cryogen : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_Cryogen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_Cryogen();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_Cryogen() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_FrostFiend : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_FrostFiend* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_FrostFiend();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_FrostFiend() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_GoblinElf : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_GoblinElf* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_GoblinElf();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_GoblinElf() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_IceGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_IceGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_IceGolem();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_IceGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinGrunt : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinGrunt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinGrunt();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinGrunt() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinWarrior();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_PenguinWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_Santa : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_Santa* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_Santa();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_Santa() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_SnowFiend : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_SnowFiend* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_SnowFiend();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_SnowFiend() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_ToySoldierGoblin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_ToySoldierGoblin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_ToySoldierGoblin();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_ToySoldierGoblin() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_Viking : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_Viking* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_Viking();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_Viking() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_WaterElemental : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_WaterElemental* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_WaterElemental();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_WaterElemental() = default;
	};

	class Platformer_Entities_Names_Enemies_BallmerPeaks_Yeti : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_BallmerPeaks_Yeti* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_BallmerPeaks_Yeti();
		virtual ~Platformer_Entities_Names_Enemies_BallmerPeaks_Yeti() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Agnes : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Agnes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Agnes();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Agnes() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Barbarian : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Barbarian* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Barbarian();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Barbarian() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Jack : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Jack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Jack();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Jack() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_ReanimatedFighter : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_ReanimatedFighter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_ReanimatedFighter();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_ReanimatedFighter() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Reaper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Reaper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Reaper();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Reaper() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Scarecrow : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Scarecrow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Scarecrow();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Scarecrow() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_SkeletalBaron : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_SkeletalBaron* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_SkeletalBaron();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_SkeletalBaron() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Thug : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Thug* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Thug();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Thug() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_VampireLord : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_VampireLord* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_VampireLord();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_VampireLord() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Vampiress : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Vampiress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Vampiress();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Vampiress() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Werewolf : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Werewolf* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Werewolf();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Werewolf() = default;
	};

	class Platformer_Entities_Names_Enemies_CastleValgrind_Wraith : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_CastleValgrind_Wraith* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_CastleValgrind_Wraith();
		virtual ~Platformer_Entities_Names_Enemies_CastleValgrind_Wraith() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_Asmodeus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_Asmodeus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_Asmodeus();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_Asmodeus() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonDragon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonDragon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonDragon();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonDragon() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGhost : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGhost* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGhost();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGhost() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGrunt : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGrunt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGrunt();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonGrunt() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonRogue : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonRogue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonRogue();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonRogue() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonShaman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonShaman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonShaman();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonShaman() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonSwordsman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonSwordsman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonSwordsman();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonSwordsman() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_DemonWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_DemonWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_DemonWarrior();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_DemonWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_FireElemental : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_FireElemental* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_FireElemental();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_FireElemental() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_FireTiger : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_FireTiger* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_FireTiger();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_FireTiger() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_Krampus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_Krampus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_Krampus();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_Krampus() = default;
	};

	class Platformer_Entities_Names_Enemies_DaemonsHallow_LavaGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DaemonsHallow_LavaGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DaemonsHallow_LavaGolem();
		virtual ~Platformer_Entities_Names_Enemies_DaemonsHallow_LavaGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_EarthElemental : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_EarthElemental* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_EarthElemental();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_EarthElemental() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_EarthGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_EarthGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_EarthGolem();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_EarthGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_ForestGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_ForestGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_ForestGolem();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_ForestGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_Gorilla : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_Gorilla* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_Gorilla();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_Gorilla() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_Rhinoman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_Rhinoman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_Rhinoman();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_Rhinoman() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_Shaman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_Shaman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_Shaman();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_Shaman() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_SkeletalArcher : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_SkeletalArcher* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_SkeletalArcher();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_SkeletalArcher() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_SkeletalNecromancer : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_SkeletalNecromancer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_SkeletalNecromancer();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_SkeletalNecromancer() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_SkeletalPirate : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_SkeletalPirate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_SkeletalPirate();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_SkeletalPirate() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_SkeletalWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_SkeletalWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_SkeletalWarrior();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_SkeletalWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_DataMines_TikiGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_DataMines_TikiGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_DataMines_TikiGolem();
		virtual ~Platformer_Entities_Names_Enemies_DataMines_TikiGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Centaur : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Centaur* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Centaur();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Centaur() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Cyclops : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Cyclops* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Cyclops();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Cyclops() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_GoblinGruntBoar : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_GoblinGruntBoar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_GoblinGruntBoar();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_GoblinGruntBoar() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_GoblinShaman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_GoblinShaman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_GoblinShaman();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_GoblinShaman() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_GoblinWarriorPig : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_GoblinWarriorPig* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_GoblinWarriorPig();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_GoblinWarriorPig() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Gorgon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Gorgon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Gorgon();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Gorgon() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_KingGrogg : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_KingGrogg* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_KingGrogg();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_KingGrogg() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Ogre : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Ogre* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Ogre();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Ogre() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_OrcBomber : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_OrcBomber* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_OrcBomber();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_OrcBomber() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_OrcGrunt : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_OrcGrunt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_OrcGrunt();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_OrcGrunt() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_OrcSwordsman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_OrcSwordsman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_OrcSwordsman();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_OrcSwordsman() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_OrcWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_OrcWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_OrcWarrior();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_OrcWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Orthrus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Orthrus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Orthrus();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Orthrus() = default;
	};

	class Platformer_Entities_Names_Enemies_EndianForest_Troll : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_EndianForest_Troll* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_EndianForest_Troll();
		virtual ~Platformer_Entities_Names_Enemies_EndianForest_Troll() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_BoneFiend : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_BoneFiend* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_BoneFiend();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_BoneFiend() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_Hunter : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_Hunter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_Hunter();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_Hunter() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_KingZul : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_KingZul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_KingZul();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_KingZul() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_Lazarus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_Lazarus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_Lazarus();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_Lazarus() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_Mystic : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_Mystic* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_Mystic();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_Mystic() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_ReanimatedPig : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_ReanimatedPig* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_ReanimatedPig();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_ReanimatedPig() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalCleaver : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalCleaver* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalCleaver();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalCleaver() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalKnight : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalKnight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalKnight();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalKnight() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalPriestess : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalPriestess* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalPriestess();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_SkeletalPriestess() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_Undead : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_Undead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_Undead();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_Undead() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_Zombie : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_Zombie* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_Zombie();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_Zombie() = default;
	};

	class Platformer_Entities_Names_Enemies_LambdaCrypts_ZombieElric : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_LambdaCrypts_ZombieElric* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_LambdaCrypts_ZombieElric();
		virtual ~Platformer_Entities_Names_Enemies_LambdaCrypts_ZombieElric() = default;
	};

	class Platformer_Entities_Names_Enemies_Misc_TrainingDummy : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_Misc_TrainingDummy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_Misc_TrainingDummy();
		virtual ~Platformer_Entities_Names_Enemies_Misc_TrainingDummy() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisPup : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisPup* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisPup();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisPup() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisWarrior();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_AnubisWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_LionMan : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_LionMan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_LionMan();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_LionMan() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Lioness : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Lioness* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Lioness();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Lioness() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Medusa : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Medusa* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Medusa();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Medusa() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Mermaid : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Mermaid* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Mermaid();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Mermaid() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Minotaur : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Minotaur* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Minotaur();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Minotaur() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_MummyPriest : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_MummyPriest* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_MummyPriest();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_MummyPriest() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_MummyWarrior : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_MummyWarrior* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_MummyWarrior();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_MummyWarrior() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Osiris : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Osiris* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Osiris();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Osiris() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_TigerMan : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_TigerMan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_TigerMan();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_TigerMan() = default;
	};

	class Platformer_Entities_Names_Enemies_UnderflowRuins_Tigress : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_UnderflowRuins_Tigress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_UnderflowRuins_Tigress();
		virtual ~Platformer_Entities_Names_Enemies_UnderflowRuins_Tigress() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Abomination : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Abomination* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Abomination();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Abomination() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Assassin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Assassin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Assassin();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Assassin() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_BoneKnight : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_BoneKnight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_BoneKnight();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_BoneKnight() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_DarkTiger : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_DarkTiger* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_DarkTiger();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_DarkTiger() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_DemonArcher : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_DemonArcher* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_DemonArcher();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_DemonArcher() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_EvilEye : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_EvilEye* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_EvilEye();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_EvilEye() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Exterminator : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Exterminator* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Exterminator();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Exterminator() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Gargoyle : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Gargoyle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Gargoyle();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Gargoyle() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_LightningGolem : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_LightningGolem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_LightningGolem();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_LightningGolem() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Shade : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Shade* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Shade();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Shade() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_VoidDemon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_VoidDemon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_VoidDemon();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_VoidDemon() = default;
	};

	class Platformer_Entities_Names_Enemies_VoidStar_Warlock : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Enemies_VoidStar_Warlock* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Enemies_VoidStar_Warlock();
		virtual ~Platformer_Entities_Names_Enemies_VoidStar_Warlock() = default;
	};

	class Platformer_Entities_Names_Helpers_BallmerPeaks_Snowman : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_BallmerPeaks_Snowman* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_BallmerPeaks_Snowman();
		virtual ~Platformer_Entities_Names_Helpers_BallmerPeaks_Snowman() = default;
	};

	class Platformer_Entities_Names_Helpers_BallmerPeaks_YetiBaby : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_BallmerPeaks_YetiBaby* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_BallmerPeaks_YetiBaby();
		virtual ~Platformer_Entities_Names_Helpers_BallmerPeaks_YetiBaby() = default;
	};

	class Platformer_Entities_Names_Helpers_CastleValgrind_Knight : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_CastleValgrind_Knight* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_CastleValgrind_Knight();
		virtual ~Platformer_Entities_Names_Helpers_CastleValgrind_Knight() = default;
	};

	class Platformer_Entities_Names_Helpers_CastleValgrind_Princess : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_CastleValgrind_Princess* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_CastleValgrind_Princess();
		virtual ~Platformer_Entities_Names_Helpers_CastleValgrind_Princess() = default;
	};

	class Platformer_Entities_Names_Helpers_DaemonsHallow_CritterDemon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_DaemonsHallow_CritterDemon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_DaemonsHallow_CritterDemon();
		virtual ~Platformer_Entities_Names_Helpers_DaemonsHallow_CritterDemon() = default;
	};

	class Platformer_Entities_Names_Helpers_DataMines_Gecky : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_DataMines_Gecky* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_DataMines_Gecky();
		virtual ~Platformer_Entities_Names_Helpers_DataMines_Gecky() = default;
	};

	class Platformer_Entities_Names_Helpers_EndianForest_Guano : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_EndianForest_Guano* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_EndianForest_Guano();
		virtual ~Platformer_Entities_Names_Helpers_EndianForest_Guano() = default;
	};

	class Platformer_Entities_Names_Helpers_EndianForest_Scrappy : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_EndianForest_Scrappy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_EndianForest_Scrappy();
		virtual ~Platformer_Entities_Names_Helpers_EndianForest_Scrappy() = default;
	};

	class Platformer_Entities_Names_Helpers_EndianForest_Turtle : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_EndianForest_Turtle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_EndianForest_Turtle();
		virtual ~Platformer_Entities_Names_Helpers_EndianForest_Turtle() = default;
	};

	class Platformer_Entities_Names_Helpers_LambdaCrypts_Ghost : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_LambdaCrypts_Ghost* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_LambdaCrypts_Ghost();
		virtual ~Platformer_Entities_Names_Helpers_LambdaCrypts_Ghost() = default;
	};

	class Platformer_Entities_Names_Helpers_LambdaCrypts_Grim : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_LambdaCrypts_Grim* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_LambdaCrypts_Grim();
		virtual ~Platformer_Entities_Names_Helpers_LambdaCrypts_Grim() = default;
	};

	class Platformer_Entities_Names_Helpers_UnderflowRuins_Mummy : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_UnderflowRuins_Mummy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_UnderflowRuins_Mummy();
		virtual ~Platformer_Entities_Names_Helpers_UnderflowRuins_Mummy() = default;
	};

	class Platformer_Entities_Names_Helpers_VoidStar_Professor : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_VoidStar_Professor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_VoidStar_Professor();
		virtual ~Platformer_Entities_Names_Helpers_VoidStar_Professor() = default;
	};

	class Platformer_Entities_Names_Helpers_VoidStar_Robot : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Helpers_VoidStar_Robot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Helpers_VoidStar_Robot();
		virtual ~Platformer_Entities_Names_Helpers_VoidStar_Robot() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Aspen : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Aspen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Aspen();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Aspen() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Aster : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Aster* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Aster();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Aster() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Bodom : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Bodom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Bodom();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Bodom() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Cookie : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Cookie* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Cookie();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Cookie() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Cooper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Cooper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Cooper();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Cooper() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Jingles : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Jingles* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Jingles();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Jingles() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Juniper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Juniper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Juniper();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Juniper() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Kringle : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Kringle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Kringle();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Kringle() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Luna : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Luna* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Luna();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Luna() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Nessie : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Nessie* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Nessie();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Nessie() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_PrincessPepper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_PrincessPepper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_PrincessPepper();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_PrincessPepper() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Theldar : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Theldar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Theldar();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Theldar() = default;
	};

	class Platformer_Entities_Names_Npcs_BallmerPeaks_Tinsel : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_BallmerPeaks_Tinsel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_BallmerPeaks_Tinsel();
		virtual ~Platformer_Entities_Names_Npcs_BallmerPeaks_Tinsel() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Gaunt : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Gaunt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Gaunt();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Gaunt() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_KingRedsong : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_KingRedsong* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_KingRedsong();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_KingRedsong() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Leopold : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Leopold* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Leopold();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Leopold() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Leroy : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Leroy* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Leroy();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Leroy() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Mabel : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Mabel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Mabel();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Mabel() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Merlin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Merlin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Merlin();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Merlin() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_PrincessOpal : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_PrincessOpal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_PrincessOpal();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_PrincessOpal() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Raven : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Raven* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Raven();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Raven() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Rogas : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Rogas* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Rogas();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Rogas() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Thurstan : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Thurstan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Thurstan();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Thurstan() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Tyracius : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Tyracius* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Tyracius();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Tyracius() = default;
	};

	class Platformer_Entities_Names_Npcs_CastleValgrind_Zana : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_CastleValgrind_Zana* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_CastleValgrind_Zana();
		virtual ~Platformer_Entities_Names_Npcs_CastleValgrind_Zana() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Ash : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Ash* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Ash();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Ash() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Brine : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Brine* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Brine();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Brine() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Celeste : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Celeste* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Celeste();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Celeste() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Cindra : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Cindra* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Cindra();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Cindra() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Hades : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Hades* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Hades();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Hades() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Igneus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Igneus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Igneus();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Igneus() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Lucifer : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Lucifer* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Lucifer();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Lucifer() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Magnus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Magnus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Magnus();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Magnus() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Mittens : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Mittens* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Mittens();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Mittens() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Pan : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Pan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Pan();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Pan() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Ragnis : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Ragnis* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Ragnis();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Ragnis() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Rusty : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Rusty* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Rusty();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Rusty() = default;
	};

	class Platformer_Entities_Names_Npcs_DaemonsHallow_Scaldor : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DaemonsHallow_Scaldor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DaemonsHallow_Scaldor();
		virtual ~Platformer_Entities_Names_Npcs_DaemonsHallow_Scaldor() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Alder : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Alder* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Alder();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Alder() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Bonnie : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Bonnie* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Bonnie();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Bonnie() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Brock : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Brock* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Brock();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Brock() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Burch : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Burch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Burch();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Burch() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Cypress : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Cypress* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Cypress();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Cypress() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Fraya : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Fraya* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Fraya();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Fraya() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Jasper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Jasper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Jasper();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Jasper() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Mildred : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Mildred* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Mildred();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Mildred() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Olive : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Olive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Olive();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Olive() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_PrincessDawn : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_PrincessDawn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_PrincessDawn();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_PrincessDawn() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Raka : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Raka* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Raka();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Raka() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Sarude : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Sarude* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Sarude();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Sarude() = default;
	};

	class Platformer_Entities_Names_Npcs_DataMines_Shen : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_DataMines_Shen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_DataMines_Shen();
		virtual ~Platformer_Entities_Names_Npcs_DataMines_Shen() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Ara : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Ara* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Ara();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Ara() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Bard : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Bard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Bard();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Bard() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Chiron : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Chiron* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Chiron();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Chiron() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Elriel : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Elriel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Elriel();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Elriel() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Gramps : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Gramps* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Gramps();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Gramps() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Lycan : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Lycan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Lycan();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Lycan() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Marcel : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Marcel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Marcel();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Marcel() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Matu : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Matu* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Matu();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Matu() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Minos : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Minos* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Minos();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Minos() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Polyphemus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Polyphemus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Polyphemus();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Polyphemus() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_QueenLiana : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_QueenLiana* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_QueenLiana();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_QueenLiana() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Robin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Robin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Robin();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Robin() = default;
	};

	class Platformer_Entities_Names_Npcs_EndianForest_Toben : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_EndianForest_Toben* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_EndianForest_Toben();
		virtual ~Platformer_Entities_Names_Npcs_EndianForest_Toben() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Amelia : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Amelia* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Amelia();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Amelia() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Azmus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Azmus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Azmus();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Azmus() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Elric : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Elric* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Elric();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Elric() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Garrick : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Garrick* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Garrick();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Garrick() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Johann : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Johann* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Johann();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Johann() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Necron : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Necron* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Necron();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Necron() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_PrincessNebea : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_PrincessNebea* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_PrincessNebea();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_PrincessNebea() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Roger : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Roger* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Roger();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Roger() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Thion : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Thion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Thion();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Thion() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Ursula : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Ursula* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Ursula();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Ursula() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Vesuvius : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Vesuvius* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Vesuvius();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Vesuvius() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Viper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Viper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Viper();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Viper() = default;
	};

	class Platformer_Entities_Names_Npcs_LambdaCrypts_Zelina : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_LambdaCrypts_Zelina* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_LambdaCrypts_Zelina();
		virtual ~Platformer_Entities_Names_Npcs_LambdaCrypts_Zelina() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Blackbeard : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Blackbeard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Blackbeard();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Blackbeard() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Drak : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Drak* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Drak();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Drak() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Dudly : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Dudly* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Dudly();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Dudly() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Finch : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Finch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Finch();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Finch() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Garin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Garin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Garin();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Garin() = default;
	};

	class Platformer_Entities_Names_Npcs_Transition_Irmik : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_Transition_Irmik* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_Transition_Irmik();
		virtual ~Platformer_Entities_Names_Npcs_Transition_Irmik() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Ajax : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Ajax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Ajax();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Ajax() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Angel : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Angel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Angel();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Angel() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Aphrodite : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Aphrodite* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Aphrodite();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Aphrodite() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Ares : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Ares* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Ares();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Ares() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Athena : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Athena* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Athena();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Athena() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Cleopatra : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Cleopatra* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Cleopatra();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Cleopatra() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Geryon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Geryon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Geryon();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Geryon() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Griffin : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Griffin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Griffin();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Griffin() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Hera : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Hera* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Hera();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Hera() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Horus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Horus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Horus();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Horus() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Poseidon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Poseidon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Poseidon();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Poseidon() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Rupert : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Rupert* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Rupert();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Rupert() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Thor : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Thor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Thor();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Thor() = default;
	};

	class Platformer_Entities_Names_Npcs_UnderflowRuins_Zeus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_UnderflowRuins_Zeus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_UnderflowRuins_Zeus();
		virtual ~Platformer_Entities_Names_Npcs_UnderflowRuins_Zeus() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Appolo : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Appolo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Appolo();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Appolo() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Atreus : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Atreus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Atreus();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Atreus() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Bancroft : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Bancroft* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Bancroft();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Bancroft() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Godiva : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Godiva* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Godiva();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Godiva() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Illia : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Illia* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Illia();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Illia() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Leon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Leon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Leon();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Leon() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Mara : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Mara* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Mara();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Mara() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Piper : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Piper* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Piper();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Piper() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_QueenElise : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_QueenElise* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_QueenElise();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_QueenElise() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Radon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Radon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Radon();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Radon() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Ralston : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Ralston* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Ralston();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Ralston() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Thatcher : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Thatcher* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Thatcher();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Thatcher() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Xenon : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Xenon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Xenon();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Xenon() = default;
	};

	class Platformer_Entities_Names_Npcs_VoidStar_Ysara : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Npcs_VoidStar_Ysara* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Npcs_VoidStar_Ysara();
		virtual ~Platformer_Entities_Names_Npcs_VoidStar_Ysara() = default;
	};

	class Platformer_Entities_Names_Squally : public LocalizedString
	{
	public:
		static Platformer_Entities_Names_Squally* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Entities_Names_Squally();
		virtual ~Platformer_Entities_Names_Squally() = default;
	};

	class Platformer_Help_HelpTotemAttacking : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemAttacking* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemAttacking();
		virtual ~Platformer_Help_HelpTotemAttacking() = default;
	};

	class Platformer_Help_HelpTotemColdWater : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemColdWater* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemColdWater();
		virtual ~Platformer_Help_HelpTotemColdWater() = default;
	};

	class Platformer_Help_HelpTotemEndOfDemo : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemEndOfDemo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemEndOfDemo();
		virtual ~Platformer_Help_HelpTotemEndOfDemo() = default;
	};

	class Platformer_Help_HelpTotemEquipment : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemEquipment* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemEquipment();
		virtual ~Platformer_Help_HelpTotemEquipment() = default;
	};

	class Platformer_Help_HelpTotemGecky : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemGecky* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemGecky();
		virtual ~Platformer_Help_HelpTotemGecky() = default;
	};

	class Platformer_Help_HelpTotemGuano : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemGuano* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemGuano();
		virtual ~Platformer_Help_HelpTotemGuano() = default;
	};

	class Platformer_Help_HelpTotemHacking : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemHacking* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemHacking();
		virtual ~Platformer_Help_HelpTotemHacking() = default;
	};

	class Platformer_Help_HelpTotemHexusCards : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemHexusCards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemHexusCards();
		virtual ~Platformer_Help_HelpTotemHexusCards() = default;
	};

	class Platformer_Help_HelpTotemPotions : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemPotions* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemPotions();
		virtual ~Platformer_Help_HelpTotemPotions() = default;
	};

	class Platformer_Help_HelpTotemSwimHack : public LocalizedString
	{
	public:
		static Platformer_Help_HelpTotemSwimHack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Help_HelpTotemSwimHack();
		virtual ~Platformer_Help_HelpTotemSwimHack() = default;
	};

	class Platformer_MapNames_BallmerPeaks_BallmerPeaks : public LocalizedString
	{
	public:
		static Platformer_MapNames_BallmerPeaks_BallmerPeaks* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_BallmerPeaks_BallmerPeaks();
		virtual ~Platformer_MapNames_BallmerPeaks_BallmerPeaks() = default;
	};

	class Platformer_MapNames_CastleValgrind_CastleValgrind : public LocalizedString
	{
	public:
		static Platformer_MapNames_CastleValgrind_CastleValgrind* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_CastleValgrind_CastleValgrind();
		virtual ~Platformer_MapNames_CastleValgrind_CastleValgrind() = default;
	};

	class Platformer_MapNames_DaemonsHallow_DaemonsHallow : public LocalizedString
	{
	public:
		static Platformer_MapNames_DaemonsHallow_DaemonsHallow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_DaemonsHallow_DaemonsHallow();
		virtual ~Platformer_MapNames_DaemonsHallow_DaemonsHallow() = default;
	};

	class Platformer_MapNames_DataMines_DataMines : public LocalizedString
	{
	public:
		static Platformer_MapNames_DataMines_DataMines* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_DataMines_DataMines();
		virtual ~Platformer_MapNames_DataMines_DataMines() = default;
	};

	class Platformer_MapNames_DataMines_Drammol : public LocalizedString
	{
	public:
		static Platformer_MapNames_DataMines_Drammol* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_DataMines_Drammol();
		virtual ~Platformer_MapNames_DataMines_Drammol() = default;
	};

	class Platformer_MapNames_EndianForest_Elbridge : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_Elbridge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_Elbridge();
		virtual ~Platformer_MapNames_EndianForest_Elbridge() = default;
	};

	class Platformer_MapNames_EndianForest_EndianForest : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_EndianForest* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_EndianForest();
		virtual ~Platformer_MapNames_EndianForest_EndianForest() = default;
	};

	class Platformer_MapNames_EndianForest_FieldsOfStrife : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_FieldsOfStrife* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_FieldsOfStrife();
		virtual ~Platformer_MapNames_EndianForest_FieldsOfStrife() = default;
	};

	class Platformer_MapNames_EndianForest_LimestoneTemple : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_LimestoneTemple* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_LimestoneTemple();
		virtual ~Platformer_MapNames_EndianForest_LimestoneTemple() = default;
	};

	class Platformer_MapNames_EndianForest_MagesGuild : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_MagesGuild* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_MagesGuild();
		virtual ~Platformer_MapNames_EndianForest_MagesGuild() = default;
	};

	class Platformer_MapNames_EndianForest_MagesPrison : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_MagesPrison* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_MagesPrison();
		virtual ~Platformer_MapNames_EndianForest_MagesPrison() = default;
	};

	class Platformer_MapNames_EndianForest_SullenForest : public LocalizedString
	{
	public:
		static Platformer_MapNames_EndianForest_SullenForest* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_EndianForest_SullenForest();
		virtual ~Platformer_MapNames_EndianForest_SullenForest() = default;
	};

	class Platformer_MapNames_LambdaCrypts_LambdaCrypts : public LocalizedString
	{
	public:
		static Platformer_MapNames_LambdaCrypts_LambdaCrypts* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_LambdaCrypts_LambdaCrypts();
		virtual ~Platformer_MapNames_LambdaCrypts_LambdaCrypts() = default;
	};

	class Platformer_MapNames_LambdaCrypts_ValleyOfAsh : public LocalizedString
	{
	public:
		static Platformer_MapNames_LambdaCrypts_ValleyOfAsh* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_LambdaCrypts_ValleyOfAsh();
		virtual ~Platformer_MapNames_LambdaCrypts_ValleyOfAsh() = default;
	};

	class Platformer_MapNames_PerilousSea_PerilousSea : public LocalizedString
	{
	public:
		static Platformer_MapNames_PerilousSea_PerilousSea* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_PerilousSea_PerilousSea();
		virtual ~Platformer_MapNames_PerilousSea_PerilousSea() = default;
	};

	class Platformer_MapNames_UnderflowRuins_Athens : public LocalizedString
	{
	public:
		static Platformer_MapNames_UnderflowRuins_Athens* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_UnderflowRuins_Athens();
		virtual ~Platformer_MapNames_UnderflowRuins_Athens() = default;
	};

	class Platformer_MapNames_UnderflowRuins_LionsCistern : public LocalizedString
	{
	public:
		static Platformer_MapNames_UnderflowRuins_LionsCistern* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_UnderflowRuins_LionsCistern();
		virtual ~Platformer_MapNames_UnderflowRuins_LionsCistern() = default;
	};

	class Platformer_MapNames_UnderflowRuins_PyramidPass : public LocalizedString
	{
	public:
		static Platformer_MapNames_UnderflowRuins_PyramidPass* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_UnderflowRuins_PyramidPass();
		virtual ~Platformer_MapNames_UnderflowRuins_PyramidPass() = default;
	};

	class Platformer_MapNames_UnderflowRuins_SkysReach : public LocalizedString
	{
	public:
		static Platformer_MapNames_UnderflowRuins_SkysReach* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_UnderflowRuins_SkysReach();
		virtual ~Platformer_MapNames_UnderflowRuins_SkysReach() = default;
	};

	class Platformer_MapNames_UnderflowRuins_UnderflowRuins : public LocalizedString
	{
	public:
		static Platformer_MapNames_UnderflowRuins_UnderflowRuins* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_UnderflowRuins_UnderflowRuins();
		virtual ~Platformer_MapNames_UnderflowRuins_UnderflowRuins() = default;
	};

	class Platformer_MapNames_VoidStar_VoidStar : public LocalizedString
	{
	public:
		static Platformer_MapNames_VoidStar_VoidStar* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_MapNames_VoidStar_VoidStar();
		virtual ~Platformer_MapNames_VoidStar_VoidStar() = default;
	};

	class Platformer_Notifications_ItemCrafted : public LocalizedString
	{
	public:
		static Platformer_Notifications_ItemCrafted* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Notifications_ItemCrafted();
		virtual ~Platformer_Notifications_ItemCrafted() = default;
	};

	class Platformer_Notifications_ItemFound : public LocalizedString
	{
	public:
		static Platformer_Notifications_ItemFound* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Notifications_ItemFound();
		virtual ~Platformer_Notifications_ItemFound() = default;
	};

	class Platformer_Notifications_ItemWon : public LocalizedString
	{
	public:
		static Platformer_Notifications_ItemWon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Notifications_ItemWon();
		virtual ~Platformer_Notifications_ItemWon() = default;
	};

	class Platformer_Notifications_MaterialsRecovered : public LocalizedString
	{
	public:
		static Platformer_Notifications_MaterialsRecovered* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Notifications_MaterialsRecovered();
		virtual ~Platformer_Notifications_MaterialsRecovered() = default;
	};

	class Platformer_Notifications_Party_HelperJoinedParty : public LocalizedString
	{
	public:
		static Platformer_Notifications_Party_HelperJoinedParty* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Notifications_Party_HelperJoinedParty();
		virtual ~Platformer_Notifications_Party_HelperJoinedParty() = default;
	};

	class Platformer_Objectives_EndianForest_EF_Ambush : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_Ambush* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_Ambush();
		virtual ~Platformer_Objectives_EndianForest_EF_Ambush() = default;
	};

	class Platformer_Objectives_EndianForest_EF_BeatGauntlet : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_BeatGauntlet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_BeatGauntlet();
		virtual ~Platformer_Objectives_EndianForest_EF_BeatGauntlet() = default;
	};

	class Platformer_Objectives_EndianForest_EF_BeatSarude : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_BeatSarude* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_BeatSarude();
		virtual ~Platformer_Objectives_EndianForest_EF_BeatSarude() = default;
	};

	class Platformer_Objectives_EndianForest_EF_ConfrontCommander : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_ConfrontCommander* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_ConfrontCommander();
		virtual ~Platformer_Objectives_EndianForest_EF_ConfrontCommander() = default;
	};

	class Platformer_Objectives_EndianForest_EF_ExploreMagesGuild : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_ExploreMagesGuild* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_ExploreMagesGuild();
		virtual ~Platformer_Objectives_EndianForest_EF_ExploreMagesGuild() = default;
	};

	class Platformer_Objectives_EndianForest_EF_ExplorePrison : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_ExplorePrison* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_ExplorePrison();
		virtual ~Platformer_Objectives_EndianForest_EF_ExplorePrison() = default;
	};

	class Platformer_Objectives_EndianForest_EF_FindAShip : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_FindAShip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_FindAShip();
		virtual ~Platformer_Objectives_EndianForest_EF_FindAShip() = default;
	};

	class Platformer_Objectives_EndianForest_EF_FindElriel : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_FindElriel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_FindElriel();
		virtual ~Platformer_Objectives_EndianForest_EF_FindElriel() = default;
	};

	class Platformer_Objectives_EndianForest_EF_HeadNorth : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_HeadNorth* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_HeadNorth();
		virtual ~Platformer_Objectives_EndianForest_EF_HeadNorth() = default;
	};

	class Platformer_Objectives_EndianForest_EF_HeadToTown : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_HeadToTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_HeadToTown();
		virtual ~Platformer_Objectives_EndianForest_EF_HeadToTown() = default;
	};

	class Platformer_Objectives_EndianForest_EF_RepairRam : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_RepairRam* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_RepairRam();
		virtual ~Platformer_Objectives_EndianForest_EF_RepairRam() = default;
	};

	class Platformer_Objectives_EndianForest_EF_RescueGuano : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_RescueGuano* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_RescueGuano();
		virtual ~Platformer_Objectives_EndianForest_EF_RescueGuano() = default;
	};

	class Platformer_Objectives_EndianForest_EF_ReturnToQueen : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_ReturnToQueen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_ReturnToQueen();
		virtual ~Platformer_Objectives_EndianForest_EF_ReturnToQueen() = default;
	};

	class Platformer_Objectives_EndianForest_EF_ReturnToQueenAgain : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_ReturnToQueenAgain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_ReturnToQueenAgain();
		virtual ~Platformer_Objectives_EndianForest_EF_ReturnToQueenAgain() = default;
	};

	class Platformer_Objectives_EndianForest_EF_SailForUR : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_SailForUR* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_SailForUR();
		virtual ~Platformer_Objectives_EndianForest_EF_SailForUR() = default;
	};

	class Platformer_Objectives_EndianForest_EF_SearchTemple : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_SearchTemple* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_SearchTemple();
		virtual ~Platformer_Objectives_EndianForest_EF_SearchTemple() = default;
	};

	class Platformer_Objectives_EndianForest_EF_SneakIntoTown : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_SneakIntoTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_SneakIntoTown();
		virtual ~Platformer_Objectives_EndianForest_EF_SneakIntoTown() = default;
	};

	class Platformer_Objectives_EndianForest_EF_TalkToSarude : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_TalkToSarude* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_TalkToSarude();
		virtual ~Platformer_Objectives_EndianForest_EF_TalkToSarude() = default;
	};

	class Platformer_Objectives_EndianForest_EF_VisitMarcel : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_VisitMarcel* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_VisitMarcel();
		virtual ~Platformer_Objectives_EndianForest_EF_VisitMarcel() = default;
	};

	class Platformer_Objectives_EndianForest_EF_VisitQueen : public LocalizedString
	{
	public:
		static Platformer_Objectives_EndianForest_EF_VisitQueen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_EndianForest_EF_VisitQueen();
		virtual ~Platformer_Objectives_EndianForest_EF_VisitQueen() = default;
	};

	class Platformer_Objectives_Objective : public LocalizedString
	{
	public:
		static Platformer_Objectives_Objective* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_Objective();
		virtual ~Platformer_Objectives_Objective() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_CrossBridge : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_CrossBridge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_CrossBridge();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_CrossBridge() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_CureTownspeople : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_CureTownspeople* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_CureTownspeople();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_CureTownspeople() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_EnterTheMines : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_EnterTheMines* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_EnterTheMines();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_EnterTheMines() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_ExploreFountain : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_ExploreFountain* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_ExploreFountain();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_ExploreFountain() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_FindMineEntrance : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_FindMineEntrance* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_FindMineEntrance();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_FindMineEntrance() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_HeadToTown : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_HeadToTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_HeadToTown();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_HeadToTown() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_LightTorches : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_LightTorches* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_LightTorches();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_LightTorches() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_LookForSurvivors : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_LookForSurvivors* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_LookForSurvivors();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_LookForSurvivors() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_ReturnToHera : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_ReturnToHera* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_ReturnToHera();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_ReturnToHera() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_SearchCistern : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_SearchCistern* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_SearchCistern();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_SearchCistern() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_SlayMedusa : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_SlayMedusa* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_SlayMedusa();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_SlayMedusa() = default;
	};

	class Platformer_Objectives_UnderflowRuins_UR_SolvePuzzle : public LocalizedString
	{
	public:
		static Platformer_Objectives_UnderflowRuins_UR_SolvePuzzle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objectives_UnderflowRuins_UR_SolvePuzzle();
		virtual ~Platformer_Objectives_UnderflowRuins_UR_SolvePuzzle() = default;
	};

	class Platformer_Objects_Doors_Broken : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_Broken* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_Broken();
		virtual ~Platformer_Objects_Doors_Broken() = default;
	};

	class Platformer_Objects_Doors_Closed : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_Closed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_Closed();
		virtual ~Platformer_Objects_Doors_Closed() = default;
	};

	class Platformer_Objects_Doors_ClosedBusinessHours : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_ClosedBusinessHours* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_ClosedBusinessHours();
		virtual ~Platformer_Objects_Doors_ClosedBusinessHours() = default;
	};

	class Platformer_Objects_Doors_Locked : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_Locked* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_Locked();
		virtual ~Platformer_Objects_Doors_Locked() = default;
	};

	class Platformer_Objects_Doors_Repairable : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_Repairable* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_Repairable();
		virtual ~Platformer_Objects_Doors_Repairable() = default;
	};

	class Platformer_Objects_Doors_Unlock : public LocalizedString
	{
	public:
		static Platformer_Objects_Doors_Unlock* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Doors_Unlock();
		virtual ~Platformer_Objects_Doors_Unlock() = default;
	};

	class Platformer_Objects_GlassCase_Clue : public LocalizedString
	{
	public:
		static Platformer_Objects_GlassCase_Clue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_GlassCase_Clue();
		virtual ~Platformer_Objects_GlassCase_Clue() = default;
	};

	class Platformer_Objects_GlassCase_GlassCaseGrouped : public LocalizedString
	{
	public:
		static Platformer_Objects_GlassCase_GlassCaseGrouped* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_GlassCase_GlassCaseGrouped();
		virtual ~Platformer_Objects_GlassCase_GlassCaseGrouped() = default;
	};

	class Platformer_Objects_GlassCase_GlassCaseLocked : public LocalizedString
	{
	public:
		static Platformer_Objects_GlassCase_GlassCaseLocked* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_GlassCase_GlassCaseLocked();
		virtual ~Platformer_Objects_GlassCase_GlassCaseLocked() = default;
	};

	class Platformer_Objects_GlassCase_InspectItem : public LocalizedString
	{
	public:
		static Platformer_Objects_GlassCase_InspectItem* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_GlassCase_InspectItem();
		virtual ~Platformer_Objects_GlassCase_InspectItem() = default;
	};

	class Platformer_Objects_Interaction_Enter : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_Enter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_Enter();
		virtual ~Platformer_Objects_Interaction_Enter() = default;
	};

	class Platformer_Objects_Interaction_Open : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_Open* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_Open();
		virtual ~Platformer_Objects_Interaction_Open() = default;
	};

	class Platformer_Objects_Interaction_OperationPop : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_OperationPop* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_OperationPop();
		virtual ~Platformer_Objects_Interaction_OperationPop() = default;
	};

	class Platformer_Objects_Interaction_OperationPush : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_OperationPush* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_OperationPush();
		virtual ~Platformer_Objects_Interaction_OperationPush() = default;
	};

	class Platformer_Objects_Interaction_Pull : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_Pull* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_Pull();
		virtual ~Platformer_Objects_Interaction_Pull() = default;
	};

	class Platformer_Objects_Interaction_Push : public LocalizedString
	{
	public:
		static Platformer_Objects_Interaction_Push* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Interaction_Push();
		virtual ~Platformer_Objects_Interaction_Push() = default;
	};

	class Platformer_Objects_Warps_Back : public LocalizedString
	{
	public:
		static Platformer_Objects_Warps_Back* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Warps_Back();
		virtual ~Platformer_Objects_Warps_Back() = default;
	};

	class Platformer_Objects_Warps_Front : public LocalizedString
	{
	public:
		static Platformer_Objects_Warps_Front* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Warps_Front();
		virtual ~Platformer_Objects_Warps_Front() = default;
	};

	class Platformer_Objects_Warps_Middle : public LocalizedString
	{
	public:
		static Platformer_Objects_Warps_Middle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Warps_Middle();
		virtual ~Platformer_Objects_Warps_Middle() = default;
	};

	class Platformer_Objects_Warps_WhereTo : public LocalizedString
	{
	public:
		static Platformer_Objects_Warps_WhereTo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Objects_Warps_WhereTo();
		virtual ~Platformer_Objects_Warps_WhereTo() = default;
	};

	class Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToCastle : public LocalizedString
	{
	public:
		static Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToCastle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToCastle();
		virtual ~Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToCastle() = default;
	};

	class Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToPeaks : public LocalizedString
	{
	public:
		static Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToPeaks* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToPeaks();
		virtual ~Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_CanWeBoardToPeaks() = default;
	};

	class Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_Yep : public LocalizedString
	{
	public:
		static Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_Yep* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_Yep();
		virtual ~Platformer_Quests_BallmerPeaks_SkyShipToPeaks_Irmik_Yep() = default;
	};

	class Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToCastle : public LocalizedString
	{
	public:
		static Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToCastle* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToCastle();
		virtual ~Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToCastle() = default;
	};

	class Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToTown : public LocalizedString
	{
	public:
		static Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToTown();
		virtual ~Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_CanWeBoardToTown() = default;
	};

	class Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_Yep : public LocalizedString
	{
	public:
		static Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_Yep* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_Yep();
		virtual ~Platformer_Quests_CastleValgrind_SkyShipToCastle_Finch_Yep() = default;
	};

	class Platformer_Quests_DataMines_DefeatRhinoman_A_YouShallNotPass : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_DefeatRhinoman_A_YouShallNotPass* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_DefeatRhinoman_A_YouShallNotPass();
		virtual ~Platformer_Quests_DataMines_DefeatRhinoman_A_YouShallNotPass() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_A_CanWeBoard : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_A_CanWeBoard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_A_CanWeBoard();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_A_CanWeBoard() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_B_Nope : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_B_Nope* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_B_Nope();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_B_Nope() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_C_WhereCanWeGetOne : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_C_WhereCanWeGetOne* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_C_WhereCanWeGetOne();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_C_WhereCanWeGetOne() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_D_SoldOut : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_D_SoldOut* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_D_SoldOut();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_D_SoldOut() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_E_AnythingWeCanDo : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_E_AnythingWeCanDo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_E_AnythingWeCanDo();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_E_AnythingWeCanDo() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_F_AskQueen : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_F_AskQueen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_F_AskQueen();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_F_AskQueen() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Bancroft_Q_Yep : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Bancroft_Q_Yep* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Bancroft_Q_Yep();
		virtual ~Platformer_Quests_DataMines_RestorePower_Bancroft_Q_Yep() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Gecky_A_Hi : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Gecky_A_Hi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Gecky_A_Hi();
		virtual ~Platformer_Quests_DataMines_RestorePower_Gecky_A_Hi() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Krampus_A_Intruders : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Krampus_A_Intruders* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Krampus_A_Intruders();
		virtual ~Platformer_Quests_DataMines_RestorePower_Krampus_A_Intruders() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_A_OliveIntro : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_A_OliveIntro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_A_OliveIntro();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_A_OliveIntro() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_B_Power : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_B_Power* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_B_Power();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_B_Power() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_C_SeenAnythingUnusual : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_C_SeenAnythingUnusual* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_C_SeenAnythingUnusual();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_C_SeenAnythingUnusual() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_D_UnusualList : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_D_UnusualList* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_D_UnusualList();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_D_UnusualList() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_E_NothingExplainingOutage : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_E_NothingExplainingOutage* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_E_NothingExplainingOutage();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_E_NothingExplainingOutage() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_F_Request : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_F_Request* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_F_Request();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_F_Request() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_G_SureForAPrice : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_G_SureForAPrice* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_G_SureForAPrice();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_G_SureForAPrice() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_H_WeWillDoIt : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_H_WeWillDoIt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_H_WeWillDoIt();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_H_WeWillDoIt() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_I_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_I_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_I_ThankYou();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_I_ThankYou() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_Olive_J_WasntJoking : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_Olive_J_WasntJoking* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_Olive_J_WasntJoking();
		virtual ~Platformer_Quests_DataMines_RestorePower_Olive_J_WasntJoking() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_A_LetterForYou : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_A_LetterForYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_A_LetterForYou();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_A_LetterForYou() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_B_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_B_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_B_ThankYou();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_B_ThankYou() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_C_CouldNotFindCause : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_C_CouldNotFindCause* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_C_CouldNotFindCause();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_C_CouldNotFindCause() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_D_WithoutPower : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_D_WithoutPower* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_D_WithoutPower();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_D_WithoutPower() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_E_InvestigateCause : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_E_InvestigateCause* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_E_InvestigateCause();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_E_InvestigateCause() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_F_Nope : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_F_Nope* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_F_Nope();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_F_Nope() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_G_OfCourse : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_G_OfCourse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_G_OfCourse();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_G_OfCourse() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_H_TakeGecky : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_H_TakeGecky* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_H_TakeGecky();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_H_TakeGecky() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_I_Hi : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_I_Hi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_I_Hi();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_I_Hi() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_J_WelcomeToTheCrew : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_J_WelcomeToTheCrew* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_J_WelcomeToTheCrew();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_J_WelcomeToTheCrew() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_K_ImOut : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_K_ImOut* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_K_ImOut();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_K_ImOut() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_Q_PowerRestoredThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_Q_PowerRestoredThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_Q_PowerRestoredThankYou();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_Q_PowerRestoredThankYou() = default;
	};

	class Platformer_Quests_DataMines_RestorePower_PrincessDawn_R_TakeTrainTicket : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_RestorePower_PrincessDawn_R_TakeTrainTicket* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_RestorePower_PrincessDawn_R_TakeTrainTicket();
		virtual ~Platformer_Quests_DataMines_RestorePower_PrincessDawn_R_TakeTrainTicket() = default;
	};

	class Platformer_Quests_DataMines_StackPuzzle_A_DoYouKnowHowToOpenDoor : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_StackPuzzle_A_DoYouKnowHowToOpenDoor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_StackPuzzle_A_DoYouKnowHowToOpenDoor();
		virtual ~Platformer_Quests_DataMines_StackPuzzle_A_DoYouKnowHowToOpenDoor() = default;
	};

	class Platformer_Quests_DataMines_StackPuzzle_B_NumbersMatch : public LocalizedString
	{
	public:
		static Platformer_Quests_DataMines_StackPuzzle_B_NumbersMatch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_DataMines_StackPuzzle_B_NumbersMatch();
		virtual ~Platformer_Quests_DataMines_StackPuzzle_B_NumbersMatch() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Bard_A_WhereAreDocks : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Bard_A_WhereAreDocks* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Bard_A_WhereAreDocks();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Bard_A_WhereAreDocks() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Bard_B_RightButTalkToQueen : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Bard_B_RightButTalkToQueen* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Bard_B_RightButTalkToQueen();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Bard_B_RightButTalkToQueen() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Chiron_A_CantLeaveTown : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Chiron_A_CantLeaveTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Chiron_A_CantLeaveTown();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Chiron_A_CantLeaveTown() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Chiron_G_TempleDoor : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Chiron_G_TempleDoor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Chiron_G_TempleDoor();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Chiron_G_TempleDoor() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Elriel_A_GratefulYouAreHere : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Elriel_A_GratefulYouAreHere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Elriel_A_GratefulYouAreHere();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Elriel_A_GratefulYouAreHere() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Elriel_B_AliveAndWell : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Elriel_B_AliveAndWell* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Elriel_B_AliveAndWell();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Elriel_B_AliveAndWell() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Elriel_C_MeetMeInTown : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Elriel_C_MeetMeInTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Elriel_C_MeetMeInTown();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Elriel_C_MeetMeInTown() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Grogg_A_WhoDares : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Grogg_A_WhoDares* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Grogg_A_WhoDares();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Grogg_A_WhoDares() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Grogg_B_RescueElf : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Grogg_B_RescueElf* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Grogg_B_RescueElf();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Grogg_B_RescueElf() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Grogg_C_SpreadForcesThin : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Grogg_C_SpreadForcesThin* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Grogg_C_SpreadForcesThin();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Grogg_C_SpreadForcesThin() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Grogg_D_MarchesTowards : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Grogg_D_MarchesTowards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Grogg_D_MarchesTowards();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Grogg_D_MarchesTowards() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_A_HowDoWeGetToTheRuins : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_A_HowDoWeGetToTheRuins* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_A_HowDoWeGetToTheRuins();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_A_HowDoWeGetToTheRuins() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_B_HowDareYou : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_B_HowDareYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_B_HowDareYou();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_B_HowDareYou() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_C_NobodyLeavesUntil : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_C_NobodyLeavesUntil* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_C_NobodyLeavesUntil();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_C_NobodyLeavesUntil() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_D_WhatIfWeHelp : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_D_WhatIfWeHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_D_WhatIfWeHelp();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_D_WhatIfWeHelp() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_E_YouWouldHelp : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_E_YouWouldHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_E_YouWouldHelp();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_E_YouWouldHelp() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_F_OrderMyGuards : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_F_OrderMyGuards* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_F_OrderMyGuards();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_F_OrderMyGuards() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_L_WhereIsOurReward : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_L_WhereIsOurReward* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_L_WhereIsOurReward();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_L_WhereIsOurReward() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_M_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_M_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_M_ThankYou();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_M_ThankYou() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_N_However : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_N_However* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_N_However();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_N_However() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_O_WhatDoYouMean : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_O_WhatDoYouMean* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_O_WhatDoYouMean();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_O_WhatDoYouMean() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_P_MoreOrcs : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_P_MoreOrcs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_P_MoreOrcs();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_P_MoreOrcs() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_Q_NoChoice : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_Q_NoChoice* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_Q_NoChoice();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_Q_NoChoice() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_R_Ships : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_R_Ships* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_R_Ships();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_R_Ships() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lianna_S_VisitShops : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lianna_S_VisitShops* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lianna_S_VisitShops();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lianna_S_VisitShops() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Lycan_A_Tired : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Lycan_A_Tired* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Lycan_A_Tired();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Lycan_A_Tired() = default;
	};

	class Platformer_Quests_EndianForest_FindElriel_Scrappy_A_LetsFindABoat : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_FindElriel_Scrappy_A_LetsFindABoat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_FindElriel_Scrappy_A_LetsFindABoat();
		virtual ~Platformer_Quests_EndianForest_FindElriel_Scrappy_A_LetsFindABoat() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_ComeToLearn : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_ComeToLearn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_ComeToLearn();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_ComeToLearn() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Marcel_A_WelcomeToMagesGuild : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Marcel_A_WelcomeToMagesGuild* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Marcel_A_WelcomeToMagesGuild();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Marcel_A_WelcomeToMagesGuild() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Marcel_B_BroadcastedAndSent : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Marcel_B_BroadcastedAndSent* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Marcel_B_BroadcastedAndSent();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Marcel_B_BroadcastedAndSent() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Marcel_C_SpeakToSarude : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Marcel_C_SpeakToSarude* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Marcel_C_SpeakToSarude();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Marcel_C_SpeakToSarude() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_A_CallForHelp : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_A_CallForHelp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_A_CallForHelp();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_A_CallForHelp() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_B_DoYouRemember : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_B_DoYouRemember* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_B_DoYouRemember();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_B_DoYouRemember() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_C_IThoughtNot : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_C_IThoughtNot* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_C_IThoughtNot();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_C_IThoughtNot() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_D_YouNeedTraining : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_D_YouNeedTraining* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_D_YouNeedTraining();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_D_YouNeedTraining() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_E_ToBeginYouMustLearnHexus : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_E_ToBeginYouMustLearnHexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_E_ToBeginYouMustLearnHexus();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_E_ToBeginYouMustLearnHexus() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_F_HexusIsAGameWhere : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_F_HexusIsAGameWhere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_F_HexusIsAGameWhere();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_F_HexusIsAGameWhere() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_G_WhoeverMastersHexus : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_G_WhoeverMastersHexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_G_WhoeverMastersHexus();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_G_WhoeverMastersHexus() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_H_PortalToGauntlet : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_H_PortalToGauntlet* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_H_PortalToGauntlet();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_H_PortalToGauntlet() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_K_IChallengeYou : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_K_IChallengeYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_K_IChallengeYou();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_K_IChallengeYou() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_ValliantEffort : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_ValliantEffort* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_ValliantEffort();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_ValliantEffort() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_WellDone : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_WellDone* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_WellDone();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_M_WellDone() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_N_WeBroughtYouHere : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_N_WeBroughtYouHere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_N_WeBroughtYouHere();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_N_WeBroughtYouHere() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_O_CompleteYourTraining : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_O_CompleteYourTraining* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_O_CompleteYourTraining();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_O_CompleteYourTraining() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_P_LearnMoreOfTheseMonsters : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_P_LearnMoreOfTheseMonsters* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_P_LearnMoreOfTheseMonsters();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_P_LearnMoreOfTheseMonsters() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_ReadyToStart : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_ReadyToStart* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_ReadyToStart();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_ReadyToStart() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_Sarude_WeAcceptYourChallengeSkip : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_Sarude_WeAcceptYourChallengeSkip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_Sarude_WeAcceptYourChallengeSkip();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_Sarude_WeAcceptYourChallengeSkip() = default;
	};

	class Platformer_Quests_EndianForest_HexusGauntlet_TeachMeHexus : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_HexusGauntlet_TeachMeHexus* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_HexusGauntlet_TeachMeHexus();
		virtual ~Platformer_Quests_EndianForest_HexusGauntlet_TeachMeHexus() = default;
	};

	class Platformer_Quests_EndianForest_Intro_A_YoureAlive : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_A_YoureAlive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_A_YoureAlive();
		virtual ~Platformer_Quests_EndianForest_Intro_A_YoureAlive() = default;
	};

	class Platformer_Quests_EndianForest_Intro_B_DistressBeacon : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_B_DistressBeacon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_B_DistressBeacon();
		virtual ~Platformer_Quests_EndianForest_Intro_B_DistressBeacon() = default;
	};

	class Platformer_Quests_EndianForest_Intro_C_GetYouPatched : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_C_GetYouPatched* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_C_GetYouPatched();
		virtual ~Platformer_Quests_EndianForest_Intro_C_GetYouPatched() = default;
	};

	class Platformer_Quests_EndianForest_Intro_D_TrapAhead : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_D_TrapAhead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_D_TrapAhead();
		virtual ~Platformer_Quests_EndianForest_Intro_D_TrapAhead() = default;
	};

	class Platformer_Quests_EndianForest_Intro_E_TrainingDummySpotted : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_E_TrainingDummySpotted* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_E_TrainingDummySpotted();
		virtual ~Platformer_Quests_EndianForest_Intro_E_TrainingDummySpotted() = default;
	};

	class Platformer_Quests_EndianForest_Intro_F_OrcGruntSpotted : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_F_OrcGruntSpotted* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_F_OrcGruntSpotted();
		virtual ~Platformer_Quests_EndianForest_Intro_F_OrcGruntSpotted() = default;
	};

	class Platformer_Quests_EndianForest_Intro_G_HackerModeCombat : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Intro_G_HackerModeCombat* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Intro_G_HackerModeCombat();
		virtual ~Platformer_Quests_EndianForest_Intro_G_HackerModeCombat() = default;
	};

	class Platformer_Quests_EndianForest_Misc_Jasper_A_Clever : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Misc_Jasper_A_Clever* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Misc_Jasper_A_Clever();
		virtual ~Platformer_Quests_EndianForest_Misc_Jasper_A_Clever() = default;
	};

	class Platformer_Quests_EndianForest_Misc_Jasper_B_TakeThis : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_Misc_Jasper_B_TakeThis* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_Misc_Jasper_B_TakeThis();
		virtual ~Platformer_Quests_EndianForest_Misc_Jasper_B_TakeThis() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_A_GetMeOutOfHere : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_A_GetMeOutOfHere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_A_GetMeOutOfHere();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_A_GetMeOutOfHere() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_Alder_A_TrollInTheDungeon : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_Alder_A_TrollInTheDungeon* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_Alder_A_TrollInTheDungeon();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_Alder_A_TrollInTheDungeon() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_B_WhatGotMeInHere : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_B_WhatGotMeInHere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_B_WhatGotMeInHere();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_B_WhatGotMeInHere() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_C_WeShouldHelpHim : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_C_WeShouldHelpHim* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_C_WeShouldHelpHim();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_C_WeShouldHelpHim() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_D_DoorTech : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_D_DoorTech* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_D_DoorTech();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_D_DoorTech() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_E_Freedom : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_E_Freedom* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_E_Freedom();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_E_Freedom() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_F_NotMuchOfAFighter : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_F_NotMuchOfAFighter* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_F_NotMuchOfAFighter();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_F_NotMuchOfAFighter() = default;
	};

	class Platformer_Quests_EndianForest_RescueGuano_G_HelpYouFindThings : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_RescueGuano_G_HelpYouFindThings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_RescueGuano_G_HelpYouFindThings();
		virtual ~Platformer_Quests_EndianForest_RescueGuano_G_HelpYouFindThings() = default;
	};

	class Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Aye : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Aye* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Aye();
		virtual ~Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Aye() = default;
	};

	class Platformer_Quests_EndianForest_SailForRuins_BlackBeard_CanWeBoard : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SailForRuins_BlackBeard_CanWeBoard* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SailForRuins_BlackBeard_CanWeBoard();
		virtual ~Platformer_Quests_EndianForest_SailForRuins_BlackBeard_CanWeBoard() = default;
	};

	class Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Nay : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Nay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Nay();
		virtual ~Platformer_Quests_EndianForest_SailForRuins_BlackBeard_Nay() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Ara_A_Illusion : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Ara_A_Illusion* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Ara_A_Illusion();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Ara_A_Illusion() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Ara_B_Hide : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Ara_B_Hide* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Ara_B_Hide();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Ara_B_Hide() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Ara_C_TakeItems : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Ara_C_TakeItems* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Ara_C_TakeItems();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Ara_C_TakeItems() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Ara_H_HelpUs : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Ara_H_HelpUs* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Ara_H_HelpUs();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Ara_H_HelpUs() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Ara_I_Nope : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Ara_I_Nope* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Ara_I_Nope();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Ara_I_Nope() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Gorgon_A_MeSmash : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Gorgon_A_MeSmash* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Gorgon_A_MeSmash();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Gorgon_A_MeSmash() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Return_A_CanWeLeave : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Return_A_CanWeLeave* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Return_A_CanWeLeave();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Return_A_CanWeLeave() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Return_B_Yes : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Return_B_Yes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Return_B_Yes();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Return_B_Yes() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Sarude_A_YouMadeIt : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Sarude_A_YouMadeIt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Sarude_A_YouMadeIt();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Sarude_A_YouMadeIt() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Sarude_B_WhatsThePlan : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Sarude_B_WhatsThePlan* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Sarude_B_WhatsThePlan();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Sarude_B_WhatsThePlan() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Sarude_C_Infiltrate : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Sarude_C_Infiltrate* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Sarude_C_Infiltrate();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Sarude_C_Infiltrate() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Sarude_D_GoNow : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Sarude_D_GoNow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Sarude_D_GoNow();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Sarude_D_GoNow() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Sarude_H_ThanksBruh : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Sarude_H_ThanksBruh* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Sarude_H_ThanksBruh();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Sarude_H_ThanksBruh() = default;
	};

	class Platformer_Quests_EndianForest_SaveTown_Scrappy_A_RepairRam : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SaveTown_Scrappy_A_RepairRam* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SaveTown_Scrappy_A_RepairRam();
		virtual ~Platformer_Quests_EndianForest_SaveTown_Scrappy_A_RepairRam() = default;
	};

	class Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTemple : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTemple* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTemple();
		virtual ~Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTemple() = default;
	};

	class Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTown : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTown();
		virtual ~Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_CanWeBoardToTown() = default;
	};

	class Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Nope : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Nope* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Nope();
		virtual ~Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Nope() = default;
	};

	class Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Yep : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Yep* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Yep();
		virtual ~Platformer_Quests_EndianForest_SkyShipToTemple_Dudly_Yep() = default;
	};

	class Platformer_Quests_EndianForest_WaterSpellbook_Merlin_A_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WaterSpellbook_Merlin_A_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WaterSpellbook_Merlin_A_ThankYou();
		virtual ~Platformer_Quests_EndianForest_WaterSpellbook_Merlin_A_ThankYou() = default;
	};

	class Platformer_Quests_EndianForest_WaterSpellbook_Merlin_B_GraspPowers : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WaterSpellbook_Merlin_B_GraspPowers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WaterSpellbook_Merlin_B_GraspPowers();
		virtual ~Platformer_Quests_EndianForest_WaterSpellbook_Merlin_B_GraspPowers() = default;
	};

	class Platformer_Quests_EndianForest_WaterSpellbook_Merlin_C_GrantBlessing : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WaterSpellbook_Merlin_C_GrantBlessing* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WaterSpellbook_Merlin_C_GrantBlessing();
		virtual ~Platformer_Quests_EndianForest_WaterSpellbook_Merlin_C_GrantBlessing() = default;
	};

	class Platformer_Quests_EndianForest_WaterSpellbook_Merlin_D_UseYourPowers : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WaterSpellbook_Merlin_D_UseYourPowers* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WaterSpellbook_Merlin_D_UseYourPowers();
		virtual ~Platformer_Quests_EndianForest_WaterSpellbook_Merlin_D_UseYourPowers() = default;
	};

	class Platformer_Quests_EndianForest_WindSpellbook_Marcel_A_GoodUse : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WindSpellbook_Marcel_A_GoodUse* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WindSpellbook_Marcel_A_GoodUse();
		virtual ~Platformer_Quests_EndianForest_WindSpellbook_Marcel_A_GoodUse() = default;
	};

	class Platformer_Quests_EndianForest_WindSpellbook_Marcel_B_Latent : public LocalizedString
	{
	public:
		static Platformer_Quests_EndianForest_WindSpellbook_Marcel_B_Latent* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_EndianForest_WindSpellbook_Marcel_B_Latent();
		virtual ~Platformer_Quests_EndianForest_WindSpellbook_Marcel_B_Latent() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_A_NewChallengersApproach : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_A_NewChallengersApproach* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_A_NewChallengersApproach();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_A_NewChallengersApproach() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_B_WellDone : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_B_WellDone* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_B_WellDone();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_B_WellDone() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_C_TakeThis : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_C_TakeThis* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_C_TakeThis();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_C_TakeThis() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_D_BestOfLuck : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_D_BestOfLuck* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_D_BestOfLuck();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_ColosseumGauntlet_Cleopatra_D_BestOfLuck() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt1 : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt1* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt1();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt1() = default;
	};

	class Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt2 : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt2* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt2();
		virtual ~Platformer_Quests_UnderflowRuins_CleansePyramid_Horus_A_TorchHintPt2() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_A_HeyCoolStatue : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_A_HeyCoolStatue* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_A_HeyCoolStatue();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_A_HeyCoolStatue() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_B_MoreStatues : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_B_MoreStatues* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_B_MoreStatues();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_B_MoreStatues() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_C_DarkMagic : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_C_DarkMagic* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_C_DarkMagic();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_C_DarkMagic() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_D_SearchForClues : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_D_SearchForClues* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_D_SearchForClues();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_D_SearchForClues() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_M_RaiseBridge : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_M_RaiseBridge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_M_RaiseBridge();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_M_RaiseBridge() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_Y_RemainingTownspeople : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_Y_RemainingTownspeople* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_Y_RemainingTownspeople();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_Y_RemainingTownspeople() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Ajax_Z_SpeakToHera : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Ajax_Z_SpeakToHera* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Ajax_Z_SpeakToHera();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Ajax_Z_SpeakToHera() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_A_Greetings : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_A_Greetings* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_A_Greetings();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_A_Greetings() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_B_WhichWayToTown : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_B_WhichWayToTown* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_B_WhichWayToTown();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_B_WhichWayToTown() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_C_HeadThroughBack : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_C_HeadThroughBack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_C_HeadThroughBack();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_C_HeadThroughBack() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_D_OneFavor : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_D_OneFavor* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_D_OneFavor();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_D_OneFavor() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_E_Charity : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_E_Charity* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_E_Charity();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_E_Charity() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_F_WhatDoYouAsk : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_F_WhatDoYouAsk* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_F_WhatDoYouAsk();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_F_WhatDoYouAsk() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_G_TalkToAlch : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_G_TalkToAlch* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_G_TalkToAlch();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_G_TalkToAlch() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_H_WillDo : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_H_WillDo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_H_WillDo();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_H_WillDo() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_T_Shipments : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_T_Shipments* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_T_Shipments();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Aphrodite_T_Shipments() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Guano_A_OhNoImDead : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Guano_A_OhNoImDead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Guano_A_OhNoImDead();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Guano_A_OhNoImDead() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Guano_B_WithAllTheStealing : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Guano_B_WithAllTheStealing* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Guano_B_WithAllTheStealing();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Guano_B_WithAllTheStealing() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Guano_C_YoureNotDead : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Guano_C_YoureNotDead* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Guano_C_YoureNotDead();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Guano_C_YoureNotDead() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Guano_D_OhOkay : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Guano_D_OhOkay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Guano_D_OhOkay();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Guano_D_OhOkay() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_A_StayAway : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_A_StayAway* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_A_StayAway();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_A_StayAway() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_B_Oh : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_B_Oh* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_B_Oh();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_B_Oh() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_C_WhatHappened : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_C_WhatHappened* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_C_WhatHappened();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_C_WhatHappened() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_D_Medusa : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_D_Medusa* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_D_Medusa();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_D_Medusa() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_E_Slay : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_E_Slay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_E_Slay();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_E_Slay() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_F_NotAChance : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_F_NotAChance* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_F_NotAChance();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_F_NotAChance() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_G_Yes : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_G_Yes* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_G_Yes();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_G_Yes() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_H_BetterOffInJail : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_H_BetterOffInJail* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_H_BetterOffInJail();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_H_BetterOffInJail() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_I_TakeThisKey : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_I_TakeThisKey* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_I_TakeThisKey();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_I_TakeThisKey() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_Q_PleaseCure : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_Q_PleaseCure* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_Q_PleaseCure();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_Q_PleaseCure() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_R_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_R_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_R_ThankYou();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_R_ThankYou() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_S_WhereAreYouHeaded : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_S_WhereAreYouHeaded* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_S_WhereAreYouHeaded();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_S_WhereAreYouHeaded() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_T_SkyCrack : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_T_SkyCrack* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_T_SkyCrack();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_T_SkyCrack() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_U_OnlyWay : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_U_OnlyWay* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_U_OnlyWay();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_U_OnlyWay() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_V_Bridge : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_V_Bridge* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_V_Bridge();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_V_Bridge() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Hera_W_BeforeYouGo : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Hera_W_BeforeYouGo* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Hera_W_BeforeYouGo();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Hera_W_BeforeYouGo() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Mesuda_A_Hiss : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Mesuda_A_Hiss* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Mesuda_A_Hiss();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Mesuda_A_Hiss() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Poseidon_A_DoYouKnowAnything : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Poseidon_A_DoYouKnowAnything* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Poseidon_A_DoYouKnowAnything();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Poseidon_A_DoYouKnowAnything() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Poseidon_B_FindMirror : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Poseidon_B_FindMirror* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Poseidon_B_FindMirror();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Poseidon_B_FindMirror() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Rupert_A_DoYouKnowAnything : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Rupert_A_DoYouKnowAnything* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Rupert_A_DoYouKnowAnything();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Rupert_A_DoYouKnowAnything() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Rupert_B_NothingIsReal : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Rupert_B_NothingIsReal* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Rupert_B_NothingIsReal();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Rupert_B_NothingIsReal() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Rupert_C_NotVeryUseful : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Rupert_C_NotVeryUseful* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Rupert_C_NotVeryUseful();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Rupert_C_NotVeryUseful() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Scrappy_A_Cursed : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Scrappy_A_Cursed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Scrappy_A_Cursed();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Scrappy_A_Cursed() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Scrappy_B_Immune : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Scrappy_B_Immune* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Scrappy_B_Immune();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Scrappy_B_Immune() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Scrappy_C_CarryOn : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Scrappy_C_CarryOn* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Scrappy_C_CarryOn();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Scrappy_C_CarryOn() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Scrappy_T_StillCursed : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Scrappy_T_StillCursed* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Scrappy_T_StillCursed();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Scrappy_T_StillCursed() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_BehindOnShipments : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_BehindOnShipments* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_BehindOnShipments();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_BehindOnShipments() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Heart : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Heart* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Heart();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Heart() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Hooray : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Hooray* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Hooray();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_Hooray() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImAlive : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImAlive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImAlive();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImAlive() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImFree : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImFree* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImFree();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ImFree() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_InYourDebt : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_InYourDebt* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_InYourDebt();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_InYourDebt() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ThankYou : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ThankYou* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ThankYou();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Townspeople_ThankYou() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Zeus_A_WhoGoesThere : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Zeus_A_WhoGoesThere* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Zeus_A_WhoGoesThere();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Zeus_A_WhoGoesThere() = default;
	};

	class Platformer_Quests_UnderflowRuins_CureTown_Zeus_B_SayNoMore : public LocalizedString
	{
	public:
		static Platformer_Quests_UnderflowRuins_CureTown_Zeus_B_SayNoMore* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_UnderflowRuins_CureTown_Zeus_B_SayNoMore();
		virtual ~Platformer_Quests_UnderflowRuins_CureTown_Zeus_B_SayNoMore() = default;
	};

	class Platformer_Quests_WarpGates_WarpGateDiscovered : public LocalizedString
	{
	public:
		static Platformer_Quests_WarpGates_WarpGateDiscovered* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_WarpGates_WarpGateDiscovered();
		virtual ~Platformer_Quests_WarpGates_WarpGateDiscovered() = default;
	};

	class Platformer_Quests_WarpGates_WarpGateIntro : public LocalizedString
	{
	public:
		static Platformer_Quests_WarpGates_WarpGateIntro* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_WarpGates_WarpGateIntro();
		virtual ~Platformer_Quests_WarpGates_WarpGateIntro() = default;
	};

	class Platformer_Quests_WarpGates_WhatIsThisPlace : public LocalizedString
	{
	public:
		static Platformer_Quests_WarpGates_WhatIsThisPlace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Quests_WarpGates_WhatIsThisPlace();
		virtual ~Platformer_Quests_WarpGates_WhatIsThisPlace() = default;
	};

	class Platformer_Spellbooks_SpellbookAcquired : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookAcquired* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookAcquired();
		virtual ~Platformer_Spellbooks_SpellbookAcquired() = default;
	};

	class Platformer_Spellbooks_SpellbookFrost : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookFrost* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookFrost();
		virtual ~Platformer_Spellbooks_SpellbookFrost() = default;
	};

	class Platformer_Spellbooks_SpellbookHoly : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookHoly* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookHoly();
		virtual ~Platformer_Spellbooks_SpellbookHoly() = default;
	};

	class Platformer_Spellbooks_SpellbookLightning : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookLightning* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookLightning();
		virtual ~Platformer_Spellbooks_SpellbookLightning() = default;
	};

	class Platformer_Spellbooks_SpellbookNature : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookNature* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookNature();
		virtual ~Platformer_Spellbooks_SpellbookNature() = default;
	};

	class Platformer_Spellbooks_SpellbookOfFire : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookOfFire* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookOfFire();
		virtual ~Platformer_Spellbooks_SpellbookOfFire() = default;
	};

	class Platformer_Spellbooks_SpellbookOfWater : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookOfWater* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookOfWater();
		virtual ~Platformer_Spellbooks_SpellbookOfWater() = default;
	};

	class Platformer_Spellbooks_SpellbookOfWind : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookOfWind* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookOfWind();
		virtual ~Platformer_Spellbooks_SpellbookOfWind() = default;
	};

	class Platformer_Spellbooks_SpellbookShadow : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookShadow* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookShadow();
		virtual ~Platformer_Spellbooks_SpellbookShadow() = default;
	};

	class Platformer_Spellbooks_SpellbookUndeath : public LocalizedString
	{
	public:
		static Platformer_Spellbooks_SpellbookUndeath* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		Platformer_Spellbooks_SpellbookUndeath();
		virtual ~Platformer_Spellbooks_SpellbookUndeath() = default;
	};

	class PointerTrace_Assembly_Add : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Add* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Add();
		virtual ~PointerTrace_Assembly_Add() = default;
	};

	class PointerTrace_Assembly_Dec : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Dec* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Dec();
		virtual ~PointerTrace_Assembly_Dec() = default;
	};

	class PointerTrace_Assembly_Div : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Div* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Div();
		virtual ~PointerTrace_Assembly_Div() = default;
	};

	class PointerTrace_Assembly_Inc : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Inc* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Inc();
		virtual ~PointerTrace_Assembly_Inc() = default;
	};

	class PointerTrace_Assembly_Jmp : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Jmp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Jmp();
		virtual ~PointerTrace_Assembly_Jmp() = default;
	};

	class PointerTrace_Assembly_Mov : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Mov* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Mov();
		virtual ~PointerTrace_Assembly_Mov() = default;
	};

	class PointerTrace_Assembly_Mul : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Mul* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Mul();
		virtual ~PointerTrace_Assembly_Mul() = default;
	};

	class PointerTrace_Assembly_OffsetNegative : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_OffsetNegative* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_OffsetNegative();
		virtual ~PointerTrace_Assembly_OffsetNegative() = default;
	};

	class PointerTrace_Assembly_OffsetPositive : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_OffsetPositive* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_OffsetPositive();
		virtual ~PointerTrace_Assembly_OffsetPositive() = default;
	};

	class PointerTrace_Assembly_Ptr : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Ptr* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Ptr();
		virtual ~PointerTrace_Assembly_Ptr() = default;
	};

	class PointerTrace_Assembly_RegisterEax : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEax();
		virtual ~PointerTrace_Assembly_RegisterEax() = default;
	};

	class PointerTrace_Assembly_RegisterEbp : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEbp();
		virtual ~PointerTrace_Assembly_RegisterEbp() = default;
	};

	class PointerTrace_Assembly_RegisterEbx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEbx();
		virtual ~PointerTrace_Assembly_RegisterEbx() = default;
	};

	class PointerTrace_Assembly_RegisterEcx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEcx();
		virtual ~PointerTrace_Assembly_RegisterEcx() = default;
	};

	class PointerTrace_Assembly_RegisterEdi : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEdi();
		virtual ~PointerTrace_Assembly_RegisterEdi() = default;
	};

	class PointerTrace_Assembly_RegisterEdx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEdx();
		virtual ~PointerTrace_Assembly_RegisterEdx() = default;
	};

	class PointerTrace_Assembly_RegisterEip : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEip();
		virtual ~PointerTrace_Assembly_RegisterEip() = default;
	};

	class PointerTrace_Assembly_RegisterEsi : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEsi();
		virtual ~PointerTrace_Assembly_RegisterEsi() = default;
	};

	class PointerTrace_Assembly_RegisterEsp : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterEsp();
		virtual ~PointerTrace_Assembly_RegisterEsp() = default;
	};

	class PointerTrace_Assembly_RegisterRax : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRax();
		virtual ~PointerTrace_Assembly_RegisterRax() = default;
	};

	class PointerTrace_Assembly_RegisterRbp : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRbp();
		virtual ~PointerTrace_Assembly_RegisterRbp() = default;
	};

	class PointerTrace_Assembly_RegisterRbx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRbx();
		virtual ~PointerTrace_Assembly_RegisterRbx() = default;
	};

	class PointerTrace_Assembly_RegisterRcx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRcx();
		virtual ~PointerTrace_Assembly_RegisterRcx() = default;
	};

	class PointerTrace_Assembly_RegisterRdi : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRdi();
		virtual ~PointerTrace_Assembly_RegisterRdi() = default;
	};

	class PointerTrace_Assembly_RegisterRdx : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRdx();
		virtual ~PointerTrace_Assembly_RegisterRdx() = default;
	};

	class PointerTrace_Assembly_RegisterRip : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRip();
		virtual ~PointerTrace_Assembly_RegisterRip() = default;
	};

	class PointerTrace_Assembly_RegisterRsi : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRsi();
		virtual ~PointerTrace_Assembly_RegisterRsi() = default;
	};

	class PointerTrace_Assembly_RegisterRsp : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_RegisterRsp();
		virtual ~PointerTrace_Assembly_RegisterRsp() = default;
	};

	class PointerTrace_Assembly_Sub : public LocalizedString
	{
	public:
		static PointerTrace_Assembly_Sub* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Assembly_Sub();
		virtual ~PointerTrace_Assembly_Sub() = default;
	};

	class PointerTrace_Hud_RegisterEax : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEax();
		virtual ~PointerTrace_Hud_RegisterEax() = default;
	};

	class PointerTrace_Hud_RegisterEbp : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEbp();
		virtual ~PointerTrace_Hud_RegisterEbp() = default;
	};

	class PointerTrace_Hud_RegisterEbx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEbx();
		virtual ~PointerTrace_Hud_RegisterEbx() = default;
	};

	class PointerTrace_Hud_RegisterEcx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEcx();
		virtual ~PointerTrace_Hud_RegisterEcx() = default;
	};

	class PointerTrace_Hud_RegisterEdi : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEdi();
		virtual ~PointerTrace_Hud_RegisterEdi() = default;
	};

	class PointerTrace_Hud_RegisterEdx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEdx();
		virtual ~PointerTrace_Hud_RegisterEdx() = default;
	};

	class PointerTrace_Hud_RegisterEip : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEip();
		virtual ~PointerTrace_Hud_RegisterEip() = default;
	};

	class PointerTrace_Hud_RegisterEsi : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEsi();
		virtual ~PointerTrace_Hud_RegisterEsi() = default;
	};

	class PointerTrace_Hud_RegisterEsp : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterEsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterEsp();
		virtual ~PointerTrace_Hud_RegisterEsp() = default;
	};

	class PointerTrace_Hud_RegisterRax : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRax* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRax();
		virtual ~PointerTrace_Hud_RegisterRax() = default;
	};

	class PointerTrace_Hud_RegisterRbp : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRbp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRbp();
		virtual ~PointerTrace_Hud_RegisterRbp() = default;
	};

	class PointerTrace_Hud_RegisterRbx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRbx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRbx();
		virtual ~PointerTrace_Hud_RegisterRbx() = default;
	};

	class PointerTrace_Hud_RegisterRcx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRcx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRcx();
		virtual ~PointerTrace_Hud_RegisterRcx() = default;
	};

	class PointerTrace_Hud_RegisterRdi : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRdi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRdi();
		virtual ~PointerTrace_Hud_RegisterRdi() = default;
	};

	class PointerTrace_Hud_RegisterRdx : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRdx* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRdx();
		virtual ~PointerTrace_Hud_RegisterRdx() = default;
	};

	class PointerTrace_Hud_RegisterRip : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRip* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRip();
		virtual ~PointerTrace_Hud_RegisterRip() = default;
	};

	class PointerTrace_Hud_RegisterRsi : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRsi* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRsi();
		virtual ~PointerTrace_Hud_RegisterRsi() = default;
	};

	class PointerTrace_Hud_RegisterRsp : public LocalizedString
	{
	public:
		static PointerTrace_Hud_RegisterRsp* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Hud_RegisterRsp();
		virtual ~PointerTrace_Hud_RegisterRsp() = default;
	};

	class PointerTrace_PointerTrace : public LocalizedString
	{
	public:
		static PointerTrace_PointerTrace* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_PointerTrace();
		virtual ~PointerTrace_PointerTrace() = default;
	};

	class PointerTrace_Segfault : public LocalizedString
	{
	public:
		static PointerTrace_Segfault* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Segfault();
		virtual ~PointerTrace_Segfault() = default;
	};

	class PointerTrace_ShiftHint : public LocalizedString
	{
	public:
		static PointerTrace_ShiftHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_ShiftHint();
		virtual ~PointerTrace_ShiftHint() = default;
	};

	class PointerTrace_TabHint : public LocalizedString
	{
	public:
		static PointerTrace_TabHint* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_TabHint();
		virtual ~PointerTrace_TabHint() = default;
	};

	class PointerTrace_Victory : public LocalizedString
	{
	public:
		static PointerTrace_Victory* create();
		LocalizedString* clone() override;
		std::string getStringIdentifier() override;
		
	protected:
		std::string getStringByLanguage(cocos2d::LanguageType languageType) override;
		
	private:
		PointerTrace_Victory();
		virtual ~PointerTrace_Victory() = default;
	};

}
